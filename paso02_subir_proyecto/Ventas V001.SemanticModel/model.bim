{
  "compatibilityLevel": 1601,
  "model": {
    "annotations": [
      {
        "name": "__PBI_TimeIntelligenceEnabled",
        "value": "0"
      },
      {
        "name": "PBIDesktopVersion",
        "value": "2.128.1380.0 (24.04)"
      },
      {
        "name": "PBI_QueryOrder",
        "value": "[\"TestList\",\"All Measures\",\"Tiempo\",\"POS\",\"Hotel\",\"Método de pago\",\"Categoría de artículo\",\"Impresora\",\"Impresora Cierres\",\"Venta\",\"Venta Productos\",\"Venta Pagos\",\"Estadística\",\"Archivo de ejemplo (2)\",\"Parámetro2\",\"Transformar archivo de ejemplo (2)\",\"Transformar archivo (2)\",\"Archivo de ejemplo (3)\",\"Parámetro3\",\"Transformar archivo de ejemplo (3)\",\"Transformar archivo (3)\",\"Archivo de ejemplo (4)\",\"Parámetro4\",\"Transformar archivo de ejemplo (4)\",\"Transformar archivo (4)\",\"Archivo de ejemplo (6)\",\"Parámetro6\",\"Transformar archivo de ejemplo (6)\",\"Transformar archivo (6)\",\"Archivo de ejemplo (7)\",\"Parámetro7\",\"Transformar archivo de ejemplo (7)\",\"Transformar archivo (7)\",\"Archivo de ejemplo (8)\",\"Parámetro8\",\"Transformar archivo de ejemplo (8)\",\"Transformar archivo (8)\",\"Archivo de ejemplo (9)\",\"Parámetro9\",\"Transformar archivo de ejemplo (9)\",\"Transformar archivo (9)\",\"Archivo de ejemplo (10)\",\"Parámetro10\",\"Transformar archivo de ejemplo (10)\",\"Transformar archivo (10)\",\"Archivo de ejemplo (11)\",\"Parámetro11\",\"Transformar archivo de ejemplo (11)\",\"Transformar archivo (11)\",\"Archivo de ejemplo (12)\",\"Parámetro12\",\"Transformar archivo de ejemplo (12)\",\"Transformar archivo (12)\",\"Archivo de ejemplo (14)\",\"Parámetro14\",\"Transformar archivo de ejemplo (14)\",\"Transformar archivo (14)\"]"
      },
      {
        "name": "__TEdtr",
        "value": "1"
      },
      {
        "name": "PBI_ProTooling",
        "value": "[\"CalcGroup\",\"DaxQueryView_Desktop\",\"WebModelingEdit\",\"DevMode\"]"
      }
    ],
    "culture": "es-ES",
    "cultures": [
      {
        "name": "es-ES",
        "linguisticMetadata": {
          "content": {
            "Entities": {
              "calendario_creacion_comanda": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Calendario"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "calendario": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "calendario_creacion_comanda.año": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Calendario",
                    "ConceptualProperty": "Año"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "año": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "calendario_creacion_comanda.año_hierarchy": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Calendario",
                    "Hierarchy": "Año Hierarchy"
                  }
                },
                "SemanticType": "Time",
                "State": "Generated",
                "Terms": [
                  {
                    "año hierarchy": {
                      "State": "Generated"
                    }
                  },
                  {
                    "año ladder": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "año grading": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "año order": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "año pyramid": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  }
                ]
              },
              "calendario_creacion_comanda.año_hierarchy.año": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Calendario",
                    "Hierarchy": "Año Hierarchy",
                    "HierarchyLevel": "Año"
                  }
                },
                "SemanticType": "Time",
                "State": "Generated",
                "Terms": [
                  {
                    "año": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "calendario_creacion_comanda.año_hierarchy.cuarto_año": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Calendario",
                    "Hierarchy": "Año Hierarchy",
                    "HierarchyLevel": "Cuarto Año"
                  }
                },
                "SemanticType": "Time",
                "State": "Generated",
                "Terms": [
                  {
                    "cuarto año": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "calendario_creacion_comanda.año_hierarchy.fecha": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Calendario",
                    "Hierarchy": "Año Hierarchy",
                    "HierarchyLevel": "Fecha"
                  }
                },
                "SemanticType": "Time",
                "State": "Generated",
                "Terms": [
                  {
                    "fecha": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "calendario_creacion_comanda.año_hierarchy.mes_año": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Calendario",
                    "Hierarchy": "Año Hierarchy",
                    "HierarchyLevel": "Mes Año"
                  }
                },
                "SemanticType": "Time",
                "State": "Generated",
                "Terms": [
                  {
                    "mes año": {
                      "State": "Generated"
                    }
                  },
                  {
                    "me año": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.78
                    }
                  }
                ]
              },
              "calendario_creacion_comanda.cuarto": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Calendario",
                    "ConceptualProperty": "Cuarto"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "cuarto": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "calendario_creacion_comanda.cuarto_año": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Calendario",
                    "ConceptualProperty": "Año Cuarto"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "cuarto año": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "calendario_creacion_comanda.cuarto_año_numero": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Calendario",
                    "ConceptualProperty": "Año Cuarto numero"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "cuarto año numero": {
                      "State": "Generated"
                    }
                  }
                ],
                "Visibility": {
                  "Value": "Hidden"
                }
              },
              "calendario_creacion_comanda.cuarto_numero": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Calendario",
                    "ConceptualProperty": "Cuarto numero"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "cuarto numero": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "calendario_creacion_comanda.day": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Calendario",
                    "ConceptualProperty": "Día"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "día": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "calendario_creacion_comanda.fecha": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Calendario",
                    "ConceptualProperty": "Fecha"
                  }
                },
                "SemanticType": "Time",
                "State": "Generated",
                "Terms": [
                  {
                    "fecha": {
                      "State": "Generated"
                    }
                  },
                  {
                    "date": {
                      "State": "Generated",
                      "Weight": 0.7
                    }
                  }
                ]
              },
              "calendario_creacion_comanda.me": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Calendario",
                    "ConceptualProperty": "Mes numero"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "mes numero": {
                      "State": "Generated"
                    }
                  },
                  {
                    "me numero": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.78
                    }
                  }
                ]
              },
              "calendario_creacion_comanda.me1": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Calendario",
                    "ConceptualProperty": "Mes"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "me": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "calendario_creacion_comanda.mes_anio": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Calendario",
                    "ConceptualProperty": "Año Mes"
                  }
                },
                "SemanticType": "Time",
                "State": "Generated",
                "Terms": [
                  {
                    "mes año": {
                      "State": "Generated"
                    }
                  },
                  {
                    "me año": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.78
                    }
                  },
                  {
                    "date": {
                      "State": "Generated",
                      "Weight": 0.7
                    }
                  }
                ]
              },
              "calendario_creacion_comanda.semana": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Calendario",
                    "ConceptualProperty": "Día semana"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "día semana": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "calendario_creacion_comanda.semana_natural": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Calendario",
                    "ConceptualProperty": "Semana natural"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "semana natural": {
                      "State": "Generated"
                    }
                  },
                  {
                    "semana_natural": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  }
                ]
              },
              "calendario_creacion_comanda.semana_num": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Calendario",
                    "ConceptualProperty": "Día semana numero"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "semana num": {
                      "State": "Generated"
                    }
                  },
                  {
                    "Semana_num": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "semana number": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  }
                ]
              },
              "estadística": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Estadística"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "estadística": {
                      "State": "Generated"
                    }
                  }
                ],
                "Visibility": {
                  "Value": "Hidden"
                }
              },
              "hotel": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Hotel"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "hotel": {
                      "State": "Generated"
                    }
                  },
                  {
                    "guesthouse": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "inn": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "hostel": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "roadhouse": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.466
                    }
                  },
                  {
                    "motel": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.466
                    }
                  },
                  {
                    "tavern": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.466
                    }
                  },
                  {
                    "pub": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.466
                    }
                  },
                  {
                    "lodge": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.452
                    }
                  },
                  {
                    "resort": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.452
                    }
                  }
                ]
              },
              "hotel.hotel": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Hotel",
                    "ConceptualProperty": "Hotel"
                  }
                },
                "NameType": "Name",
                "State": "Generated",
                "Terms": [
                  {
                    "hotel": {
                      "State": "Generated"
                    }
                  },
                  {
                    "hotel name": {
                      "State": "Generated"
                    }
                  },
                  {
                    "guesthouse": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "inn": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "hostel": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "roadhouse": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.466
                    }
                  },
                  {
                    "motel": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.466
                    }
                  },
                  {
                    "tavern": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.466
                    }
                  },
                  {
                    "pub": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.466
                    }
                  },
                  {
                    "lodge": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.452
                    }
                  },
                  {
                    "resort": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.452
                    }
                  }
                ]
              },
              "hotel.nombre_hotel": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Hotel",
                    "ConceptualProperty": "Nombre hotel"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "nombre hotel": {
                      "State": "Generated"
                    }
                  },
                  {
                    "nombre guesthouse": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "nombre inn": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "nombre hostel": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "nombre roadhouse": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.475
                    }
                  },
                  {
                    "nombre motel": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.475
                    }
                  },
                  {
                    "nombre tavern": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.475
                    }
                  },
                  {
                    "nombre pub": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.475
                    }
                  },
                  {
                    "nombre lodge": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.461
                    }
                  },
                  {
                    "nombre resort": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.461
                    }
                  }
                ]
              },
              "impresora": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Impresora"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "impresora": {
                      "State": "Generated",
                      "Weight": 0.87
                    }
                  }
                ]
              },
              "impresora.impresora": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Impresora",
                    "ConceptualProperty": "Impresora"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "impresora": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "impresora_cierre": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Impresora Cierres"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "impresora cierre": {
                      "State": "Generated"
                    }
                  },
                  {
                    "ImpresoraCierres": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  }
                ]
              },
              "impresora_cierre.día_de_venta": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Impresora Cierres",
                    "ConceptualProperty": "Día de venta"
                  }
                },
                "SemanticType": "Time",
                "State": "Generated",
                "Terms": [
                  {
                    "día de venta": {
                      "State": "Generated"
                    }
                  },
                  {
                    "date": {
                      "State": "Generated",
                      "Weight": 0.7
                    }
                  }
                ]
              },
              "medida": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "medida": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "medida.artículos_vendidos_ctdad": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "Artículos (ctdad)"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "artículos vendidos (ctdad)": {
                      "State": "Generated"
                    }
                  },
                  {
                    "artículos vendidos": {
                      "State": "Generated",
                      "Weight": 0.75
                    }
                  }
                ]
              },
              "medida.devoluciones": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "Devoluciones (€)"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "devoluciones": {
                      "State": "Generated"
                    }
                  },
                  {
                    "devoluciones (€)": {
                      "State": "Generated"
                    }
                  }
                ],
                "Units": [
                  "euro",
                  "€"
                ]
              },
              "medida.devoluciones_ctdad": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "Devoluciones (ctdad)"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "devoluciones (ctdad)": {
                      "State": "Generated"
                    }
                  },
                  {
                    "devoluciones": {
                      "State": "Generated",
                      "Weight": 0.75
                    }
                  }
                ]
              },
              "medida.devolución_prod": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "Devolución/Producción (%)"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "devolución (%prod)": {
                      "State": "Generated"
                    }
                  },
                  {
                    "devolución": {
                      "State": "Generated",
                      "Weight": 0.75
                    }
                  },
                  {
                    "devolución ( percentage prod)": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.624
                    }
                  },
                  {
                    "devolución ( pct prod)": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.605
                    }
                  }
                ]
              },
              "medida.importe_bruto": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "Importe bruto (€)"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "importe bruto": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "medida.importe_neto": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "Importe neto (€)"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "importe neto": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "medida.importe_ticket": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "Importe ticket (€)"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "importe ticket": {
                      "State": "Generated"
                    }
                  },
                  {
                    "importe coupon": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "importe permit": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "importe voucher": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "importe receipt": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "importe marker": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.475
                    }
                  },
                  {
                    "importe sticker": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.475
                    }
                  },
                  {
                    "importe label": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.461
                    }
                  },
                  {
                    "importe tag": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.461
                    }
                  },
                  {
                    "importe tab": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.461
                    }
                  },
                  {
                    "importe docket": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.461
                    }
                  }
                ]
              },
              "medida.metodos_de_pago": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "Metodos de pago"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "metodos de pago": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "medida.pax": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "Pax"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "pax": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "medida.producción": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "Producción (€)"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "producción": {
                      "State": "Generated"
                    }
                  },
                  {
                    "producción (€)": {
                      "State": "Generated"
                    }
                  }
                ],
                "Units": [
                  "euro",
                  "€"
                ]
              },
              "medida.productos": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "Productos (ctdad)"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "productos": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "medida.ratio_PAX_POS_producción": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "Ratio PAX POS Producción (€)"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "ratio PAX POS producción": {
                      "State": "Generated"
                    }
                  },
                  {
                    "ratio PAX POS producción (€)": {
                      "State": "Generated"
                    }
                  }
                ],
                "Units": [
                  "euro",
                  "€"
                ]
              },
              "medida.ticket_medio": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "Ticket medio (€)"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "ticket medio": {
                      "State": "Generated"
                    }
                  },
                  {
                    "ticket medio (€)": {
                      "State": "Generated"
                    }
                  }
                ],
                "Units": [
                  "euro",
                  "€"
                ]
              },
              "medida.tickets_ctdad": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "Tickets (ctdad)"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "tickets (ctdad)": {
                      "State": "Generated"
                    }
                  },
                  {
                    "tickets": {
                      "State": "Generated",
                      "Weight": 0.75
                    }
                  }
                ]
              },
              "medida.v_Artículos_vendidos__ctdad__FormatString_artículos_vendidos_ctdad_FormatString": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "_Artículos vendidos (ctdad) FormatString"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "_artículos vendidos (ctdad) FormatString": {
                      "State": "Generated"
                    }
                  }
                ],
                "Visibility": {
                  "Value": "Hidden"
                }
              },
              "medida.v_Devoluciones_____FormatString_devoluciones__FormatString": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "_Devoluciones (€) FormatString"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "_devoluciones (€) FormatString": {
                      "State": "Generated"
                    }
                  }
                ],
                "Visibility": {
                  "Value": "Hidden"
                }
              },
              "medida.v_Devoluciones__ctdad__FormatString_devoluciones_ctdad_FormatString": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "_Devoluciones (ctdad) FormatString"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "_devoluciones (ctdad) FormatString": {
                      "State": "Generated"
                    }
                  }
                ],
                "Visibility": {
                  "Value": "Hidden"
                }
              },
              "medida.v_Devolución___prod__FormatString_devolución_prod_FormatString": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "_Devolución (%prod) FormatString"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "_devolución (%prod) FormatString": {
                      "State": "Generated"
                    }
                  }
                ],
                "Visibility": {
                  "Value": "Hidden"
                }
              },
              "medida.v_Importe_bruto_FormatString_importe_bruto_FormatString": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "_Importe bruto FormatString"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "_importe bruto FormatString": {
                      "State": "Generated"
                    }
                  }
                ],
                "Visibility": {
                  "Value": "Hidden"
                }
              },
              "medida.v_Importe_neto_FormatString_importe_neto_FormatString": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "_Importe neto FormatString"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "_importe neto FormatString": {
                      "State": "Generated"
                    }
                  }
                ],
                "Visibility": {
                  "Value": "Hidden"
                }
              },
              "medida.v_Importe_ticket_FormatString_importe_ticket_FormatString": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "_Importe ticket FormatString"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "_importe ticket FormatString": {
                      "State": "Generated"
                    }
                  }
                ],
                "Visibility": {
                  "Value": "Hidden"
                }
              },
              "medida.v_Metodos_de_pago_FormatString_metodos_de_pago_FormatString": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "_Metodos de pago FormatString"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "_metodos de pago FormatString": {
                      "State": "Generated"
                    }
                  }
                ],
                "Visibility": {
                  "Value": "Hidden"
                }
              },
              "medida.v_Pax_FormatString_pax_FormatString": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "_Pax FormatString"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "_pax FormatString": {
                      "State": "Generated"
                    }
                  }
                ],
                "Visibility": {
                  "Value": "Hidden"
                }
              },
              "medida.v_Producción_____FormatString_producción__FormatString": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "_Producción (€) FormatString"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "_producción (€) FormatString": {
                      "State": "Generated"
                    }
                  }
                ],
                "Visibility": {
                  "Value": "Hidden"
                }
              },
              "medida.v_Productos_FormatString_productos_FormatString": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "_Productos FormatString"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "_productos FormatString": {
                      "State": "Generated"
                    }
                  }
                ],
                "Visibility": {
                  "Value": "Hidden"
                }
              },
              "medida.v_Ratio_PAX_POS_Producción_____FormatString_ratio_PAX_POS_producción__FormatString": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "_Ratio PAX POS Producción (€) FormatString"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "_ratio PAX POS producción (€) FormatString": {
                      "State": "Generated"
                    }
                  }
                ],
                "Visibility": {
                  "Value": "Hidden"
                }
              },
              "medida.v_Ticket_medio_____FormatString_ticket_medio__FormatString": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "_Ticket medio (€) FormatString"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "_ticket medio (€) FormatString": {
                      "State": "Generated"
                    }
                  }
                ],
                "Visibility": {
                  "Value": "Hidden"
                }
              },
              "medida.v_Tickets__ctdad__FormatString_tickets_ctdad_FormatString": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "_Tickets (ctdad) FormatString"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "_tickets (ctdad) FormatString": {
                      "State": "Generated"
                    }
                  }
                ],
                "Visibility": {
                  "Value": "Hidden"
                }
              },
              "medida.v_Venta_PAX_FormatString_venta_PAX_FormatString": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "_Venta/PAX FormatString"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "_venta/PAX FormatString": {
                      "State": "Generated"
                    }
                  },
                  {
                    "_venta": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "_ venta PAX FormatString": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "PAX FormatString": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  }
                ],
                "Visibility": {
                  "Value": "Hidden"
                }
              },
              "medida.v_Venta_____FormatString_venta__FormatString": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "_Venta (€) FormatString"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "_venta (€) FormatString": {
                      "State": "Generated"
                    }
                  }
                ],
                "Visibility": {
                  "Value": "Hidden"
                }
              },
              "medida.v_Venta_con_impuesto_____FormatString_venta_con_impuesto__FormatString": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "_Venta con impuesto (€) FormatString"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "_venta con impuesto (€) FormatString": {
                      "State": "Generated"
                    }
                  }
                ],
                "Visibility": {
                  "Value": "Hidden"
                }
              },
              "medida.venta": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "Venta (€)"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "venta": {
                      "State": "Generated"
                    }
                  },
                  {
                    "venta (€)": {
                      "State": "Generated"
                    }
                  }
                ],
                "Units": [
                  "euro",
                  "€"
                ]
              },
              "medida.venta_PAX": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "Venta/PAX (€)"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "venta/PAX": {
                      "State": "Generated"
                    }
                  },
                  {
                    "venta PAX": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  }
                ]
              },
              "medida.venta_con_impuesto": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "All Measures",
                    "ConceptualProperty": "Venta con impuesto (€)"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "venta con impuesto": {
                      "State": "Generated"
                    }
                  },
                  {
                    "venta con impuesto (€)": {
                      "State": "Generated"
                    }
                  }
                ],
                "Units": [
                  "euro",
                  "€"
                ]
              },
              "medidas_empleadas.venta_pax_": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Medidas empleadas",
                    "ConceptualProperty": "Venta/PAX."
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Venta/PAX": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "pos": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "POS"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "pos": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "test_list": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "TestList"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "test list": {
                      "State": "Generated"
                    }
                  },
                  {
                    "TestList": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  },
                  {
                    "test chronology": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "test directory": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "test catalog": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "test catalogue": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "test inventory": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "test record": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  }
                ]
              },
              "test_list.allowed_variance_": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "TestList",
                    "ConceptualProperty": "Allowed Variance %"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "allowed variance %": {
                      "State": "Generated"
                    }
                  },
                  {
                    "allowed variance percentage": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.762
                    }
                  },
                  {
                    "allowed variance pct": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.739
                    }
                  }
                ],
                "Visibility": {
                  "Value": "Hidden"
                }
              },
              "test_list.category": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "TestList",
                    "ConceptualProperty": "Category"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "category": {
                      "State": "Generated"
                    }
                  },
                  {
                    "classification": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.736
                    }
                  },
                  {
                    "class": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "type": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "grouping": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  },
                  {
                    "kind": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.714
                    }
                  }
                ],
                "Visibility": {
                  "Value": "Hidden"
                }
              },
              "test_list.expected_value": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "TestList",
                    "ConceptualProperty": "Expected Value"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "expected value": {
                      "State": "Generated"
                    }
                  },
                  {
                    "value": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "expected assessment": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "assessment": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "expected worth": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "expected price": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "expected cost": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "expected charge": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "expected rate": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "worth": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "price": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  },
                  {
                    "cost": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  }
                ],
                "Visibility": {
                  "Value": "Hidden"
                }
              },
              "test_list.priority": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "TestList",
                    "ConceptualProperty": "Priority"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "priority": {
                      "State": "Generated"
                    }
                  },
                  {
                    "importance": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "precedence": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "urgency": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "significance": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "primacy": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "import": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  }
                ],
                "Visibility": {
                  "Value": "Hidden"
                }
              },
              "test_list.test_DAX_code": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "TestList",
                    "ConceptualProperty": "Generated DAX Code"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "test DAX code": {
                      "State": "Generated"
                    }
                  },
                  {
                    "DAX code": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "test dax id": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.762
                    }
                  },
                  {
                    "dax id": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "test dax key": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.739
                    }
                  },
                  {
                    "dax key": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  }
                ]
              },
              "test_list.test_ID": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "TestList",
                    "ConceptualProperty": "Test ID"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "test ID": {
                      "State": "Generated"
                    }
                  },
                  {
                    "test": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "test identification": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "test identity": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "test identifier": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.75
                    }
                  },
                  {
                    "test credential": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "examination": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "exam": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "assessment": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "investigation": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "analysis": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "quiz": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  }
                ]
              },
              "test_list.test_actual_variance_": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "TestList",
                    "ConceptualProperty": "Variance %"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "test actual variance %": {
                      "State": "Generated"
                    }
                  },
                  {
                    "test actual variance percentage": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.771
                    }
                  },
                  {
                    "test actual variance pct": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.748
                    }
                  },
                  {
                    "test real variance %": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  },
                  {
                    "test existent variance %": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  },
                  {
                    "test tangible variance %": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  }
                ]
              },
              "test_list.test_measure_actual_value": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "TestList",
                    "ConceptualProperty": "Test Measure Actual Value"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "test measure actual value": {
                      "State": "Generated"
                    }
                  },
                  {
                    "value": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "actual value": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "measure actual value": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "test measure real value": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  },
                  {
                    "test measure existent value": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  },
                  {
                    "test measure tangible value": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.599
                    }
                  },
                  {
                    "measure real value": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.591
                    }
                  },
                  {
                    "measure existent value": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.591
                    }
                  },
                  {
                    "measure tangible value": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.591
                    }
                  },
                  {
                    "real value": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.582
                    }
                  },
                  {
                    "existent value": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.582
                    }
                  },
                  {
                    "tangible value": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.582
                    }
                  },
                  {
                    "test measure actual assessment": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.514
                    }
                  }
                ]
              },
              "test_list.test_name": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "TestList",
                    "ConceptualProperty": "Test Name"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "test name": {
                      "State": "Generated"
                    }
                  },
                  {
                    "test": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "test nickname": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "test title": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "test label": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "test tag": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.727
                    }
                  },
                  {
                    "examination": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "exam": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "assessment": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "investigation": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "analysis": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.491
                    }
                  },
                  {
                    "quiz": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.476
                    }
                  }
                ],
                "Visibility": {
                  "Value": "Hidden"
                }
              },
              "test_list.test_passed": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "TestList",
                    "ConceptualProperty": "Passed"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "test passed": {
                      "State": "Generated"
                    }
                  },
                  {
                    "examination passed": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "exam passed": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "assessment passed": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "investigation passed": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "analysis passed": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "quiz passed": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "trial passed": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "check passed": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "experiment passed": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  },
                  {
                    "assay passed": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.485
                    }
                  }
                ]
              },
              "test_list.test_passed_": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "TestList",
                    "ConceptualProperty": "Passed %"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "test passed %": {
                      "State": "Generated"
                    }
                  },
                  {
                    "test passed percentage": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.762
                    }
                  },
                  {
                    "test passed pct": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.739
                    }
                  }
                ]
              },
              "test_list.v_Test_Actual_Variance___FormatString_test_actual_variance__FormatString": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "TestList",
                    "ConceptualProperty": "_Test Actual Variance % FormatString"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "_test actual variance % FormatString": {
                      "State": "Generated"
                    }
                  }
                ],
                "Visibility": {
                  "Value": "Hidden"
                }
              },
              "test_list.v_Test_DAX_Code_FormatString_test_DAX_code_FormatString": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "TestList",
                    "ConceptualProperty": "_Test DAX Code FormatString"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "_test DAX code FormatString": {
                      "State": "Generated"
                    }
                  },
                  {
                    "_test dax id formatstring": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.624
                    }
                  },
                  {
                    "_test dax key formatstring": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.605
                    }
                  }
                ],
                "Visibility": {
                  "Value": "Hidden"
                }
              },
              "test_list.v_Test_Measure_Actual_Value_FormatString_test_measure_actual_value_FormatString": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "TestList",
                    "ConceptualProperty": "_Test Measure Actual Value FormatString"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "_test measure actual value FormatString": {
                      "State": "Generated"
                    }
                  }
                ],
                "Visibility": {
                  "Value": "Hidden"
                }
              },
              "test_list.v_Test_Passed_FormatString_test_passed_FormatString": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "TestList",
                    "ConceptualProperty": "_Test Passed FormatString"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "_test passed FormatString": {
                      "State": "Generated"
                    }
                  }
                ],
                "Visibility": {
                  "Value": "Hidden"
                }
              },
              "test_list.v_Test_Passed___FormatString_test_passed__FormatString": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "TestList",
                    "ConceptualProperty": "_Test Passed % FormatString"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "_test passed % FormatString": {
                      "State": "Generated"
                    }
                  },
                  {
                    "_test passed percentage formatstring": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.624
                    }
                  },
                  {
                    "_test passed pct formatstring": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.605
                    }
                  }
                ],
                "Visibility": {
                  "Value": "Hidden"
                }
              },
              "time_intelligence": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "cg_TimeIntelligence"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "time intelligence": {
                      "State": "Generated"
                    }
                  },
                  {
                    "intelligence": {
                      "State": "Generated",
                      "Weight": 0.97
                    }
                  },
                  {
                    "duration intelligence": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.6
                    }
                  },
                  {
                    "interval intelligence": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.6
                    }
                  },
                  {
                    "moment intelligence": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.6
                    }
                  },
                  {
                    "period intelligence": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.582
                    }
                  },
                  {
                    "timetable intelligence": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.582
                    }
                  },
                  {
                    "time intellect": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "time acumen": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "time aptitude": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "time astuteness": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  },
                  {
                    "time cleverness": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.5
                    }
                  }
                ]
              },
              "time_intelligence.ordinal": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "cg_TimeIntelligence",
                    "ConceptualProperty": "Ordinal"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "ordinal": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "time_intelligence.period": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "cg_TimeIntelligence",
                    "ConceptualProperty": "Period"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "period": {
                      "State": "Generated"
                    }
                  },
                  {
                    "era": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.466
                    }
                  },
                  {
                    "epoch": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.466
                    }
                  },
                  {
                    "age": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.452
                    }
                  },
                  {
                    "stage": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.452
                    }
                  },
                  {
                    "phase": {
                      "Source": {
                        "Agent": "Thesaurus"
                      },
                      "State": "Suggested",
                      "Type": "Noun",
                      "Weight": 0.452
                    }
                  }
                ]
              },
              "venta": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Venta"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "venta": {
                      "State": "Generated",
                      "Weight": 0.87
                    }
                  }
                ]
              },
              "venta_pago": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Venta Pagos"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "venta pago": {
                      "State": "Generated"
                    }
                  },
                  {
                    "VentaPagos": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  }
                ]
              },
              "venta_pago.precio": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Venta Pagos",
                    "ConceptualProperty": "Precio"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "precio": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "venta_producto": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Venta Productos"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "venta producto": {
                      "State": "Generated"
                    }
                  },
                  {
                    "VentaProductos": {
                      "State": "Generated",
                      "Type": "Noun",
                      "Weight": 0.99
                    }
                  }
                ]
              },
              "venta_producto.cantidad": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Venta Productos",
                    "ConceptualProperty": "Cantidad"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "cantidad": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "venta_producto.precio_bruto": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Venta Productos",
                    "ConceptualProperty": "Precio bruto"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "precio bruto": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "venta_producto.precio_neto": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Venta Productos",
                    "ConceptualProperty": "Precio neto"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "precio neto": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "venta_producto.precio_producto": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Venta Productos",
                    "ConceptualProperty": "Precio producto"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "precio producto": {
                      "State": "Generated"
                    }
                  }
                ]
              },
              "venta_producto.vendedor_producto": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Venta Productos",
                    "ConceptualProperty": "Vendedor producto"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "vendedor producto": {
                      "State": "Generated"
                    }
                  }
                ]
              }
            },
            "Language": "en-US",
            "Relationships": {
              "calendario_creacion_comanda_año_hierarchy_has_año": {
                "Binding": {
                  "ConceptualEntity": "Calendario"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "calendario_creacion_comanda.año_hierarchy.año"
                      },
                      "Subject": {
                        "Role": "calendario_creacion_comanda.año_hierarchy"
                      }
                    },
                    "ID": "año_hierarchies_have_años",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "calendario_creacion_comanda.año_hierarchy": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda.año_hierarchy"
                    }
                  },
                  "calendario_creacion_comanda.año_hierarchy.año": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda.año_hierarchy.año"
                    }
                  }
                },
                "State": "Generated"
              },
              "calendario_creacion_comanda_año_hierarchy_has_cuarto_año": {
                "Binding": {
                  "ConceptualEntity": "Calendario"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "calendario_creacion_comanda.año_hierarchy.cuarto_año"
                      },
                      "Subject": {
                        "Role": "calendario_creacion_comanda.año_hierarchy"
                      }
                    },
                    "ID": "año_hierarchies_have_cuarto_años",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "calendario_creacion_comanda.año_hierarchy": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda.año_hierarchy"
                    }
                  },
                  "calendario_creacion_comanda.año_hierarchy.cuarto_año": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda.año_hierarchy.cuarto_año"
                    }
                  }
                },
                "State": "Generated"
              },
              "calendario_creacion_comanda_año_hierarchy_has_fecha": {
                "Binding": {
                  "ConceptualEntity": "Calendario"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "calendario_creacion_comanda.año_hierarchy.fecha"
                      },
                      "Subject": {
                        "Role": "calendario_creacion_comanda.año_hierarchy"
                      }
                    },
                    "ID": "año_hierarchies_have_fechas",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "calendario_creacion_comanda.año_hierarchy": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda.año_hierarchy"
                    }
                  },
                  "calendario_creacion_comanda.año_hierarchy.fecha": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda.año_hierarchy.fecha"
                    }
                  }
                },
                "State": "Generated"
              },
              "calendario_creacion_comanda_año_hierarchy_has_mes_año": {
                "Binding": {
                  "ConceptualEntity": "Calendario"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "calendario_creacion_comanda.año_hierarchy.mes_año"
                      },
                      "Subject": {
                        "Role": "calendario_creacion_comanda.año_hierarchy"
                      }
                    },
                    "ID": "año_hierarchies_have_mes_años",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "calendario_creacion_comanda.año_hierarchy": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda.año_hierarchy"
                    }
                  },
                  "calendario_creacion_comanda.año_hierarchy.mes_año": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda.año_hierarchy.mes_año"
                    }
                  }
                },
                "State": "Generated"
              },
              "calendario_creacion_comanda_has_año": {
                "Binding": {
                  "ConceptualEntity": "Calendario"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "calendario_creacion_comanda.año"
                      },
                      "Subject": {
                        "Role": "calendario_creacion_comanda"
                      }
                    },
                    "ID": "calendarios_have_años",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "calendario_creacion_comanda": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda"
                    }
                  },
                  "calendario_creacion_comanda.año": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda.año"
                    }
                  }
                },
                "State": "Generated"
              },
              "calendario_creacion_comanda_has_año_hierarchy": {
                "Binding": {
                  "ConceptualEntity": "Calendario"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "calendario_creacion_comanda.año_hierarchy"
                      },
                      "Subject": {
                        "Role": "calendario_creacion_comanda"
                      }
                    },
                    "ID": "calendarios_have_año_hierarchies",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "calendario_creacion_comanda": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda"
                    }
                  },
                  "calendario_creacion_comanda.año_hierarchy": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda.año_hierarchy"
                    }
                  }
                },
                "State": "Generated"
              },
              "calendario_creacion_comanda_has_cuarto": {
                "Binding": {
                  "ConceptualEntity": "Calendario"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "calendario_creacion_comanda.cuarto"
                      },
                      "Subject": {
                        "Role": "calendario_creacion_comanda"
                      }
                    },
                    "ID": "calendarios_have_cuarto",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "calendario_creacion_comanda": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda"
                    }
                  },
                  "calendario_creacion_comanda.cuarto": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda.cuarto"
                    }
                  }
                },
                "State": "Generated"
              },
              "calendario_creacion_comanda_has_cuarto_año": {
                "Binding": {
                  "ConceptualEntity": "Calendario"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "calendario_creacion_comanda.cuarto_año"
                      },
                      "Subject": {
                        "Role": "calendario_creacion_comanda"
                      }
                    },
                    "ID": "calendarios_have_cuarto_años",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "calendario_creacion_comanda": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda"
                    }
                  },
                  "calendario_creacion_comanda.cuarto_año": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda.cuarto_año"
                    }
                  }
                },
                "State": "Generated"
              },
              "calendario_creacion_comanda_has_cuarto_numero": {
                "Binding": {
                  "ConceptualEntity": "Calendario"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "calendario_creacion_comanda.cuarto_numero"
                      },
                      "Subject": {
                        "Role": "calendario_creacion_comanda"
                      }
                    },
                    "ID": "calendarios_have_cuarto_numeros",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "calendario_creacion_comanda": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda"
                    }
                  },
                  "calendario_creacion_comanda.cuarto_numero": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda.cuarto_numero"
                    }
                  }
                },
                "State": "Generated"
              },
              "calendario_creacion_comanda_has_day": {
                "Binding": {
                  "ConceptualEntity": "Calendario"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "calendario_creacion_comanda.day"
                      },
                      "Subject": {
                        "Role": "calendario_creacion_comanda"
                      }
                    },
                    "ID": "calendarios_have_días",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "calendario_creacion_comanda": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda"
                    }
                  },
                  "calendario_creacion_comanda.day": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda.day"
                    }
                  }
                },
                "State": "Generated"
              },
              "calendario_creacion_comanda_has_fecha": {
                "Binding": {
                  "ConceptualEntity": "Calendario"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "calendario_creacion_comanda.fecha"
                      },
                      "Subject": {
                        "Role": "calendario_creacion_comanda"
                      }
                    },
                    "ID": "calendarios_have_fechas",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "calendario_creacion_comanda": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda"
                    }
                  },
                  "calendario_creacion_comanda.fecha": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda.fecha"
                    }
                  }
                },
                "State": "Generated"
              },
              "calendario_creacion_comanda_has_me": {
                "Binding": {
                  "ConceptualEntity": "Calendario"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "calendario_creacion_comanda.me"
                      },
                      "Subject": {
                        "Role": "calendario_creacion_comanda"
                      }
                    },
                    "ID": "calendarios_have_mes_numeros",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "calendario_creacion_comanda": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda"
                    }
                  },
                  "calendario_creacion_comanda.me": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda.me"
                    }
                  }
                },
                "State": "Generated"
              },
              "calendario_creacion_comanda_has_me1": {
                "Binding": {
                  "ConceptualEntity": "Calendario"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "calendario_creacion_comanda.me1"
                      },
                      "Subject": {
                        "Role": "calendario_creacion_comanda"
                      }
                    },
                    "ID": "calendarios_have_me",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "calendario_creacion_comanda": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda"
                    }
                  },
                  "calendario_creacion_comanda.me1": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda.me1"
                    }
                  }
                },
                "State": "Generated"
              },
              "calendario_creacion_comanda_has_mes_anio": {
                "Binding": {
                  "ConceptualEntity": "Calendario"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "calendario_creacion_comanda.mes_anio"
                      },
                      "Subject": {
                        "Role": "calendario_creacion_comanda"
                      }
                    },
                    "ID": "calendarios_have_mes_años",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "calendario_creacion_comanda": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda"
                    }
                  },
                  "calendario_creacion_comanda.mes_anio": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda.mes_anio"
                    }
                  }
                },
                "State": "Generated"
              },
              "calendario_creacion_comanda_has_semana": {
                "Binding": {
                  "ConceptualEntity": "Calendario"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "calendario_creacion_comanda.semana"
                      },
                      "Subject": {
                        "Role": "calendario_creacion_comanda"
                      }
                    },
                    "ID": "calendarios_have_día_semanas",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "calendario_creacion_comanda": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda"
                    }
                  },
                  "calendario_creacion_comanda.semana": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda.semana"
                    }
                  }
                },
                "State": "Generated"
              },
              "calendario_creacion_comanda_has_semana_natural": {
                "Binding": {
                  "ConceptualEntity": "Calendario"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "calendario_creacion_comanda.semana_natural"
                      },
                      "Subject": {
                        "Role": "calendario_creacion_comanda"
                      }
                    },
                    "ID": "calendarios_have_semana_naturals",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "calendario_creacion_comanda": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda"
                    }
                  },
                  "calendario_creacion_comanda.semana_natural": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda.semana_natural"
                    }
                  }
                },
                "State": "Generated"
              },
              "calendario_creacion_comanda_has_semana_num": {
                "Binding": {
                  "ConceptualEntity": "Calendario"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "calendario_creacion_comanda.semana_num"
                      },
                      "Subject": {
                        "Role": "calendario_creacion_comanda"
                      }
                    },
                    "ID": "calendarios_have_semana_nums",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "calendario_creacion_comanda": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda"
                    }
                  },
                  "calendario_creacion_comanda.semana_num": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda.semana_num"
                    }
                  }
                },
                "State": "Generated"
              },
              "estadística_has_calendario_creacion_comanda": {
                "Binding": {
                  "ConceptualEntity": "Estadística"
                },
                "Roles": {
                  "calendario_creacion_comanda": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda"
                    }
                  },
                  "estadística": {
                    "Target": {
                      "Entity": "estadística"
                    }
                  }
                },
                "State": "Generated"
              },
              "estadística_has_hotel": {
                "Binding": {
                  "ConceptualEntity": "Estadística"
                },
                "Roles": {
                  "estadística": {
                    "Target": {
                      "Entity": "estadística"
                    }
                  },
                  "hotel": {
                    "Target": {
                      "Entity": "hotel"
                    }
                  }
                },
                "State": "Generated"
              },
              "estadística_has_medida_pax": {
                "Binding": {
                  "ConceptualEntity": "Estadística"
                },
                "Roles": {
                  "estadística": {
                    "Target": {
                      "Entity": "estadística"
                    }
                  },
                  "medida.pax": {
                    "Target": {
                      "Entity": "medida.pax"
                    }
                  }
                },
                "State": "Generated"
              },
              "estadística_has_medida_ratio_PAX_POS_producción": {
                "Binding": {
                  "ConceptualEntity": "Estadística"
                },
                "Roles": {
                  "estadística": {
                    "Target": {
                      "Entity": "estadística"
                    }
                  },
                  "medida.ratio_PAX_POS_producción": {
                    "Target": {
                      "Entity": "medida.ratio_PAX_POS_producción"
                    }
                  }
                },
                "State": "Generated"
              },
              "estadística_has_medida_venta_PAX": {
                "Binding": {
                  "ConceptualEntity": "Estadística"
                },
                "Roles": {
                  "estadística": {
                    "Target": {
                      "Entity": "estadística"
                    }
                  },
                  "medida.venta_PAX": {
                    "Target": {
                      "Entity": "medida.venta_PAX"
                    }
                  }
                },
                "State": "Generated"
              },
              "hotel_has_cadena_hotel": {
                "Binding": {
                  "ConceptualEntity": "Hotel"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "hotel.cadena_hotel"
                      },
                      "Subject": {
                        "Role": "hotel"
                      }
                    },
                    "ID": "hotels_have_cadena_hotels",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "hotel": {
                    "Target": {
                      "Entity": "hotel"
                    }
                  },
                  "hotel.cadena_hotel": {
                    "Target": {
                      "Entity": "hotel.cadena_hotel"
                    }
                  }
                },
                "State": "Generated"
              },
              "hotel_has_cadena_hotel_cif": {
                "Binding": {
                  "ConceptualEntity": "Hotel"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "hotel.cadena_hotel_cif"
                      },
                      "Subject": {
                        "Role": "hotel"
                      }
                    },
                    "ID": "hotels_have_cadena_hotel_cif",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "hotel": {
                    "Target": {
                      "Entity": "hotel"
                    }
                  },
                  "hotel.cadena_hotel_cif": {
                    "Target": {
                      "Entity": "hotel.cadena_hotel_cif"
                    }
                  }
                },
                "State": "Generated"
              },
              "hotel_has_ciudad_hotel": {
                "Binding": {
                  "ConceptualEntity": "Hotel"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "hotel.ciudad_hotel"
                      },
                      "Subject": {
                        "Role": "hotel"
                      }
                    },
                    "ID": "hotels_have_ciudad_hotels",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "hotel": {
                    "Target": {
                      "Entity": "hotel"
                    }
                  },
                  "hotel.ciudad_hotel": {
                    "Target": {
                      "Entity": "hotel.ciudad_hotel"
                    }
                  }
                },
                "State": "Generated"
              },
              "hotel_has_codigo_hotel": {
                "Binding": {
                  "ConceptualEntity": "Hotel"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "hotel.codigo_hotel"
                      },
                      "Subject": {
                        "Role": "hotel"
                      }
                    },
                    "ID": "hotels_have_codigo_hotels",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "hotel": {
                    "Target": {
                      "Entity": "hotel"
                    }
                  },
                  "hotel.codigo_hotel": {
                    "Target": {
                      "Entity": "hotel.codigo_hotel"
                    }
                  }
                },
                "State": "Generated"
              },
              "hotel_has_codigo_postal_hotel": {
                "Binding": {
                  "ConceptualEntity": "Hotel"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "hotel.codigo_postal_hotel"
                      },
                      "Subject": {
                        "Role": "hotel"
                      }
                    },
                    "ID": "hotels_have_codigo_postal_hotels",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "hotel": {
                    "Target": {
                      "Entity": "hotel"
                    }
                  },
                  "hotel.codigo_postal_hotel": {
                    "Target": {
                      "Entity": "hotel.codigo_postal_hotel"
                    }
                  }
                },
                "State": "Generated"
              },
              "hotel_has_correo_electrónico_hotel": {
                "Binding": {
                  "ConceptualEntity": "Hotel"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "hotel.correo_electrónico_hotel"
                      },
                      "Subject": {
                        "Role": "hotel"
                      }
                    },
                    "ID": "hotels_have_correo_electrónico_hotels",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "hotel": {
                    "Target": {
                      "Entity": "hotel"
                    }
                  },
                  "hotel.correo_electrónico_hotel": {
                    "Target": {
                      "Entity": "hotel.correo_electrónico_hotel"
                    }
                  }
                },
                "State": "Generated"
              },
              "hotel_has_descripción_hotel": {
                "Binding": {
                  "ConceptualEntity": "Hotel"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "hotel.descripción_hotel"
                      },
                      "Subject": {
                        "Role": "hotel"
                      }
                    },
                    "ID": "hotels_have_descripción_hotels",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "hotel": {
                    "Target": {
                      "Entity": "hotel"
                    }
                  },
                  "hotel.descripción_hotel": {
                    "Target": {
                      "Entity": "hotel.descripción_hotel"
                    }
                  }
                },
                "State": "Generated"
              },
              "hotel_has_dirección_hotel": {
                "Binding": {
                  "ConceptualEntity": "Hotel"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "hotel.dirección_hotel"
                      },
                      "Subject": {
                        "Role": "hotel"
                      }
                    },
                    "ID": "hotels_have_dirección_hotels",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "hotel": {
                    "Target": {
                      "Entity": "hotel"
                    }
                  },
                  "hotel.dirección_hotel": {
                    "Target": {
                      "Entity": "hotel.dirección_hotel"
                    }
                  }
                },
                "State": "Generated"
              },
              "hotel_has_longitud_hotel": {
                "Binding": {
                  "ConceptualEntity": "Hotel"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "hotel.longitud_hotel"
                      },
                      "Subject": {
                        "Role": "hotel"
                      }
                    },
                    "ID": "hotels_have_longitud_hotels",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "hotel": {
                    "Target": {
                      "Entity": "hotel"
                    }
                  },
                  "hotel.longitud_hotel": {
                    "Target": {
                      "Entity": "hotel.longitud_hotel"
                    }
                  }
                },
                "State": "Generated"
              },
              "hotel_has_nombre_hotel": {
                "Binding": {
                  "ConceptualEntity": "Hotel"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "hotel.nombre_hotel"
                      },
                      "Subject": {
                        "Role": "hotel"
                      }
                    },
                    "ID": "hotels_have_nombre_hotels",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "hotel": {
                    "Target": {
                      "Entity": "hotel"
                    }
                  },
                  "hotel.nombre_hotel": {
                    "Target": {
                      "Entity": "hotel.nombre_hotel"
                    }
                  }
                },
                "State": "Generated"
              },
              "hotel_has_país_hotele": {
                "Binding": {
                  "ConceptualEntity": "Hotel"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "hotel.país_hotele"
                      },
                      "Subject": {
                        "Role": "hotel"
                      }
                    },
                    "ID": "hotels_have_país_hoteles",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "hotel": {
                    "Target": {
                      "Entity": "hotel"
                    }
                  },
                  "hotel.país_hotele": {
                    "Target": {
                      "Entity": "hotel.país_hotele"
                    }
                  }
                },
                "State": "Generated"
              },
              "hotel_has_provincia_hotel": {
                "Binding": {
                  "ConceptualEntity": "Hotel"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "hotel.provincia_hotel"
                      },
                      "Subject": {
                        "Role": "hotel"
                      }
                    },
                    "ID": "hotels_have_provincia_hotels",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "hotel": {
                    "Target": {
                      "Entity": "hotel"
                    }
                  },
                  "hotel.provincia_hotel": {
                    "Target": {
                      "Entity": "hotel.provincia_hotel"
                    }
                  }
                },
                "State": "Generated"
              },
              "hotel_has_teléfono_hotel": {
                "Binding": {
                  "ConceptualEntity": "Hotel"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "hotel.teléfono_hotel"
                      },
                      "Subject": {
                        "Role": "hotel"
                      }
                    },
                    "ID": "hotels_have_teléfono_hotels",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "hotel": {
                    "Target": {
                      "Entity": "hotel"
                    }
                  },
                  "hotel.teléfono_hotel": {
                    "Target": {
                      "Entity": "hotel.teléfono_hotel"
                    }
                  }
                },
                "State": "Generated"
              },
              "hotel_is_named_hotel": {
                "Binding": {
                  "ConceptualEntity": "Hotel"
                },
                "Phrasings": [
                  {
                    "ID": "hotels_are_names_IDs_of_hotels",
                    "Name": {
                      "Name": {
                        "Role": "hotel.hotel"
                      },
                      "Subject": {
                        "Role": "hotel"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  },
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "hotel.hotel"
                      },
                      "Subject": {
                        "Role": "hotel"
                      }
                    },
                    "ID": "hotels_have_hotels",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "hotel": {
                    "Target": {
                      "Entity": "hotel"
                    }
                  },
                  "hotel.hotel": {
                    "Target": {
                      "Entity": "hotel.hotel"
                    }
                  }
                },
                "State": "Generated"
              },
              "hotel_is_named_hotel_id": {
                "Binding": {
                  "ConceptualEntity": "Hotel"
                },
                "Phrasings": [
                  {
                    "ID": "hotel_ids_are_names_IDs_of_hotels",
                    "Name": {
                      "Name": {
                        "Role": "hotel.hotel_id"
                      },
                      "Subject": {
                        "Role": "hotel"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  },
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "hotel.hotel_id"
                      },
                      "Subject": {
                        "Role": "hotel"
                      }
                    },
                    "ID": "hotels_have_hotel_ids",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "hotel": {
                    "Target": {
                      "Entity": "hotel"
                    }
                  },
                  "hotel.hotel_id": {
                    "Target": {
                      "Entity": "hotel.hotel_id"
                    }
                  }
                },
                "State": "Generated"
              },
              "impresora_cierre_has_calendario_creacion_comanda": {
                "Binding": {
                  "ConceptualEntity": "Impresora Cierres"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "calendario_creacion_comanda"
                      },
                      "Subject": {
                        "Role": "impresora_cierre"
                      }
                    },
                    "ID": "impresora_cierres_have_calendarios",
                    "State": "Generated",
                    "Weight": 0.99
                  },
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "impresora_cierre"
                      },
                      "Subject": {
                        "Role": "calendario_creacion_comanda"
                      }
                    },
                    "ID": "calendarios_have_impresora_cierres",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "calendario_creacion_comanda": {
                    "Target": {
                      "Entity": "calendario_creacion_comanda"
                    }
                  },
                  "impresora_cierre": {
                    "Target": {
                      "Entity": "impresora_cierre"
                    }
                  }
                },
                "State": "Generated"
              },
              "impresora_cierre_has_día_de_venta": {
                "Binding": {
                  "ConceptualEntity": "Impresora Cierres"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "impresora_cierre.día_de_venta"
                      },
                      "Subject": {
                        "Role": "impresora_cierre"
                      }
                    },
                    "ID": "impresora_cierres_have_día_de_ventas",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "impresora_cierre": {
                    "Target": {
                      "Entity": "impresora_cierre"
                    }
                  },
                  "impresora_cierre.día_de_venta": {
                    "Target": {
                      "Entity": "impresora_cierre.día_de_venta"
                    }
                  }
                },
                "State": "Generated"
              },
              "impresora_cierre_has_fecha_de_cierre": {
                "Binding": {
                  "ConceptualEntity": "Impresora Cierres"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "impresora_cierre.fecha_de_cierre"
                      },
                      "Subject": {
                        "Role": "impresora_cierre"
                      }
                    },
                    "ID": "impresora_cierres_have_fecha_de_cierres",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "impresora_cierre": {
                    "Target": {
                      "Entity": "impresora_cierre"
                    }
                  },
                  "impresora_cierre.fecha_de_cierre": {
                    "Target": {
                      "Entity": "impresora_cierre.fecha_de_cierre"
                    }
                  }
                },
                "State": "Generated"
              },
              "impresora_cierre_has_printer_closing_id": {
                "Binding": {
                  "ConceptualEntity": "Impresora Cierres"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "impresora_cierre.printer_closing_id"
                      },
                      "Subject": {
                        "Role": "impresora_cierre"
                      }
                    },
                    "ID": "impresora_cierres_have_printer_closing_ids",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "impresora_cierre": {
                    "Target": {
                      "Entity": "impresora_cierre"
                    }
                  },
                  "impresora_cierre.printer_closing_id": {
                    "Target": {
                      "Entity": "impresora_cierre.printer_closing_id"
                    }
                  }
                },
                "State": "Generated"
              },
              "impresora_has_impresora": {
                "Binding": {
                  "ConceptualEntity": "Impresora"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "impresora.impresora"
                      },
                      "Subject": {
                        "Role": "impresora"
                      }
                    },
                    "ID": "impresoras_have_impresoras",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "impresora": {
                    "Target": {
                      "Entity": "impresora"
                    }
                  },
                  "impresora.impresora": {
                    "Target": {
                      "Entity": "impresora.impresora"
                    }
                  }
                },
                "State": "Generated"
              },
              "impresora_has_pos": {
                "Binding": {
                  "ConceptualEntity": "Impresora"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pos"
                      },
                      "Subject": {
                        "Role": "impresora"
                      }
                    },
                    "ID": "impresoras_have_pos",
                    "State": "Generated",
                    "Weight": 0.99
                  },
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "impresora"
                      },
                      "Subject": {
                        "Role": "pos"
                      }
                    },
                    "ID": "pos_have_impresoras",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "impresora": {
                    "Target": {
                      "Entity": "impresora"
                    }
                  },
                  "pos": {
                    "Target": {
                      "Entity": "pos"
                    }
                  }
                },
                "State": "Generated"
              },
              "impresora_has_printer_id": {
                "Binding": {
                  "ConceptualEntity": "Impresora"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "impresora.printer_id"
                      },
                      "Subject": {
                        "Role": "impresora"
                      }
                    },
                    "ID": "impresoras_have_printer_ids",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "impresora": {
                    "Target": {
                      "Entity": "impresora"
                    }
                  },
                  "impresora.printer_id": {
                    "Target": {
                      "Entity": "impresora.printer_id"
                    }
                  }
                },
                "State": "Generated"
              },
              "impresora_print_impresora_cierre": {
                "Binding": {
                  "ConceptualEntity": "Impresora Cierres"
                },
                "Phrasings": [
                  {
                    "ID": "impresoras_print_impresora_cierres",
                    "State": "Generated",
                    "Verb": {
                      "Object": {
                        "Role": "impresora_cierre"
                      },
                      "Subject": {
                        "Role": "impresora"
                      },
                      "Verbs": [
                        {
                          "print": {
                            "State": "Generated"
                          }
                        }
                      ]
                    },
                    "Weight": 0.75
                  },
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "impresora"
                      },
                      "Subject": {
                        "Role": "impresora_cierre"
                      }
                    },
                    "ID": "impresora_cierres_have_impresoras",
                    "State": "Generated",
                    "Weight": 0.99
                  },
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "impresora_cierre"
                      },
                      "Subject": {
                        "Role": "impresora"
                      }
                    },
                    "ID": "impresoras_have_impresora_cierres",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "impresora": {
                    "Nouns": [
                      {
                        "printer": {
                          "State": "Generated"
                        }
                      }
                    ],
                    "Target": {
                      "Entity": "impresora"
                    }
                  },
                  "impresora_cierre": {
                    "Target": {
                      "Entity": "impresora_cierre"
                    }
                  }
                },
                "State": "Generated"
              },
              "pos_has_hotel": {
                "Binding": {
                  "ConceptualEntity": "POS"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "hotel"
                      },
                      "Subject": {
                        "Role": "pos"
                      }
                    },
                    "ID": "pos_have_hotels",
                    "State": "Generated",
                    "Weight": 0.99
                  },
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pos"
                      },
                      "Subject": {
                        "Role": "hotel"
                      }
                    },
                    "ID": "hotels_have_pos",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "hotel": {
                    "Target": {
                      "Entity": "hotel"
                    }
                  },
                  "pos": {
                    "Target": {
                      "Entity": "pos"
                    }
                  }
                },
                "State": "Generated"
              },
              "pos_is_named_pos": {
                "Binding": {
                  "ConceptualEntity": "POS"
                },
                "Phrasings": [
                  {
                    "ID": "pos_are_names_IDs_of_pos",
                    "Name": {
                      "Name": {
                        "Role": "pos.pos"
                      },
                      "Subject": {
                        "Role": "pos"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  },
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pos.pos"
                      },
                      "Subject": {
                        "Role": "pos"
                      }
                    },
                    "ID": "pos_have_pos",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pos": {
                    "Target": {
                      "Entity": "pos"
                    }
                  },
                  "pos.pos": {
                    "Target": {
                      "Entity": "pos.pos"
                    }
                  }
                },
                "State": "Generated"
              },
              "pos_is_named_pos_id": {
                "Binding": {
                  "ConceptualEntity": "POS"
                },
                "Phrasings": [
                  {
                    "ID": "pos_ids_are_names_IDs_of_pos",
                    "Name": {
                      "Name": {
                        "Role": "pos.pos_id"
                      },
                      "Subject": {
                        "Role": "pos"
                      }
                    },
                    "State": "Generated",
                    "Weight": 0.99
                  },
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "pos.pos_id"
                      },
                      "Subject": {
                        "Role": "pos"
                      }
                    },
                    "ID": "pos_have_pos_ids",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "pos": {
                    "Target": {
                      "Entity": "pos"
                    }
                  },
                  "pos.pos_id": {
                    "Target": {
                      "Entity": "pos.pos_id"
                    }
                  }
                },
                "State": "Generated"
              },
              "test_list_has_test_DAX_code": {
                "Binding": {
                  "ConceptualEntity": "TestList"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "test_list.test_DAX_code"
                      },
                      "Subject": {
                        "Role": "test_list"
                      }
                    },
                    "ID": "test_lists_have_test_DAX_code",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "test_list": {
                    "Target": {
                      "Entity": "test_list"
                    }
                  },
                  "test_list.test_DAX_code": {
                    "Target": {
                      "Entity": "test_list.test_DAX_code"
                    }
                  }
                },
                "State": "Generated"
              },
              "test_list_has_test_ID": {
                "Binding": {
                  "ConceptualEntity": "TestList"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "test_list.test_ID"
                      },
                      "Subject": {
                        "Role": "test_list"
                      }
                    },
                    "ID": "test_lists_have_test_ID",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "test_list": {
                    "Target": {
                      "Entity": "test_list"
                    }
                  },
                  "test_list.test_ID": {
                    "Target": {
                      "Entity": "test_list.test_ID"
                    }
                  }
                },
                "State": "Generated"
              },
              "test_list_has_test_actual_variance_": {
                "Binding": {
                  "ConceptualEntity": "TestList"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "test_list.test_actual_variance_"
                      },
                      "Subject": {
                        "Role": "test_list"
                      }
                    },
                    "ID": "test_lists_have_test_actual_variance_",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "test_list": {
                    "Target": {
                      "Entity": "test_list"
                    }
                  },
                  "test_list.test_actual_variance_": {
                    "Target": {
                      "Entity": "test_list.test_actual_variance_"
                    }
                  }
                },
                "State": "Generated"
              },
              "test_list_has_test_measure_actual_value": {
                "Binding": {
                  "ConceptualEntity": "TestList"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "test_list.test_measure_actual_value"
                      },
                      "Subject": {
                        "Role": "test_list"
                      }
                    },
                    "ID": "test_lists_have_test_measure_actual_value",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "test_list": {
                    "Target": {
                      "Entity": "test_list"
                    }
                  },
                  "test_list.test_measure_actual_value": {
                    "Target": {
                      "Entity": "test_list.test_measure_actual_value"
                    }
                  }
                },
                "State": "Generated"
              },
              "test_list_has_test_passed": {
                "Binding": {
                  "ConceptualEntity": "TestList"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "test_list.test_passed"
                      },
                      "Subject": {
                        "Role": "test_list"
                      }
                    },
                    "ID": "test_lists_have_test_passed",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "test_list": {
                    "Target": {
                      "Entity": "test_list"
                    }
                  },
                  "test_list.test_passed": {
                    "Target": {
                      "Entity": "test_list.test_passed"
                    }
                  }
                },
                "State": "Generated"
              },
              "test_list_has_test_passed_": {
                "Binding": {
                  "ConceptualEntity": "TestList"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "test_list.test_passed_"
                      },
                      "Subject": {
                        "Role": "test_list"
                      }
                    },
                    "ID": "test_lists_have_test_passed_",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "test_list": {
                    "Target": {
                      "Entity": "test_list"
                    }
                  },
                  "test_list.test_passed_": {
                    "Target": {
                      "Entity": "test_list.test_passed_"
                    }
                  }
                },
                "State": "Generated"
              },
              "time_intelligence_has_ordinal": {
                "Binding": {
                  "ConceptualEntity": "cg_TimeIntelligence"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "time_intelligence.ordinal"
                      },
                      "Subject": {
                        "Role": "time_intelligence"
                      }
                    },
                    "ID": "time_intelligences_have_ordinals",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "time_intelligence": {
                    "Target": {
                      "Entity": "time_intelligence"
                    }
                  },
                  "time_intelligence.ordinal": {
                    "Target": {
                      "Entity": "time_intelligence.ordinal"
                    }
                  }
                },
                "State": "Generated"
              },
              "time_intelligence_has_period": {
                "Binding": {
                  "ConceptualEntity": "cg_TimeIntelligence"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "time_intelligence.period"
                      },
                      "Subject": {
                        "Role": "time_intelligence"
                      }
                    },
                    "ID": "time_intelligences_have_periods",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "time_intelligence": {
                    "Target": {
                      "Entity": "time_intelligence"
                    }
                  },
                  "time_intelligence.period": {
                    "Target": {
                      "Entity": "time_intelligence.period"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_has_bloqueo_de_pago": {
                "Binding": {
                  "ConceptualEntity": "Venta"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "venta.bloqueo_de_pago"
                      },
                      "Subject": {
                        "Role": "venta"
                      }
                    },
                    "ID": "ventas_have_bloqueo_de_pago",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "venta": {
                    "Target": {
                      "Entity": "venta"
                    }
                  },
                  "venta.bloqueo_de_pago": {
                    "Target": {
                      "Entity": "venta.bloqueo_de_pago"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_has_hora_apertura_venta": {
                "Binding": {
                  "ConceptualEntity": "Venta"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "venta.hora_apertura_venta"
                      },
                      "Subject": {
                        "Role": "venta"
                      }
                    },
                    "ID": "ventas_have_hora_apertura_ventas",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "venta": {
                    "Target": {
                      "Entity": "venta"
                    }
                  },
                  "venta.hora_apertura_venta": {
                    "Target": {
                      "Entity": "venta.hora_apertura_venta"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_has_hora_cierre_venta": {
                "Binding": {
                  "ConceptualEntity": "Venta"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "venta.hora_cierre_venta"
                      },
                      "Subject": {
                        "Role": "venta"
                      }
                    },
                    "ID": "ventas_have_hora_cierre_ventas",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "venta": {
                    "Target": {
                      "Entity": "venta"
                    }
                  },
                  "venta.hora_cierre_venta": {
                    "Target": {
                      "Entity": "venta.hora_cierre_venta"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_has_importe_bruto": {
                "Binding": {
                  "ConceptualEntity": "Venta"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "venta.importe_bruto"
                      },
                      "Subject": {
                        "Role": "venta"
                      }
                    },
                    "ID": "ventas_have_importe_brutos",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "venta": {
                    "Target": {
                      "Entity": "venta"
                    }
                  },
                  "venta.importe_bruto": {
                    "Target": {
                      "Entity": "venta.importe_bruto"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_has_importe_neto": {
                "Binding": {
                  "ConceptualEntity": "Venta"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "venta.importe_neto"
                      },
                      "Subject": {
                        "Role": "venta"
                      }
                    },
                    "ID": "ventas_have_importe_netos",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "venta": {
                    "Target": {
                      "Entity": "venta"
                    }
                  },
                  "venta.importe_neto": {
                    "Target": {
                      "Entity": "venta.importe_neto"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_has_importe_ticket": {
                "Binding": {
                  "ConceptualEntity": "Venta"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "venta.importe_ticket"
                      },
                      "Subject": {
                        "Role": "venta"
                      }
                    },
                    "ID": "ventas_have_importe_tickets",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "venta": {
                    "Target": {
                      "Entity": "venta"
                    }
                  },
                  "venta.importe_ticket": {
                    "Target": {
                      "Entity": "venta.importe_ticket"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_has_impresora_cierre": {
                "Binding": {
                  "ConceptualEntity": "Venta"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "impresora_cierre"
                      },
                      "Subject": {
                        "Role": "venta"
                      }
                    },
                    "ID": "ventas_have_impresora_cierres",
                    "State": "Generated",
                    "Weight": 0.99
                  },
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "venta"
                      },
                      "Subject": {
                        "Role": "impresora_cierre"
                      }
                    },
                    "ID": "impresora_cierres_have_ventas",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "impresora_cierre": {
                    "Target": {
                      "Entity": "impresora_cierre"
                    }
                  },
                  "venta": {
                    "Target": {
                      "Entity": "venta"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_has_medida_devolución_prod": {
                "Binding": {
                  "ConceptualEntity": "Venta"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "medida.devolución_prod"
                      },
                      "Subject": {
                        "Role": "venta"
                      }
                    },
                    "ID": "ventas_have_devolución_prod",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "medida.devolución_prod": {
                    "Target": {
                      "Entity": "medida.devolución_prod"
                    }
                  },
                  "venta": {
                    "Target": {
                      "Entity": "venta"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_has_medida_importe_bruto": {
                "Binding": {
                  "ConceptualEntity": "Venta"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "medida.importe_bruto"
                      },
                      "Subject": {
                        "Role": "venta"
                      }
                    },
                    "ID": "ventas_have_importe_bruto",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "medida.importe_bruto": {
                    "Target": {
                      "Entity": "medida.importe_bruto"
                    }
                  },
                  "venta": {
                    "Target": {
                      "Entity": "venta"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_has_medida_importe_neto": {
                "Binding": {
                  "ConceptualEntity": "Venta"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "medida.importe_neto"
                      },
                      "Subject": {
                        "Role": "venta"
                      }
                    },
                    "ID": "ventas_have_importe_neto",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "medida.importe_neto": {
                    "Target": {
                      "Entity": "medida.importe_neto"
                    }
                  },
                  "venta": {
                    "Target": {
                      "Entity": "venta"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_has_medida_importe_ticket": {
                "Binding": {
                  "ConceptualEntity": "Venta"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "medida.importe_ticket"
                      },
                      "Subject": {
                        "Role": "venta"
                      }
                    },
                    "ID": "ventas_have_importe_ticket",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "medida.importe_ticket": {
                    "Target": {
                      "Entity": "medida.importe_ticket"
                    }
                  },
                  "venta": {
                    "Target": {
                      "Entity": "venta"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_has_medida_producción": {
                "Binding": {
                  "ConceptualEntity": "Venta"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "medida.producción"
                      },
                      "Subject": {
                        "Role": "venta"
                      }
                    },
                    "ID": "ventas_have_producción",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "medida.producción": {
                    "Target": {
                      "Entity": "medida.producción"
                    }
                  },
                  "venta": {
                    "Target": {
                      "Entity": "venta"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_has_medida_ratio_PAX_POS_producción": {
                "Binding": {
                  "ConceptualEntity": "Venta"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "medida.ratio_PAX_POS_producción"
                      },
                      "Subject": {
                        "Role": "venta"
                      }
                    },
                    "ID": "ventas_have_ratio_PAX_POS_producción",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "medida.ratio_PAX_POS_producción": {
                    "Target": {
                      "Entity": "medida.ratio_PAX_POS_producción"
                    }
                  },
                  "venta": {
                    "Target": {
                      "Entity": "venta"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_has_medida_ticket_medio": {
                "Binding": {
                  "ConceptualEntity": "Venta"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "medida.ticket_medio"
                      },
                      "Subject": {
                        "Role": "venta"
                      }
                    },
                    "ID": "ventas_have_ticket_medio",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "medida.ticket_medio": {
                    "Target": {
                      "Entity": "medida.ticket_medio"
                    }
                  },
                  "venta": {
                    "Target": {
                      "Entity": "venta"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_has_medida_tickets_ctdad": {
                "Binding": {
                  "ConceptualEntity": "Venta"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "medida.tickets_ctdad"
                      },
                      "Subject": {
                        "Role": "venta"
                      }
                    },
                    "ID": "ventas_have_tickets_ctdad",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "medida.tickets_ctdad": {
                    "Target": {
                      "Entity": "medida.tickets_ctdad"
                    }
                  },
                  "venta": {
                    "Target": {
                      "Entity": "venta"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_has_medida_venta": {
                "Binding": {
                  "ConceptualEntity": "Venta"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "medida.venta"
                      },
                      "Subject": {
                        "Role": "venta"
                      }
                    },
                    "ID": "ventas_have_venta",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "medida.venta": {
                    "Target": {
                      "Entity": "medida.venta"
                    }
                  },
                  "venta": {
                    "Target": {
                      "Entity": "venta"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_has_medida_venta_PAX": {
                "Binding": {
                  "ConceptualEntity": "Venta"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "medida.venta_PAX"
                      },
                      "Subject": {
                        "Role": "venta"
                      }
                    },
                    "ID": "ventas_have_venta_PAX",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "medida.venta_PAX": {
                    "Target": {
                      "Entity": "medida.venta_PAX"
                    }
                  },
                  "venta": {
                    "Target": {
                      "Entity": "venta"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_has_medida_venta_con_impuesto": {
                "Binding": {
                  "ConceptualEntity": "Venta"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "medida.venta_con_impuesto"
                      },
                      "Subject": {
                        "Role": "venta"
                      }
                    },
                    "ID": "ventas_have_venta_con_impuesto",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "medida.venta_con_impuesto": {
                    "Target": {
                      "Entity": "medida.venta_con_impuesto"
                    }
                  },
                  "venta": {
                    "Target": {
                      "Entity": "venta"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_has_sale_id": {
                "Binding": {
                  "ConceptualEntity": "Venta"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "venta.sale_id"
                      },
                      "Subject": {
                        "Role": "venta"
                      }
                    },
                    "ID": "ventas_have_sale_ids",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "venta": {
                    "Target": {
                      "Entity": "venta"
                    }
                  },
                  "venta.sale_id": {
                    "Target": {
                      "Entity": "venta.sale_id"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_has_vendedor": {
                "Binding": {
                  "ConceptualEntity": "Venta"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "venta.vendedor"
                      },
                      "Subject": {
                        "Role": "venta"
                      }
                    },
                    "ID": "ventas_have_vendedors",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "venta": {
                    "Target": {
                      "Entity": "venta"
                    }
                  },
                  "venta.vendedor": {
                    "Target": {
                      "Entity": "venta.vendedor"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_is_estado": {
                "Binding": {
                  "ConceptualEntity": "Venta"
                },
                "Phrasings": [
                  {
                    "DynamicAdjective": {
                      "Adjective": {
                        "Role": "venta.estado"
                      },
                      "Subject": {
                        "Role": "venta"
                      }
                    },
                    "ID": "estado_describe_ventas",
                    "State": "Generated",
                    "Weight": 0.99
                  },
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "venta.estado"
                      },
                      "Subject": {
                        "Role": "venta"
                      }
                    },
                    "ID": "ventas_have_estado",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "venta": {
                    "Target": {
                      "Entity": "venta"
                    }
                  },
                  "venta.estado": {
                    "Target": {
                      "Entity": "venta.estado"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_pago_has_medida_metodos_de_pago": {
                "Binding": {
                  "ConceptualEntity": "Venta Pagos"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "medida.metodos_de_pago"
                      },
                      "Subject": {
                        "Role": "venta_pago"
                      }
                    },
                    "ID": "venta_pago_have_metodos_de_pago",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "medida.metodos_de_pago": {
                    "Target": {
                      "Entity": "medida.metodos_de_pago"
                    }
                  },
                  "venta_pago": {
                    "Target": {
                      "Entity": "venta_pago"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_pago_has_método_de_pago": {
                "Binding": {
                  "ConceptualEntity": "Venta Pagos"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "venta_pago.método_de_pago"
                      },
                      "Subject": {
                        "Role": "venta_pago"
                      }
                    },
                    "ID": "venta_pago_have_método_de_pago",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "venta_pago": {
                    "Target": {
                      "Entity": "venta_pago"
                    }
                  },
                  "venta_pago.método_de_pago": {
                    "Target": {
                      "Entity": "venta_pago.método_de_pago"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_pago_has_no_reclamado": {
                "Binding": {
                  "ConceptualEntity": "Venta Pagos"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "venta_pago.no_reclamado"
                      },
                      "Subject": {
                        "Role": "venta_pago"
                      }
                    },
                    "ID": "venta_pago_have_no_reclamados",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "venta_pago": {
                    "Target": {
                      "Entity": "venta_pago"
                    }
                  },
                  "venta_pago.no_reclamado": {
                    "Target": {
                      "Entity": "venta_pago.no_reclamado"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_pago_has_payment_id": {
                "Binding": {
                  "ConceptualEntity": "Venta Pagos"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "venta_pago.payment_id"
                      },
                      "Subject": {
                        "Role": "venta_pago"
                      }
                    },
                    "ID": "venta_pago_have_payment_ids",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "venta_pago": {
                    "Target": {
                      "Entity": "venta_pago"
                    }
                  },
                  "venta_pago.payment_id": {
                    "Target": {
                      "Entity": "venta_pago.payment_id"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_pago_has_precio": {
                "Binding": {
                  "ConceptualEntity": "Venta Pagos"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "venta_pago.precio"
                      },
                      "Subject": {
                        "Role": "venta_pago"
                      }
                    },
                    "ID": "venta_pago_have_precios",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "venta_pago": {
                    "Target": {
                      "Entity": "venta_pago"
                    }
                  },
                  "venta_pago.precio": {
                    "Target": {
                      "Entity": "venta_pago.precio"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_pago_has_venta": {
                "Binding": {
                  "ConceptualEntity": "Venta Pagos"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "venta"
                      },
                      "Subject": {
                        "Role": "venta_pago"
                      }
                    },
                    "ID": "venta_pago_have_ventas",
                    "State": "Generated",
                    "Weight": 0.99
                  },
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "venta_pago"
                      },
                      "Subject": {
                        "Role": "venta"
                      }
                    },
                    "ID": "ventas_have_venta_pago",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "venta": {
                    "Target": {
                      "Entity": "venta"
                    }
                  },
                  "venta_pago": {
                    "Target": {
                      "Entity": "venta_pago"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_producto_has_cantidad": {
                "Binding": {
                  "ConceptualEntity": "Venta Productos"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "venta_producto.cantidad"
                      },
                      "Subject": {
                        "Role": "venta_producto"
                      }
                    },
                    "ID": "venta_productos_have_cantidads",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "venta_producto": {
                    "Target": {
                      "Entity": "venta_producto"
                    }
                  },
                  "venta_producto.cantidad": {
                    "Target": {
                      "Entity": "venta_producto.cantidad"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_producto_has_categoría_producto": {
                "Binding": {
                  "ConceptualEntity": "Venta Productos"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "venta_producto.categoría_producto"
                      },
                      "Subject": {
                        "Role": "venta_producto"
                      }
                    },
                    "ID": "venta_productos_have_categoría_productos",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "venta_producto": {
                    "Target": {
                      "Entity": "venta_producto"
                    }
                  },
                  "venta_producto.categoría_producto": {
                    "Target": {
                      "Entity": "venta_producto.categoría_producto"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_producto_has_medida_artículos_vendidos_ctdad": {
                "Binding": {
                  "ConceptualEntity": "Venta Productos"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "medida.artículos_vendidos_ctdad"
                      },
                      "Subject": {
                        "Role": "venta_producto"
                      }
                    },
                    "ID": "venta_productos_have_artículos_vendidos_ctdad",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "medida.artículos_vendidos_ctdad": {
                    "Target": {
                      "Entity": "medida.artículos_vendidos_ctdad"
                    }
                  },
                  "venta_producto": {
                    "Target": {
                      "Entity": "venta_producto"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_producto_has_medida_devoluciones": {
                "Binding": {
                  "ConceptualEntity": "Venta Productos"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "medida.devoluciones"
                      },
                      "Subject": {
                        "Role": "venta_producto"
                      }
                    },
                    "ID": "venta_productos_have_devoluciones",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "medida.devoluciones": {
                    "Target": {
                      "Entity": "medida.devoluciones"
                    }
                  },
                  "venta_producto": {
                    "Target": {
                      "Entity": "venta_producto"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_producto_has_medida_devoluciones_ctdad": {
                "Binding": {
                  "ConceptualEntity": "Venta Productos"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "medida.devoluciones_ctdad"
                      },
                      "Subject": {
                        "Role": "venta_producto"
                      }
                    },
                    "ID": "venta_productos_have_devoluciones_ctdad",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "medida.devoluciones_ctdad": {
                    "Target": {
                      "Entity": "medida.devoluciones_ctdad"
                    }
                  },
                  "venta_producto": {
                    "Target": {
                      "Entity": "venta_producto"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_producto_has_medida_devolución_prod": {
                "Binding": {
                  "ConceptualEntity": "Venta Productos"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "medida.devolución_prod"
                      },
                      "Subject": {
                        "Role": "venta_producto"
                      }
                    },
                    "ID": "venta_productos_have_devolución_prod",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "medida.devolución_prod": {
                    "Target": {
                      "Entity": "medida.devolución_prod"
                    }
                  },
                  "venta_producto": {
                    "Target": {
                      "Entity": "venta_producto"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_producto_has_medida_producción": {
                "Binding": {
                  "ConceptualEntity": "Venta Productos"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "medida.producción"
                      },
                      "Subject": {
                        "Role": "venta_producto"
                      }
                    },
                    "ID": "venta_productos_have_producción",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "medida.producción": {
                    "Target": {
                      "Entity": "medida.producción"
                    }
                  },
                  "venta_producto": {
                    "Target": {
                      "Entity": "venta_producto"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_producto_has_medida_productos": {
                "Binding": {
                  "ConceptualEntity": "Venta Productos"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "medida.productos"
                      },
                      "Subject": {
                        "Role": "venta_producto"
                      }
                    },
                    "ID": "venta_productos_have_productos",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "medida.productos": {
                    "Target": {
                      "Entity": "medida.productos"
                    }
                  },
                  "venta_producto": {
                    "Target": {
                      "Entity": "venta_producto"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_producto_has_medida_ratio_PAX_POS_producción": {
                "Binding": {
                  "ConceptualEntity": "Venta Productos"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "medida.ratio_PAX_POS_producción"
                      },
                      "Subject": {
                        "Role": "venta_producto"
                      }
                    },
                    "ID": "venta_productos_have_ratio_PAX_POS_producción",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "medida.ratio_PAX_POS_producción": {
                    "Target": {
                      "Entity": "medida.ratio_PAX_POS_producción"
                    }
                  },
                  "venta_producto": {
                    "Target": {
                      "Entity": "venta_producto"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_producto_has_precio_bruto": {
                "Binding": {
                  "ConceptualEntity": "Venta Productos"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "venta_producto.precio_bruto"
                      },
                      "Subject": {
                        "Role": "venta_producto"
                      }
                    },
                    "ID": "venta_productos_have_precio_brutos",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "venta_producto": {
                    "Target": {
                      "Entity": "venta_producto"
                    }
                  },
                  "venta_producto.precio_bruto": {
                    "Target": {
                      "Entity": "venta_producto.precio_bruto"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_producto_has_precio_neto": {
                "Binding": {
                  "ConceptualEntity": "Venta Productos"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "venta_producto.precio_neto"
                      },
                      "Subject": {
                        "Role": "venta_producto"
                      }
                    },
                    "ID": "venta_productos_have_precio_netos",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "venta_producto": {
                    "Target": {
                      "Entity": "venta_producto"
                    }
                  },
                  "venta_producto.precio_neto": {
                    "Target": {
                      "Entity": "venta_producto.precio_neto"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_producto_has_precio_producto": {
                "Binding": {
                  "ConceptualEntity": "Venta Productos"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "venta_producto.precio_producto"
                      },
                      "Subject": {
                        "Role": "venta_producto"
                      }
                    },
                    "ID": "venta_productos_have_precio_productos",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "venta_producto": {
                    "Target": {
                      "Entity": "venta_producto"
                    }
                  },
                  "venta_producto.precio_producto": {
                    "Target": {
                      "Entity": "venta_producto.precio_producto"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_producto_has_sale_item_id": {
                "Binding": {
                  "ConceptualEntity": "Venta Productos"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "venta_producto.sale_item_id"
                      },
                      "Subject": {
                        "Role": "venta_producto"
                      }
                    },
                    "ID": "venta_productos_have_sale_item_ids",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "venta_producto": {
                    "Target": {
                      "Entity": "venta_producto"
                    }
                  },
                  "venta_producto.sale_item_id": {
                    "Target": {
                      "Entity": "venta_producto.sale_item_id"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_producto_has_vendedor_producto": {
                "Binding": {
                  "ConceptualEntity": "Venta Productos"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "venta_producto.vendedor_producto"
                      },
                      "Subject": {
                        "Role": "venta_producto"
                      }
                    },
                    "ID": "venta_productos_have_vendedor_productos",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "venta_producto": {
                    "Target": {
                      "Entity": "venta_producto"
                    }
                  },
                  "venta_producto.vendedor_producto": {
                    "Target": {
                      "Entity": "venta_producto.vendedor_producto"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_producto_has_venta": {
                "Binding": {
                  "ConceptualEntity": "Venta Productos"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "venta"
                      },
                      "Subject": {
                        "Role": "venta_producto"
                      }
                    },
                    "ID": "venta_productos_have_ventas",
                    "State": "Generated",
                    "Weight": 0.99
                  },
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "venta_producto"
                      },
                      "Subject": {
                        "Role": "venta"
                      }
                    },
                    "ID": "ventas_have_venta_productos",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "venta": {
                    "Target": {
                      "Entity": "venta"
                    }
                  },
                  "venta_producto": {
                    "Target": {
                      "Entity": "venta_producto"
                    }
                  }
                },
                "State": "Generated"
              },
              "venta_producto_has_x_total": {
                "Binding": {
                  "ConceptualEntity": "Venta Productos"
                },
                "Phrasings": [
                  {
                    "Attribute": {
                      "Object": {
                        "Role": "venta_producto.x_total"
                      },
                      "Subject": {
                        "Role": "venta_producto"
                      }
                    },
                    "ID": "venta_productos_have_x_totals",
                    "State": "Generated",
                    "Weight": 0.99
                  }
                ],
                "Roles": {
                  "venta_producto": {
                    "Target": {
                      "Entity": "venta_producto"
                    }
                  },
                  "venta_producto.x_total": {
                    "Target": {
                      "Entity": "venta_producto.x_total"
                    }
                  }
                },
                "State": "Generated"
              }
            },
            "Version": "3.5.0"
          },
          "contentType": "json"
        }
      }
    ],
    "dataAccessOptions": {
      "legacyRedirects": true,
      "returnErrorValuesAsNull": true
    },
    "defaultPowerBIDataSourceVersion": "powerBI_V3",
    "discourageImplicitMeasures": true,
    "expressions": [
      {
        "name": "Archivo de ejemplo (2)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Exception"
          }
        ],
        "expression": [
          "let",
          "// Load data from Azure Data Lake",
          "   Source = AzureStorage.DataLake(\"https://stgdatapbi.dfs.core.windows.net/data/dev/pos/tilby/fact/sale/\"),",
          "// Filter files that start with \"\"pos_sale_\"\"",
          "   #\"Filter Files\" = Table.SelectRows(#\"Source\", each Text.StartsWith([Name], \"pos_sale_\")),",
          "// Exclude hidden files",
          "   #\"Exclude Hidden Files\" = Table.SelectRows(#\"Filter Files\", each [Attributes]?[Hidden]? <> true),",
          "// Partition by Month",
          "   #\"Add Column Partition\" = Table.AddColumn(Source, \"Partition\", each ",
          "    let",
          "        FileName = [Name],",
          "        DateText = // Extracts the 'yyyymmdd' part",
          "        Text.Replace (",
          "                    Text.Replace ([Name], \"pos_sale_\", \"\")",
          "                    ,\".parquet\"",
          "                    ,\"\"",
          "                ),",
          "        Year = Text.Middle(DateText, 0, 4),",
          "        Month = Text.Middle(DateText, 4, 2),",
          "        Day = \"01\",",
          "        DateValue = Date.FromText(Year & \"-\" & Month & \"-\" & Day)",
          "    in",
          "        DateValue),",
          "    Navegación1 = #\"Add Column Partition\"{0}[Content]",
          "in",
          "    Navegación1"
        ],
        "kind": "m",
        "lineageTag": "19514bef-b6b0-4b97-ad6e-2c28251b07ab",
        "queryGroup": "Transformar archivo de Venta\\Consultas auxiliares"
      },
      {
        "name": "Parámetro2",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Binary"
          }
        ],
        "expression": "#\"Archivo de ejemplo (2)\" meta [IsParameterQuery=true, BinaryIdentifier=#\"Archivo de ejemplo (2)\", Type=\"Binary\", IsParameterQueryRequired=true]",
        "kind": "m",
        "lineageTag": "571b250e-6fc6-4ddb-b6ae-769eb419dfd7",
        "queryGroup": "Transformar archivo de Venta\\Consultas auxiliares"
      },
      {
        "name": "Transformar archivo de ejemplo (2)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Origen = Parquet.Document(Parámetro2, [Compression=null, LegacyColumnNameEncoding=false, MaxDepth=null])",
          "in",
          "    Origen"
        ],
        "kind": "m",
        "lineageTag": "4b1e24cd-b553-44cd-ae48-5da0c6b82a64",
        "queryGroup": "Transformar archivo de Venta"
      },
      {
        "name": "Transformar archivo (2)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Function"
          }
        ],
        "expression": [
          "let",
          "    Origen = (Parámetro2 as binary) => let",
          "    Origen = Parquet.Document(Parámetro2, [Compression=null, LegacyColumnNameEncoding=false, MaxDepth=null])",
          "in",
          "    Origen",
          "in",
          "    Origen"
        ],
        "kind": "m",
        "lineageTag": "a479344e-bd2c-46a2-9bc9-587c707aa665",
        "queryGroup": "Transformar archivo de Venta\\Consultas auxiliares"
      },
      {
        "name": "Archivo de ejemplo (3)",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navegación"
          },
          {
            "name": "PBI_ResultType",
            "value": "Binary"
          }
        ],
        "expression": [
          "let",
          "// Load data from Azure Data Lake",
          "    Source = AzureStorage.DataLake(\"https://stgdatapbi.dfs.core.windows.net/data/dev/common/dim/hotel/\"),",
          "// Filter files that start with \"\"pos_sale_\"\"",
          "    #\"Filter Files\" = Table.SelectRows(#\"Source\", each Text.Contains([Name], \"common_hotel.parquet\")),",
          "// Exclude hidden files",
          "   #\"Exclude Hidden Files\" = Table.SelectRows(#\"Filter Files\", each [Attributes]?[Hidden]? <> true),",
          "    Navegación1 = #\"Exclude Hidden Files\"{0}[Content]",
          "in",
          "    Navegación1"
        ],
        "kind": "m",
        "lineageTag": "6963ceb4-71b3-4c1e-be5a-4e6fd4c60de9",
        "queryGroup": "Transformar archivo de Hotel\\Consultas auxiliares"
      },
      {
        "name": "Parámetro3",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Binary"
          }
        ],
        "expression": "#\"Archivo de ejemplo (3)\" meta [IsParameterQuery=true, BinaryIdentifier=#\"Archivo de ejemplo (3)\", Type=\"Binary\", IsParameterQueryRequired=true]",
        "kind": "m",
        "lineageTag": "33fa9d06-0edf-4c73-8bd4-762e0bde74c0",
        "queryGroup": "Transformar archivo de Hotel\\Consultas auxiliares"
      },
      {
        "name": "Transformar archivo de ejemplo (3)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Origen = Parquet.Document(Parámetro3, [Compression=null, LegacyColumnNameEncoding=false, MaxDepth=null])",
          "in",
          "    Origen"
        ],
        "kind": "m",
        "lineageTag": "f3f8b88e-9cbe-49c5-86cc-00f8f2d23deb",
        "queryGroup": "Transformar archivo de Hotel"
      },
      {
        "name": "Transformar archivo (3)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Exception"
          }
        ],
        "expression": [
          "let",
          "    Origen = (Parámetro3 as binary) => let",
          "    Origen = Parquet.Document(Parámetro3, [Compression=null, LegacyColumnNameEncoding=false, MaxDepth=null])",
          "in",
          "    Origen",
          "in",
          "    Origen"
        ],
        "kind": "m",
        "lineageTag": "bccb6612-b1a5-41a1-a9b1-ce1614cb5c39",
        "queryGroup": "Transformar archivo de Hotel\\Consultas auxiliares"
      },
      {
        "name": "Archivo de ejemplo (4)",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navegación"
          },
          {
            "name": "PBI_ResultType",
            "value": "Binary"
          }
        ],
        "expression": [
          "let",
          "// Load data from Azure Data Lake",
          "    Source = AzureStorage.DataLake(\"https://stgdatapbi.dfs.core.windows.net/data/dev/pos/tilby/dim/pos/\"),",
          "// Filter files that start with \"\"pos_sale_\"\"",
          "    #\"Filter Files\" = Table.SelectRows(#\"Source\", each Text.Contains([Name], \"pos_pos.parquet\")),",
          "// Exclude hidden files",
          "   #\"Exclude Hidden Files\" = Table.SelectRows(#\"Filter Files\", each [Attributes]?[Hidden]? <> true),",
          "    Navegación1 = #\"Exclude Hidden Files\"{0}[Content]",
          "    //#\"Changed Type\" = Table.TransformColumnTypes(#\"Replace Underscore\",{{\"pos id\", Int64.Type}, {\"bk pos uuid\", type text}, {\"Nombre POS de sistema\", type text}, {\"POS\", type text}, {\"Cadena de negocio\", type text}, {\"chain shop id\", Int64.Type}})",
          "in",
          "    Navegación1"
        ],
        "kind": "m",
        "lineageTag": "af69fe91-0696-4b02-8c79-f6cb761f1552",
        "queryGroup": "Transformar archivo de POS\\Consultas auxiliares"
      },
      {
        "name": "Parámetro4",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Binary"
          }
        ],
        "expression": "#\"Archivo de ejemplo (4)\" meta [IsParameterQuery=true, BinaryIdentifier=#\"Archivo de ejemplo (4)\", Type=\"Binary\", IsParameterQueryRequired=true]",
        "kind": "m",
        "lineageTag": "fcdb50e0-725a-4be1-abe0-01f5f7f799a7",
        "queryGroup": "Transformar archivo de POS\\Consultas auxiliares"
      },
      {
        "name": "Transformar archivo de ejemplo (4)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Origen = Parquet.Document(Parámetro4, [Compression=null, LegacyColumnNameEncoding=false, MaxDepth=null])",
          "in",
          "    Origen"
        ],
        "kind": "m",
        "lineageTag": "844ba835-6933-4ebe-a9a2-cb0580068fa8",
        "queryGroup": "Transformar archivo de POS"
      },
      {
        "name": "Transformar archivo (4)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Function"
          }
        ],
        "expression": [
          "let",
          "    Origen = (Parámetro4 as binary) => let",
          "    Origen = Parquet.Document(Parámetro4, [Compression=null, LegacyColumnNameEncoding=false, MaxDepth=null])",
          "in",
          "    Origen",
          "in",
          "    Origen"
        ],
        "kind": "m",
        "lineageTag": "a31dde4e-4367-4ee0-94b6-94c998a6e311",
        "queryGroup": "Transformar archivo de POS\\Consultas auxiliares"
      },
      {
        "name": "Archivo de ejemplo (6)",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navegación"
          },
          {
            "name": "PBI_ResultType",
            "value": "Binary"
          }
        ],
        "expression": [
          "let",
          "// Load data from Azure Data Lake",
          "    Source = AzureStorage.DataLake(\"https://stgdatapbi.dfs.core.windows.net/data/dev/pos/tilby/dim/printer/\"),",
          "// Filter files that start with \"\"pos_sale_\"\"",
          "    #\"Filter Files\" = Table.SelectRows(#\"Source\", each Text.Contains([Name], \"pos_printer.parquet\")),",
          "// Exclude hidden files",
          "   #\"Exclude Hidden Files\" = Table.SelectRows(#\"Filter Files\", each [Attributes]?[Hidden]? <> true),",
          "    Navegación1 = #\"Exclude Hidden Files\"{0}[Content]",
          "in",
          "    Navegación1"
        ],
        "kind": "m",
        "lineageTag": "e762c7cd-d910-421b-9ab5-d6d162517f95",
        "queryGroup": "Transformar archivo de Impresora\\Consultas auxiliares"
      },
      {
        "name": "Parámetro6",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Binary"
          }
        ],
        "expression": "#\"Archivo de ejemplo (6)\" meta [IsParameterQuery=true, BinaryIdentifier=#\"Archivo de ejemplo (6)\", Type=\"Binary\", IsParameterQueryRequired=true]",
        "kind": "m",
        "lineageTag": "df045040-328a-4947-ae40-871c746f5eaf",
        "queryGroup": "Transformar archivo de Impresora\\Consultas auxiliares"
      },
      {
        "name": "Transformar archivo de ejemplo (6)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Origen = Parquet.Document(Parámetro6, [Compression=null, LegacyColumnNameEncoding=false, MaxDepth=null])",
          "in",
          "    Origen"
        ],
        "kind": "m",
        "lineageTag": "41489cbb-cbb8-4310-80a9-dd77658dccec",
        "queryGroup": "Transformar archivo de Impresora"
      },
      {
        "name": "Transformar archivo (6)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Function"
          }
        ],
        "expression": [
          "let",
          "    Origen = (Parámetro6 as binary) => let",
          "    Origen = Parquet.Document(Parámetro6, [Compression=null, LegacyColumnNameEncoding=false, MaxDepth=null])",
          "in",
          "    Origen",
          "in",
          "    Origen"
        ],
        "kind": "m",
        "lineageTag": "c86e0cf8-2733-4987-ab75-f79cb10861d1",
        "queryGroup": "Transformar archivo de Impresora\\Consultas auxiliares"
      },
      {
        "name": "Archivo de ejemplo (7)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Exception"
          }
        ],
        "expression": [
          "let",
          "// Load data from Azure Data Lake",
          "    Source = AzureStorage.DataLake(\"https://stgdatapbi.dfs.core.windows.net/data/dev/pos/tilby/dim/payment_method/\"),",
          "// Filter file \"pos_payment_method.parquet\"",
          "    #\"Filter Files\" = Table.SelectRows(#\"Source\", each Text.Contains([Name], \"pos_payment_method.parquet\")),",
          "// Exclude hidden files",
          "   #\"Exclude Hidden Files\" = Table.SelectRows(#\"Filter Files\", each [Attributes]?[Hidden]? <> true),",
          "    Navegación1 = #\"Exclude Hidden Files\"{0}[Content]//,",
          "////Get Table from File Content",
          "//    #\"Transform\" = Table.AddColumn(#\"Exclude Hidden Files\", \"Transformar archivo (6)\", each #\"Transformar archivo (6)\"([Content])),",
          "////Rename Source Column",
          "//    #\"Rename Source\" = Table.RenameColumns(Transform, {\"Name\", \"Source.Name\"}),",
          "////Drop all columns except Partition and Table",
          "//    #\"Keep Columns\" = Table.SelectColumns(#\"Rename Source\", {\"Source.Name\", \"Transformar archivo (6)\"}),",
          "////Expand Table to get files columns",
          "//    #\"Expand Table\" = Table.ExpandTableColumn(#\"Keep Columns\", \"Transformar archivo (6)\", Table.ColumnNames(#\"Transformar archivo (6)\"(#\"Archivo de ejemplo (6)\"))),",
          "////Replace underscores in Columns",
          "//    #\"Replace Underscore\" = Table.RenameColumns(",
          "//        #\"Expand Table\",",
          "//        List.Transform(",
          "//            Table.ColumnNames(#\"Expand Table\"),",
          "//            each {_, Text.Replace(_, \"_\", \" \")}",
          "//        )",
          "//    ),",
          "////Change Data Types",
          "//    #\"Changed Type\" = Table.TransformColumnTypes(#\"Replace Underscore\",{{\"Source.Name\", type text}, {\"printer id\", Int64.Type}, {\"pos id\", Int64.Type}, {\"Impresora\", type text}})",
          "in",
          "    Navegación1"
        ],
        "kind": "m",
        "lineageTag": "97eb6208-2686-4fb8-87c8-ddc66d28a154",
        "queryGroup": "Transformar archivo de Método de pago\\Consultas auxiliares"
      },
      {
        "name": "Parámetro7",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Binary"
          }
        ],
        "expression": "#\"Archivo de ejemplo (7)\" meta [IsParameterQuery=true, BinaryIdentifier=#\"Archivo de ejemplo (7)\", Type=\"Binary\", IsParameterQueryRequired=true]",
        "kind": "m",
        "lineageTag": "7d85e9ee-9cf5-42f1-9762-036fecf01687",
        "queryGroup": "Transformar archivo de Método de pago\\Consultas auxiliares"
      },
      {
        "name": "Transformar archivo de ejemplo (7)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Origen = Parquet.Document(Parámetro7, [Compression=null, LegacyColumnNameEncoding=false, MaxDepth=null])",
          "in",
          "    Origen"
        ],
        "kind": "m",
        "lineageTag": "06712e26-a844-444f-979c-f8b9bb3219af",
        "queryGroup": "Transformar archivo de Método de pago"
      },
      {
        "name": "Transformar archivo (7)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Function"
          }
        ],
        "expression": [
          "let",
          "    Origen = (Parámetro7 as binary) => let",
          "    Origen = Parquet.Document(Parámetro7, [Compression=null, LegacyColumnNameEncoding=false, MaxDepth=null])",
          "in",
          "    Origen",
          "in",
          "    Origen"
        ],
        "kind": "m",
        "lineageTag": "659871ce-8fe6-48c4-9ba4-0e1c78a4cccb",
        "queryGroup": "Transformar archivo de Método de pago\\Consultas auxiliares"
      },
      {
        "name": "Archivo de ejemplo (8)",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navegación"
          },
          {
            "name": "PBI_ResultType",
            "value": "Binary"
          }
        ],
        "expression": [
          "let",
          "// Load data from Azure Data Lake",
          "    Source = AzureStorage.DataLake(\"https://stgdatapbi.dfs.core.windows.net/data/dev/pos/tilby/dim/product_category/\"),",
          "// Filter file \"pos_product_category.parquet\"",
          "    #\"Filter Files\" = Table.SelectRows(#\"Source\", each Text.Contains([Name], \"pos_product_category.parquet\")),",
          "// Exclude hidden files",
          "   #\"Exclude Hidden Files\" = Table.SelectRows(#\"Filter Files\", each [Attributes]?[Hidden]? <> true),",
          "    Navegación1 = #\"Exclude Hidden Files\"{0}[Content]//",
          "   ",
          "//,",
          "////Get Table from File Content",
          "//    #\"Transform\" = Table.AddColumn(#\"Exclude Hidden Files\", \"Transformar archivo (7)\", each #\"Transformar archivo (7)\"([Content])),    ",
          "////Rename Source Column",
          "//    #\"Rename Source\" = Table.RenameColumns(Transform, {\"Name\", \"Source.Name\"}),",
          "////Drop all columns except Partition and Table",
          "//    #\"Keep Columns\" = Table.SelectColumns(#\"Rename Source\", {\"Source.Name\", \"Transformar archivo (7)\"}),",
          "////Expand Table to get files columns",
          "//    #\"Expand Table\" = Table.ExpandTableColumn(#\"Keep Columns\", \"Transformar archivo (7)\", Table.ColumnNames(#\"Transformar archivo (7)\"(#\"Archivo de ejemplo (7)\"))),",
          "////Replace underscores in Columns",
          "//    #\"Replace Underscore\" = Table.RenameColumns(",
          "//        #\"Expand Table\",",
          "//        List.Transform(",
          "//            Table.ColumnNames(#\"Expand Table\"),",
          "//            each {_, Text.Replace(_, \"_\", \" \")}",
          "//        )",
          "//    ),",
          "////Change Data Types",
          "//    #\"Changed Type\" = Table.TransformColumnTypes(#\"Replace Underscore\",{{\"Source.Name\", type text}, {\"payment method id\", Int64.Type}, {\"Método de pago\", type text}})",
          "in",
          "    Navegación1"
        ],
        "kind": "m",
        "lineageTag": "0cc9a4e9-e20c-4936-a4d6-455eb41f9a89",
        "queryGroup": "Transformar archivo de Categoría de artículo\\Consultas auxiliares"
      },
      {
        "name": "Parámetro8",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Binary"
          }
        ],
        "expression": "#\"Archivo de ejemplo (8)\" meta [IsParameterQuery=true, BinaryIdentifier=#\"Archivo de ejemplo (8)\", Type=\"Binary\", IsParameterQueryRequired=true]",
        "kind": "m",
        "lineageTag": "b389638e-de34-4bb6-be74-76de1b441999",
        "queryGroup": "Transformar archivo de Categoría de artículo\\Consultas auxiliares"
      },
      {
        "name": "Transformar archivo de ejemplo (8)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Origen = Parquet.Document(Parámetro8, [Compression=null, LegacyColumnNameEncoding=false, MaxDepth=null])",
          "in",
          "    Origen"
        ],
        "kind": "m",
        "lineageTag": "ab49db8d-d4dc-4608-a96a-15029e4e7fa6",
        "queryGroup": "Transformar archivo de Categoría de artículo"
      },
      {
        "name": "Transformar archivo (8)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Exception"
          }
        ],
        "expression": [
          "let",
          "    Origen = (Parámetro8 as binary) => let",
          "    Origen = Parquet.Document(Parámetro8, [Compression=null, LegacyColumnNameEncoding=false, MaxDepth=null])",
          "in",
          "    Origen",
          "in",
          "    Origen"
        ],
        "kind": "m",
        "lineageTag": "19e5e444-8aa7-443c-8679-20f7cb390d45",
        "queryGroup": "Transformar archivo de Categoría de artículo\\Consultas auxiliares"
      },
      {
        "name": "Archivo de ejemplo (9)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Exception"
          }
        ],
        "expression": [
          "let",
          "// Load data from Azure Data Lake",
          "    Source = AzureStorage.DataLake(\"https://stgdatapbi.dfs.core.windows.net/data/dev/common/dim/time/\"),",
          "// Filter file \"common_time.parquet\"",
          "    #\"Filter Files\" = Table.SelectRows(#\"Source\", each Text.Contains([Name], \"common_time.parquet\")),",
          "// Exclude hidden files",
          "   #\"Exclude Hidden Files\" = Table.SelectRows(#\"Filter Files\", each [Attributes]?[Hidden]? <> true),",
          "    Navegación1 = #\"Exclude Hidden Files\"{0}[Content]//,",
          "////Get Table from File Content",
          "//    Transform = Table.AddColumn(#\"Exclude Hidden Files\", \"Transformar archivo (3)\", each #\"Transformar archivo (3)\"([Content])),",
          "////Rename Source Column",
          "//    #\"Rename Source\" = Table.RenameColumns(Transform, {\"Name\", \"Source.Name\"}),",
          "////Drop all columns except Partition and Table",
          "//    #\"Keep Columns\" = Table.SelectColumns(#\"Rename Source\", {\"Source.Name\", \"Transformar archivo (3)\"}),",
          "////Expand Table to get files columns",
          "//    #\"Expand Table\" = Table.ExpandTableColumn(#\"Keep Columns\", \"Transformar archivo (3)\", Table.ColumnNames(#\"Transformar archivo (3)\"(#\"Archivo de ejemplo (3)\"))),",
          "////Replace underscores in Columns",
          "//    #\"Replace Underscore\" = Table.RenameColumns(",
          "//        #\"Expand Table\",",
          "//        List.Transform(",
          "//            Table.ColumnNames(#\"Expand Table\"),",
          "//            each {_, Text.Replace(_, \"_\", \" \")}",
          "//        )",
          "//    ),",
          "////Change Data Types",
          "//    #\"Changed Type\" = Table.TransformColumnTypes(#\"Replace Underscore\",{{\"hotel id\", Int64.Type}, {\"Hotel\", type text}, {\"Código hotel\", type text}, {\"Nombre hotel\", type text}, {\"Código postal hotel\", Int64.Type}})",
          "in",
          "    Navegación1"
        ],
        "kind": "m",
        "lineageTag": "461b5ee8-acf1-4cde-9d84-a13e73f93deb",
        "queryGroup": "Transformar archivo de Tiempo\\Consultas auxiliares"
      },
      {
        "name": "Parámetro9",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Binary"
          }
        ],
        "expression": "#\"Archivo de ejemplo (9)\" meta [IsParameterQuery=true, BinaryIdentifier=#\"Archivo de ejemplo (9)\", Type=\"Binary\", IsParameterQueryRequired=true]",
        "kind": "m",
        "lineageTag": "124be18b-bcc2-4510-8cb2-6114b88cfdc8",
        "queryGroup": "Transformar archivo de Tiempo\\Consultas auxiliares"
      },
      {
        "name": "Transformar archivo de ejemplo (9)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Origen = Parquet.Document(Parámetro9, [Compression=null, LegacyColumnNameEncoding=false, MaxDepth=null])",
          "in",
          "    Origen"
        ],
        "kind": "m",
        "lineageTag": "84a6bce1-015d-45f3-9cd1-0d6c74403522",
        "queryGroup": "Transformar archivo de Tiempo"
      },
      {
        "name": "Transformar archivo (9)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Function"
          }
        ],
        "expression": [
          "let",
          "    Origen = (Parámetro9 as binary) => let",
          "    Origen = Parquet.Document(Parámetro9, [Compression=null, LegacyColumnNameEncoding=false, MaxDepth=null])",
          "in",
          "    Origen",
          "in",
          "    Origen"
        ],
        "kind": "m",
        "lineageTag": "904b95eb-5aa8-4bf7-97fc-6fd7c4f6077b",
        "queryGroup": "Transformar archivo de Tiempo\\Consultas auxiliares"
      },
      {
        "name": "Archivo de ejemplo (10)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Exception"
          }
        ],
        "expression": [
          "let",
          "// Load data from Azure Data Lake",
          "    Source = AzureStorage.DataLake(\"https://stgdatapbi.dfs.core.windows.net/data/dev/pos/tilby/fact/printer_closing/\"),",
          "// Filter file \"pos_printer_closing.parquet\"",
          "    #\"Filter Files\" = Table.SelectRows(#\"Source\", each Text.Contains([Name], \"pos_printer_closing.parquet\")),",
          "// Exclude hidden files",
          "    #\"Exclude Hidden Files\" = Table.SelectRows(#\"Filter Files\", each [Attributes]?[Hidden]? <> true),",
          "    Navegación1 = #\"Exclude Hidden Files\"{0}[Content]//,",
          "////Get Table from File Content",
          "//    Transform = Table.AddColumn(#\"Exclude Hidden Files\", \"Transformar archivo (9)\", each #\"Transformar archivo (9)\"([Content])),",
          "////Rename Source Column",
          "//    #\"Rename Source\" = Table.RenameColumns(Transform, {\"Name\", \"Source.Name\"}),",
          "////Drop all columns except Partition and Table",
          "//    #\"Keep Columns\" = Table.SelectColumns(#\"Rename Source\", {\"Source.Name\", \"Transformar archivo (9)\"}),",
          "////Expand Table to get files columns",
          "//    #\"Expand Table\" = Table.ExpandTableColumn(#\"Keep Columns\", \"Transformar archivo (9)\", Table.ColumnNames(#\"Transformar archivo (9)\"(#\"Archivo de ejemplo (9)\"))),",
          "////Replace underscores in Columns",
          "//    #\"Replace Underscore\" = Table.RenameColumns(",
          "//        #\"Expand Table\",",
          "//        List.Transform(",
          "//            Table.ColumnNames(#\"Expand Table\"),",
          "//            each {_, Text.Replace(_, \"_\", \" \")}",
          "//        )",
          "//    ),",
          "////Change Data Types",
          "//    #\"Changed Type\" = Table.TransformColumnTypes(#\"Replace Underscore\",{{\"Source.Name\", type text}, {\"time id\", Int16.Type}, {\"HH:MM:SS\", type time}, {\"hour\", Int16.Type}, {\"minute\", Int16.Type}, {\"second\", Int16.Type}, {\"15\", Int16.Type}, {\"30\", Int16.Type}, {\"AM PM\", type text}})",
          "in",
          "    Navegación1"
        ],
        "kind": "m",
        "lineageTag": "b752260f-23b5-49f6-bdfd-6ef3e664045a",
        "queryGroup": "Transformar archivo de Impresora Cierres\\Consultas auxiliares"
      },
      {
        "name": "Parámetro10",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Binary"
          }
        ],
        "expression": "#\"Archivo de ejemplo (10)\" meta [IsParameterQuery=true, BinaryIdentifier=#\"Archivo de ejemplo (10)\", Type=\"Binary\", IsParameterQueryRequired=true]",
        "kind": "m",
        "lineageTag": "382cc6ed-5e8c-44da-955b-59ab50a9e414",
        "queryGroup": "Transformar archivo de Impresora Cierres\\Consultas auxiliares"
      },
      {
        "name": "Transformar archivo de ejemplo (10)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Origen = Parquet.Document(Parámetro10, [Compression=null, LegacyColumnNameEncoding=false, MaxDepth=null])",
          "in",
          "    Origen"
        ],
        "kind": "m",
        "lineageTag": "bffb1958-28e6-43b0-aad9-c43df6273ab3",
        "queryGroup": "Transformar archivo de Impresora Cierres"
      },
      {
        "name": "Transformar archivo (10)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Function"
          }
        ],
        "expression": [
          "let",
          "    Origen = (Parámetro10 as binary) => let",
          "    Origen = Parquet.Document(Parámetro10, [Compression=null, LegacyColumnNameEncoding=false, MaxDepth=null])",
          "in",
          "    Origen",
          "in",
          "    Origen"
        ],
        "kind": "m",
        "lineageTag": "744c9fff-0c91-44ba-a09b-769267e474bb",
        "queryGroup": "Transformar archivo de Impresora Cierres\\Consultas auxiliares"
      },
      {
        "name": "Archivo de ejemplo (11)",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navegación"
          },
          {
            "name": "PBI_ResultType",
            "value": "Binary"
          }
        ],
        "expression": [
          "let",
          "// Load data from Azure Data Lake",
          "   Source = AzureStorage.DataLake(\"https://stgdatapbi.dfs.core.windows.net/data/dev/pos/tilby/fact/sale_item/\"),",
          "// Filter files that start with \"\"pos_sale_item\"\"",
          "   #\"Filter Files\" = Table.SelectRows(#\"Source\", each Text.StartsWith([Name], \"pos_sale_item\")),",
          "// Exclude hidden files",
          "   #\"Exclude Hidden Files\" = Table.SelectRows(#\"Filter Files\", each [Attributes]?[Hidden]? <> true),",
          "// Partition by Month",
          "   #\"Add Column Partition\" = Table.AddColumn(Source, \"Partition\", each ",
          "    let",
          "        FileName = [Name],",
          "        DateText = // Extracts the 'yyyymmdd' part",
          "        Text.Replace (",
          "                    Text.Replace ([Name], \"pos_sale_item_\", \"\")",
          "                    ,\".parquet\"",
          "                    ,\"\"",
          "                ),",
          "        Year = Text.Middle(DateText, 0, 4),",
          "        Month = Text.Middle(DateText, 4, 2),",
          "        Day = \"01\",",
          "        DateValue = Date.FromText(Year & \"-\" & Month & \"-\" & Day)",
          "    in",
          "        DateValue),",
          "    Navegación1 = #\"Add Column Partition\"{0}[Content]",
          "in",
          "    Navegación1"
        ],
        "kind": "m",
        "lineageTag": "5c12a45d-2218-4b6d-b3ef-8ec1fb55f483",
        "queryGroup": "Transformar archivo de Venta Productos\\Consultas auxiliares"
      },
      {
        "name": "Parámetro11",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Binary"
          }
        ],
        "expression": "#\"Archivo de ejemplo (11)\" meta [IsParameterQuery=true, BinaryIdentifier=#\"Archivo de ejemplo (11)\", Type=\"Binary\", IsParameterQueryRequired=true]",
        "kind": "m",
        "lineageTag": "bb0a4fcd-92fa-4123-8c98-63641530820e",
        "queryGroup": "Transformar archivo de Venta Productos\\Consultas auxiliares"
      },
      {
        "name": "Transformar archivo de ejemplo (11)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Origen = Parquet.Document(Parámetro11, [Compression=null, LegacyColumnNameEncoding=false, MaxDepth=null])",
          "in",
          "    Origen"
        ],
        "kind": "m",
        "lineageTag": "14cd252b-567c-40c1-b46c-8940f47f1b69",
        "queryGroup": "Transformar archivo de Venta Productos"
      },
      {
        "name": "Transformar archivo (11)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Function"
          },
          {
            "name": "PBI_NavigationStepName",
            "value": "Navegación"
          }
        ],
        "expression": [
          "let",
          "    Origen = (Parámetro11 as binary) => let",
          "    Origen = Parquet.Document(Parámetro11, [Compression=null, LegacyColumnNameEncoding=false, MaxDepth=null])",
          "in",
          "    Origen",
          "in",
          "    Origen"
        ],
        "kind": "m",
        "lineageTag": "b9994e66-f057-4c77-b9b2-e7a8018686c6",
        "queryGroup": "Transformar archivo de Venta Productos\\Consultas auxiliares"
      },
      {
        "name": "Archivo de ejemplo (12)",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navegación"
          },
          {
            "name": "PBI_ResultType",
            "value": "Binary"
          }
        ],
        "expression": [
          "let",
          "// Load data from Azure Data Lake",
          "   Source = AzureStorage.DataLake(\"https://stgdatapbi.dfs.core.windows.net/data/dev/pos/tilby/fact/sale_payment/\"),",
          "// Filter files that start with \"\"pos_sale_payment\"\"",
          "   #\"Filter Files\" = Table.SelectRows(#\"Source\", each Text.StartsWith([Name], \"pos_sale_payment\")),",
          "// Exclude hidden files",
          "   #\"Exclude Hidden Files\" = Table.SelectRows(#\"Filter Files\", each [Attributes]?[Hidden]? <> true),",
          "// Partition by Month",
          "   #\"Add Column Partition\" = Table.AddColumn(Source, \"Partition\", each ",
          "    let",
          "        FileName = [Name],",
          "        DateText = // Extracts the 'yyyymmdd' part",
          "        Text.Replace (",
          "                    Text.Replace ([Name], \"pos_sale_payment_\", \"\")",
          "                    ,\".parquet\"",
          "                    ,\"\"",
          "                ),",
          "        Year = Text.Middle(DateText, 0, 4),",
          "        Month = Text.Middle(DateText, 4, 2),",
          "        Day = \"01\",",
          "        DateValue = Date.FromText(Year & \"-\" & Month & \"-\" & Day)",
          "    in",
          "        DateValue),",
          "    Navegación1 = #\"Add Column Partition\"{0}[Content]",
          "in",
          "    Navegación1"
        ],
        "kind": "m",
        "lineageTag": "c9406e35-d0b7-4675-b6a5-0431d6710670",
        "queryGroup": "Transformar archivo de Venta Pagos\\Consultas auxiliares"
      },
      {
        "name": "Parámetro12",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Binary"
          }
        ],
        "expression": "#\"Archivo de ejemplo (12)\" meta [IsParameterQuery=true, BinaryIdentifier=#\"Archivo de ejemplo (12)\", Type=\"Binary\", IsParameterQueryRequired=true]",
        "kind": "m",
        "lineageTag": "c24718b6-7ecf-4f01-9bef-6668e59ee349",
        "queryGroup": "Transformar archivo de Venta Pagos\\Consultas auxiliares"
      },
      {
        "name": "Transformar archivo de ejemplo (12)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Origen = Parquet.Document(Parámetro12, [Compression=null, LegacyColumnNameEncoding=false, MaxDepth=null])",
          "in",
          "    Origen"
        ],
        "kind": "m",
        "lineageTag": "8889f542-412e-4641-ba1d-c2ba71d9a63a",
        "queryGroup": "Transformar archivo de Venta Pagos"
      },
      {
        "name": "Transformar archivo (12)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Exception"
          }
        ],
        "expression": [
          "let",
          "    Origen = (Parámetro12 as binary) => let",
          "    Origen = Parquet.Document(Parámetro12, [Compression=null, LegacyColumnNameEncoding=false, MaxDepth=null])",
          "in",
          "    Origen",
          "in",
          "    Origen"
        ],
        "kind": "m",
        "lineageTag": "65955773-e819-4ca5-83d6-92d4266a5f64",
        "queryGroup": "Transformar archivo de Venta Pagos\\Consultas auxiliares"
      },
      {
        "name": "Archivo de ejemplo (14)",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navegación"
          },
          {
            "name": "PBI_ResultType",
            "value": "Binary"
          }
        ],
        "expression": [
          "let",
          "// Load data from Azure Data Lake",
          "    Source = AzureStorage.DataLake(\"https://stgdatapbi.dfs.core.windows.net/data/dev/lean/\"),",
          "// Filter file \"estancias_general.parquet\"",
          "    #\"Filter Files\" = Table.SelectRows(#\"Source\", each Text.Contains([Name], \"estancias_general.parquet\")),",
          "// Exclude hidden files",
          "   #\"Exclude Hidden Files\" = Table.SelectRows(#\"Filter Files\", each [Attributes]?[Hidden]? <> true),",
          "    Navegación1 = #\"Exclude Hidden Files\"{0}[Content]",
          "in",
          "    Navegación1"
        ],
        "kind": "m",
        "lineageTag": "d3a2be0d-18b6-4e2b-8d4b-2be26398b1d1",
        "queryGroup": "Transformar archivo de Estadística\\Consultas auxiliares"
      },
      {
        "name": "Parámetro14",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Binary"
          }
        ],
        "expression": "#\"Archivo de ejemplo (14)\" meta [IsParameterQuery=true, BinaryIdentifier=#\"Archivo de ejemplo (14)\", Type=\"Binary\", IsParameterQueryRequired=true]",
        "kind": "m",
        "lineageTag": "eb389504-647e-4275-94a0-99419e193a53",
        "queryGroup": "Transformar archivo de Estadística\\Consultas auxiliares"
      },
      {
        "name": "Transformar archivo de ejemplo (14)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Origen = Parquet.Document(Parámetro14, [Compression=null, LegacyColumnNameEncoding=false, MaxDepth=null])",
          "in",
          "    Origen"
        ],
        "kind": "m",
        "lineageTag": "37dfc501-8d02-404b-8181-9e753eaa5083",
        "queryGroup": "Transformar archivo de Estadística"
      },
      {
        "name": "Transformar archivo (14)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Function"
          }
        ],
        "expression": [
          "let",
          "    Origen = (Parámetro14) => let",
          "        Origen = Parquet.Document(Parámetro14, [Compression=null, LegacyColumnNameEncoding=false, MaxDepth=null])",
          "    in",
          "        Origen",
          "in",
          "    Origen"
        ],
        "kind": "m",
        "lineageTag": "8167ccbe-67b7-49c3-9fde-9bf468fa7ba9",
        "queryGroup": "Transformar archivo de Estadística\\Consultas auxiliares"
      }
    ],
    "queryGroups": [
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "5"
          }
        ],
        "folder": "Transformar archivo de Venta"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "0"
          }
        ],
        "folder": "Transformar archivo de Venta\\Consultas auxiliares"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "7"
          }
        ],
        "folder": "Transformar archivo de Hotel"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "0"
          }
        ],
        "folder": "Transformar archivo de Hotel\\Consultas auxiliares"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "9"
          }
        ],
        "folder": "Transformar archivo de POS"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "0"
          }
        ],
        "folder": "Transformar archivo de POS\\Consultas auxiliares"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "10"
          }
        ],
        "folder": "Transformar archivo de Impresora"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "0"
          }
        ],
        "folder": "Transformar archivo de Impresora\\Consultas auxiliares"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "14"
          }
        ],
        "folder": "Transformar archivo de Categoría de artículo"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "0"
          }
        ],
        "folder": "Transformar archivo de Categoría de artículo\\Consultas auxiliares"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "22"
          }
        ],
        "folder": "Transformar archivo de Venta Pagos"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "0"
          }
        ],
        "folder": "Transformar archivo de Venta Pagos\\Consultas auxiliares"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "12"
          }
        ],
        "folder": "Transformar archivo de Método de pago"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "0"
          }
        ],
        "folder": "Transformar archivo de Método de pago\\Consultas auxiliares"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "16"
          }
        ],
        "folder": "Transformar archivo de Tiempo"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "18"
          }
        ],
        "folder": "Transformar archivo de Impresora Cierres"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "20"
          }
        ],
        "folder": "Transformar archivo de Venta Productos"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "0"
          }
        ],
        "folder": "Transformar archivo de Tiempo\\Consultas auxiliares"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "0"
          }
        ],
        "folder": "Transformar archivo de Impresora Cierres\\Consultas auxiliares"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "0"
          }
        ],
        "folder": "Transformar archivo de Venta Productos\\Consultas auxiliares"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "26"
          }
        ],
        "folder": "Transformar archivo de Estadística"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "0"
          }
        ],
        "folder": "Transformar archivo de Estadística\\Consultas auxiliares"
      }
    ],
    "relationships": [
      {
        "name": "AutoDetected_6b70e829-a61f-4cf9-8725-2e21c12fc174",
        "fromColumn": "printer id",
        "fromTable": "Impresora Cierres",
        "toColumn": "printer id",
        "toTable": "Impresora"
      },
      {
        "name": "AutoDetected_460c9b2c-8661-418b-a239-8db9d0a5fc42",
        "fromColumn": "pos id",
        "fromTable": "Impresora",
        "toColumn": "pos id",
        "toTable": "POS"
      },
      {
        "name": "8b0acb2d-ebf8-4c4d-ae06-b39b6d9faa2c",
        "fromColumn": "chain shop id",
        "fromTable": "POS",
        "toColumn": "hotel id",
        "toTable": "Hotel"
      },
      {
        "name": "AutoDetected_f1b452e5-f5c5-4298-995c-d7ca601089e9",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "sale id",
        "fromTable": "Venta Pagos",
        "toColumn": "sale id",
        "toTable": "Venta"
      },
      {
        "name": "AutoDetected_1290ebe4-69f9-4e0b-a43d-965d890e572f",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "sale id",
        "fromTable": "Venta Productos",
        "toColumn": "sale id",
        "toTable": "Venta"
      },
      {
        "name": "AutoDetected_bbe13e28-6949-49ed-b5e2-18c4f0635460",
        "fromColumn": "fk printer closing id",
        "fromTable": "Venta",
        "toColumn": "printer closing id",
        "toTable": "Impresora Cierres"
      },
      {
        "name": "c1da23a6-171b-476c-849f-fe9c4433d1e6",
        "fromColumn": "product category id",
        "fromTable": "Venta Productos",
        "toColumn": "item category id",
        "toTable": "Categoría de artículo"
      },
      {
        "name": "28edac4c-ba53-424f-ae7b-05d8dde40cd0",
        "fromColumn": "sale day id",
        "fromTable": "Impresora Cierres",
        "toColumn": "date id",
        "toTable": "Calendario"
      },
      {
        "name": "584ba922-3b2f-4d51-babb-3a9c071e067f",
        "fromColumn": "payment method id",
        "fromTable": "Venta Pagos",
        "toColumn": "payment method id",
        "toTable": "Método de pago"
      },
      {
        "name": "aafe3bef-1b3a-4d28-9dff-eefcf35b463c",
        "fromColumn": "closed at time id",
        "fromTable": "Venta",
        "toColumn": "time id",
        "toTable": "Tiempo"
      },
      {
        "name": "67eff89b-877b-484f-86e1-b32dd29f0446",
        "fromColumn": "open at time id",
        "fromTable": "Venta",
        "isActive": false,
        "toColumn": "time id",
        "toTable": "Tiempo"
      },
      {
        "name": "66f5f1df-8761-4f2e-a793-c2c69dda8098",
        "fromColumn": "date id",
        "fromTable": "Estadística",
        "toColumn": "date id",
        "toTable": "Calendario"
      },
      {
        "name": "a36e5e43-0c55-451f-9c7e-ff4c64e388a9",
        "fromColumn": "hotel id",
        "fromTable": "Estadística",
        "toCardinality": "many",
        "toColumn": "chain shop id",
        "toTable": "POS"
      }
    ],
    "roles": [
      {
        "name": "Todas las Cadenas",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "238f21153118428eba9b7c80a606dc9a"
          }
        ],
        "modelPermission": "read"
      },
      {
        "name": "Gran Tacande - Todos los POS",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "c49684c3d0ae43889a07234ef3e1df4a"
          }
        ],
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "POS",
            "filterExpression": "[Cadena de negocio] == \"Gran Tacande\""
          }
        ]
      },
      {
        "name": "Tigotan - Todos los POS",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "591f306268e949b189647e2a5237dc86"
          }
        ],
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "POS",
            "filterExpression": "[Cadena de negocio] == \"Tigotan\""
          }
        ]
      },
      {
        "name": "Tigotan - Area Recepción",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "ff35f9b4931742d18a403c6da48e9a6b"
          }
        ],
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "POS",
            "filterExpression": "[Cadena de negocio] == \"Tigotan\" && [POS] IN {\"Recepcion\"}"
          }
        ]
      },
      {
        "name": "Gran Tacande - Area Restaurantes",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "ddebb3207b16474a9d461a615b0ce2b2"
          }
        ],
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "POS",
            "filterExpression": "[Cadena de negocio] == \"Gran Tacande\" && [POS] IN {\"Room Service Tacande\", \"Restaurante Zurron\"}"
          }
        ]
      },
      {
        "name": "Gran Tacande - Area Bares",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "0a1219a494804350af21b1532f973cbd"
          }
        ],
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "POS",
            "filterExpression": "[Cadena de negocio] == \"Gran Tacande\" && [POS] IN {\"Bar Hall\", \"Bar Lobby\", \"Bar Bocana Beach Club\", \"Azotea  Sunset Raw Bar\", \"Bar San Sebastian\"}"
          }
        ]
      },
      {
        "name": "Gran Tacande - Area Recepción",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "3fb2269069db45e2bf3f2e57ef0405ff"
          }
        ],
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "POS",
            "filterExpression": "[Cadena de negocio] == \"Gran Tacande\" && [POS] IN {\"Recepcion Tacande\"}"
          }
        ]
      },
      {
        "name": "Gran Tagoro - Area Restaurantes",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "1c6a3926eb7c41499725ac82cd26cf12"
          }
        ],
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "POS",
            "filterExpression": "[Cadena de negocio] == \"Gran Tagoro\" && [POS] IN {\"Restaurante Portofino\",\"Restaurante Coloradas\",\"Restaurante Sansofe\"}"
          }
        ]
      },
      {
        "name": "Gran Tagoro - Area Recepción",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "60522f67628145448fe85e417dfcb93e"
          }
        ],
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "POS",
            "filterExpression": "[Cadena de negocio] == \"Gran Tagoro\" && [POS] IN {\"Recepcion\"}"
          }
        ]
      },
      {
        "name": "Tagoro - Area Recepción",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "e189c16d2431473596ac0a1b68a16b68"
          }
        ],
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "POS",
            "filterExpression": "[Cadena de negocio] == \"Tagoro\" && [POS] IN {\"Recepcion Tagoro\"}"
          }
        ]
      },
      {
        "name": "Tagoro - Todos los POS",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "3aa4f398224344779bdcd8a2f4b8dfac"
          }
        ],
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "POS",
            "filterExpression": "[Cadena de negocio] == \"Tagoro\""
          }
        ]
      },
      {
        "name": "Cristina By Tigotan - Area Restaurantes",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "06382a8ba9dd41ae957ae06c69714d8b"
          }
        ],
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "POS",
            "filterExpression": "[Cadena de negocio] == \"Cristina By Tigotan\" && [POS] IN {\"Restaurante Areca\", \"Room Service\"}"
          }
        ]
      },
      {
        "name": "Cristina By Tigotan - Area Eventos",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "480fcc86ec6f4ca39b8fec82cc9c42cc"
          }
        ],
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "POS",
            "filterExpression": "[Cadena de negocio] == \"Cristina By Tigotan\" && [POS] = \"Eventos\""
          }
        ]
      },
      {
        "name": "Cristina By Tigotan - Todos los POS",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "98359821fca248f99dd320988231cd80"
          }
        ],
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "POS",
            "filterExpression": "[Cadena de negocio] == \"Cristina By Tigotan\""
          }
        ]
      },
      {
        "name": "Gran Tagoro - Todos los POS",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "8f34170d15214a8686123ba34c1746f1"
          }
        ],
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "POS",
            "filterExpression": "[Cadena de negocio] == \"Gran Tagoro\""
          }
        ]
      },
      {
        "name": "Cristina By Tigotan - Area Bares",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "c5fc7303b00745858e57f0d0e7a79a15"
          }
        ],
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "POS",
            "filterExpression": "[Cadena de negocio] == \"Cristina By Tigotan\" && [POS] IN {\"Bar Lobby\", \"Beach Club\"}"
          }
        ]
      },
      {
        "name": "Gran Tacande - Area SPA",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "eaf760c958044bf9bc5c3c71aa5cc21a"
          }
        ],
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "POS",
            "filterExpression": "[Cadena de negocio] == \"Gran Tacande\" && [POS] IN {\"SPA Vitanova Tacande\"}"
          }
        ]
      },
      {
        "name": "Gran Tagoro - Area Bares",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "92bc28bff7ba4f7e94163223cf4f62f1"
          }
        ],
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "POS",
            "filterExpression": "[Cadena de negocio] == \"Gran Tagoro\" && [POS] IN {\"Bar Cascada\",\"Bar Vitanova\",\"Dacil\",\"Sport Bar\",\"Disco Castillo\"}"
          }
        ]
      },
      {
        "name": "Gran Tagoro - Area SPA",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "e3da80266e1841e3a6f3c9a70462ef49"
          }
        ],
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "POS",
            "filterExpression": "[Cadena de negocio] == \"Gran Tagoro\" && [POS] IN {\"Spa Gran Tagoro\"}"
          }
        ]
      },
      {
        "name": "Tagoro - Area Bares",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "89113d3169aa4fa59bbfdf7b05b7b88b"
          }
        ],
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "POS",
            "filterExpression": "[Cadena de negocio] == \"Tagoro\" && [POS] IN {\"Servicios (Rte&Bares)\"}"
          }
        ]
      },
      {
        "name": "Tigotan - Area Bares",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "2705ac80933e48ad983ad4448fa8815d"
          }
        ],
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "POS",
            "filterExpression": "[Cadena de negocio] == \"Tigotan\" && [POS] IN {\"Bar Hall\",\"Beach Club\",\"Cafe del Mar\"}"
          }
        ]
      },
      {
        "name": "Tigotan - Area SPA",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "5e7b3aaa6e0d4599a2dfae941c4dbe9a"
          }
        ],
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "POS",
            "filterExpression": "[Cadena de negocio] == \"Tigotan\" && [POS] IN {\"Spa\"}"
          }
        ]
      },
      {
        "name": "Tigotan - Area Restaurantes",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "e4d650f5cea3435e9267053a9b45eac4"
          }
        ],
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "POS",
            "filterExpression": "[Cadena de negocio] == \"Tigotan\" && [POS] IN {\"Areca\",\"Santa Rosa\"}"
          }
        ]
      },
      {
        "name": "Locales CC  The Corner - Area Bares",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "0fa8076637334f258462c9bad16af388"
          }
        ],
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "POS",
            "filterExpression": "[Cadena de negocio] == \"Locales CC The Corner\" && [POS] IN {\"The Corner Cafe\"}"
          }
        ]
      },
      {
        "name": "Locales CC The Corner - Area Restaurantes",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "753e43837a694b668730324f8b7e7132"
          }
        ],
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "POS",
            "filterExpression": "[Cadena de negocio] == \"Locales CC The Corner\" && [POS] IN {\"Restaurante Portofino\",\"Restaurante White Tapas\"}"
          }
        ]
      },
      {
        "name": "Locales CC The Corner - Todos los POS",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "15c0175ebeba4ddeab4fdb5020bc5208"
          }
        ],
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "POS",
            "filterExpression": "[Cadena de negocio] == \"Locales CC The Corner\""
          }
        ]
      }
    ],
    "sourceQueryCulture": "es-ES",
    "tables": [
      {
        "name": "Calendario",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "e2246acb292c47dfa840fee5a5b81e5e"
          }
        ],
        "columns": [
          {
            "name": "Fecha",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "displayFolder": "Columns",
            "formatString": "Short Date",
            "isDataTypeInferred": true,
            "isKey": true,
            "isNameInferred": false,
            "lineageTag": "1d283816-258d-470a-b5c0-57370ee2dc39",
            "sourceColumn": "[Date]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Mes numero",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              }
            ],
            "dataType": "int64",
            "displayFolder": "Columns",
            "expression": "MONTH(Calendario[Fecha])",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "b22037d5-b855-485c-b28b-f4f404a22a9b",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Año",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              }
            ],
            "dataType": "int64",
            "displayFolder": "Columns",
            "expression": "year(Calendario[Fecha])",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "6dd952ed-6bec-44d9-887e-4da3a647c542",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Día",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              }
            ],
            "dataType": "int64",
            "displayFolder": "Columns",
            "expression": "day(Calendario[Fecha])",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "105db72a-ef7b-461b-acd0-03a8c3ca5bed",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Mes",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "displayFolder": "Columns",
            "expression": "UPPER(LEFT(FORMAT(Calendario[Fecha], \"MMM\", \"Es-es\"))) & LOWER(RIGHT(FORMAT(Calendario[Fecha], \"MMM\", \"es-ES\"), 2))",
            "isDataTypeInferred": true,
            "lineageTag": "e22777a5-a5e6-4d0c-99b7-8334cdc6f883",
            "sortByColumn": "Mes numero",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Año Mes",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDateTimeCustom\":true}"
              }
            ],
            "dataType": "dateTime",
            "displayFolder": "Columns",
            "expression": "STARTOFMONTH(Calendario[Fecha])",
            "formatString": "yyyy-mm",
            "lineageTag": "a932decc-e156-453a-aa25-2594af0ab427",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Día semana",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "displayFolder": "Columns",
            "expression": "REPLACE(format(WEEKDAY(Calendario[Fecha]), \"dddd\"),1,1,Upper(left(format(WEEKDAY(Calendario[Fecha]), \"dddd\"),1)))",
            "lineageTag": "896b9a72-0625-499d-b870-02572bd3ad9b",
            "sortByColumn": "Día semana numero",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Día semana numero",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "displayFolder": "Columns",
            "expression": "WEEKDAY(Calendario[Fecha],2)",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "fc25023a-3dcd-40be-9a3b-1fbff1f67e41",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Semana natural",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "displayFolder": "Columns",
            "expression": "WEEKNUM(Calendario[Fecha],2)",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "4b2a27ce-a464-44c1-a78b-f24f2bd377ed",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Cuarto numero",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              }
            ],
            "dataType": "int64",
            "displayFolder": "Columns",
            "expression": "QUARTER(Calendario[Fecha])",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "a99126c3-6f81-42ed-863d-690adf415e9e",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Cuarto",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "displayFolder": "Columns",
            "expression": "\"Q\" & Calendario[Cuarto numero]",
            "isDataTypeInferred": true,
            "lineageTag": "0a689686-4cbf-4b4d-9083-36a589dbd64f",
            "sortByColumn": "Cuarto numero",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Año Cuarto",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "displayFolder": "Columns",
            "expression": "Calendario[Año] & \" \" & Calendario[Cuarto]",
            "isDataTypeInferred": true,
            "lineageTag": "f3b019f4-8aaa-436b-a20f-bbb41ff1d5e9",
            "sortByColumn": "Año Cuarto numero",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Año Cuarto numero",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              }
            ],
            "dataType": "int64",
            "displayFolder": "Columns",
            "expression": "Calendario[Año] & Calendario[Cuarto numero]",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "77b54edc-e75c-4220-ba3f-1939f944bb65",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "date id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "displayFolder": "Columns",
            "expression": [
              "",
              "VALUE(",
              "    FORMAT(Calendario[fecha], \"YYYY\") &",
              "    FORMAT(Calendario[fecha], \"MM\") &",
              "    FORMAT(Calendario[fecha], \"DD\")",
              ")"
            ],
            "formatString": "0",
            "lineageTag": "f37e45a5-0776-4f90-8cb3-eedf12574749",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "month id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "displayFolder": "Columns",
            "expression": [
              "",
              "VALUE(",
              "    FORMAT(Calendario[fecha], \"YYYY\") &",
              "    FORMAT(Calendario[fecha], \"MM\")",
              ")"
            ],
            "formatString": "0",
            "lineageTag": "660002a2-97d8-4933-a1ef-486521f54832",
            "summarizeBy": "sum",
            "type": "calculated"
          }
        ],
        "dataCategory": "Time",
        "hierarchies": [
          {
            "name": "Año Hierarchy",
            "displayFolder": "Hierarchies",
            "levels": [
              {
                "name": "Año",
                "column": "Año",
                "lineageTag": "04906274-c83f-4f7a-917d-1ef4e98e8818",
                "ordinal": 0
              },
              {
                "name": "Año Cuarto",
                "column": "Año Cuarto",
                "lineageTag": "ea63fb10-8dff-453e-8a1f-45f4ed50e452",
                "ordinal": 1
              },
              {
                "name": "Año Mes",
                "column": "Año Mes",
                "lineageTag": "df141e25-47f1-4818-ab85-8014393d8ea2",
                "ordinal": 2
              },
              {
                "name": "Fecha",
                "column": "Fecha",
                "lineageTag": "288137c6-00c3-4698-9005-78883ef46a92",
                "ordinal": 3
              }
            ],
            "lineageTag": "96a65bbf-8917-4aa6-9dbc-3b15ab250733"
          }
        ],
        "lineageTag": "b029a351-cfd1-44d2-9fa2-96e7f2d227ab",
        "partitions": [
          {
            "name": "Calendario-4fef266c-c1ae-45c5-b968-c6afcc93ee33",
            "mode": "import",
            "source": {
              "expression": [
                "",
                "    CALENDAR(",
                "        DATE(YEAR(MIN('Impresora Cierres'[Día de venta])),1,1),",
                "        DATE(YEAR(MAX('Impresora Cierres'[Día de venta])),12,31)",
                "        )"
              ],
              "type": "calculated"
            }
          }
        ]
      },
      {
        "name": "TestList",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "changedProperties": [
          {
            "property": "IsHidden"
          }
        ],
        "columns": [
          {
            "name": "Test Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "string",
            "displayFolder": "Columns",
            "isHidden": true,
            "lineageTag": "e60173dc-008e-4a5d-bb99-064a7db6e3fa",
            "sourceColumn": "Test Name",
            "summarizeBy": "none"
          },
          {
            "name": "Category",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "string",
            "displayFolder": "Columns",
            "isHidden": true,
            "lineageTag": "9e395599-66b1-473d-893c-4de77752e998",
            "sourceColumn": "Category",
            "summarizeBy": "none"
          },
          {
            "name": "Priority",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "string",
            "displayFolder": "Columns",
            "isHidden": true,
            "lineageTag": "47259a37-1f0f-45da-a1b1-918d5c3ee24e",
            "sourceColumn": "Priority",
            "summarizeBy": "none"
          },
          {
            "name": "Expected Value",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "double",
            "displayFolder": "Columns",
            "isHidden": true,
            "lineageTag": "7d7e369c-2649-4821-b831-2371d1351a3c",
            "sourceColumn": "Expected Value",
            "summarizeBy": "sum"
          },
          {
            "name": "Allowed Variance %",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "double",
            "displayFolder": "Columns",
            "formatString": "0.00\\ %;-0.00\\ %;0.00\\ %",
            "isHidden": true,
            "lineageTag": "3b75a8b6-50f4-4ed7-865e-c9a736768b17",
            "sourceColumn": "Allowed Variance %",
            "summarizeBy": "sum"
          },
          {
            "name": "Test ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "displayFolder": "Columns",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "6e9dad3a-4677-452e-9d12-12aa264d61c1",
            "sourceColumn": "Test ID",
            "summarizeBy": "none"
          },
          {
            "name": "Subcategory",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "displayFolder": "Columns",
            "lineageTag": "37b53561-7b2e-48f0-988c-baeb1fbd2167",
            "sourceColumn": "Subcategory",
            "summarizeBy": "none"
          },
          {
            "name": "Hierarchy Level",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "displayFolder": "Columns",
            "lineageTag": "6687109e-c304-4ba6-9bbb-b0c2ac2cbb14",
            "sourceColumn": "Hierarchy Level",
            "summarizeBy": "none"
          },
          {
            "name": "Hierarchy Value",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "displayFolder": "Columns",
            "lineageTag": "bf583282-d1fd-43fb-ae35-328afab45b36",
            "sourceColumn": "Hierarchy Value",
            "summarizeBy": "none"
          },
          {
            "name": "Period",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "displayFolder": "Columns",
            "lineageTag": "f8b020f8-8c8d-4550-b23a-e0d46662765d",
            "sourceColumn": "Period",
            "summarizeBy": "none"
          },
          {
            "name": "Period Value",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "displayFolder": "Columns",
            "lineageTag": "983eb380-1a7a-4d7c-98d1-00d02d1282aa",
            "sourceColumn": "Period Value",
            "summarizeBy": "none"
          },
          {
            "name": "Dimension",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "displayFolder": "Columns",
            "lineageTag": "51da9aa3-d776-4bff-83c4-baae63c70220",
            "sourceColumn": "Dimension",
            "summarizeBy": "none"
          },
          {
            "name": "Dimension Value",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "displayFolder": "Columns",
            "lineageTag": "4d5fc356-b29c-4f71-8875-a129be35a8e9",
            "sourceColumn": "Dimension Value",
            "summarizeBy": "none"
          },
          {
            "name": "Measure",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "displayFolder": "Columns",
            "lineageTag": "6a16f3c5-d877-4dcc-9021-df0f627ad02b",
            "sourceColumn": "Measure",
            "summarizeBy": "none"
          },
          {
            "name": "DAX ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "displayFolder": "Columns",
            "lineageTag": "d744e543-dc5a-46d4-aedc-9becdbec34f4",
            "sourceColumn": "DAX ID",
            "summarizeBy": "none"
          },
          {
            "name": "Period ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "displayFolder": "Columns",
            "lineageTag": "f2ead34f-92f2-480d-860b-e05c8be98f55",
            "sourceColumn": "Period ID",
            "summarizeBy": "none"
          },
          {
            "name": "DAX Code",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "displayFolder": "Columns",
            "lineageTag": "d81784a3-7601-4c6b-888c-4fe21335db23",
            "sourceColumn": "DAX Code",
            "summarizeBy": "none"
          },
          {
            "name": "UI Navigation",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "displayFolder": "Columns",
            "lineageTag": "b86a7c6e-fdb6-4cb2-9687-2eb8352ebb6d",
            "sourceColumn": "UI Navigation",
            "summarizeBy": "none"
          },
          {
            "name": "PBI Navigation",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "displayFolder": "Columns",
            "lineageTag": "9a43265c-d714-4f23-bb69-06b43173bcd2",
            "sourceColumn": "PBI Navigation",
            "summarizeBy": "none"
          },
          {
            "name": "Is Implemented",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "displayFolder": "Columns",
            "expression": [
              "",
              "    IF(",
              "        ISBLANK(",
              "            CALCULATE(",
              "                [Test Measure Actual Value],",
              "                TestList[Test ID] = EARLIER(TestList[Test ID]) // Filter by current Test ID",
              "            )",
              "        ),",
              "        \"No\",",
              "        IF(",
              "            CALCULATE(",
              "                [Test Measure Actual Value],",
              "                TestList[Test ID] = EARLIER(TestList[Test ID]) // Filter by current Test ID",
              "            ) = 0,",
              "            \"Yes\",",
              "            \"Yes\"",
              "        )",
              "    )",
              ""
            ],
            "isDataTypeInferred": true,
            "lineageTag": "6cc9d5a7-4428-4d20-9599-b0ad0d47fa99",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Is Active",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "displayFolder": "Columns",
            "lineageTag": "3f93d255-384d-4d92-bc46-ab9af8fcc1c5",
            "sourceColumn": "Is Active",
            "summarizeBy": "none"
          }
        ],
        "isHidden": true,
        "lineageTag": "49a4e5a0-3d59-4caa-b54d-055dabb2def8",
        "measures": [
          {
            "name": "Generated DAX Code",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "displayFolder": "Measures",
            "expression": [
              "",
              "\"Test Measure Actual Value = SWITCH(\" & UNICHAR(10) &",
              "    \"    SELECTEDVALUE(TestList[Test ID]),\" & UNICHAR(10) &",
              "    CONCATENATEX(",
              "        FILTER(TestList, TestList[Is Active] = \"Yes\"), ",
              "        \"    \" & TestList[Test ID] & \", IF(ISBLANK(\" & TestList[DAX Code] & \"), 0, \" & TestList[DAX Code] & \")\",",
              "        UNICHAR(10) & \"    , \", ",
              "        TestList[Test ID], ",
              "        ASC",
              "    ) &",
              "    UNICHAR(10) &\")\"",
              ""
            ],
            "isHidden": true,
            "lineageTag": "4ced82a0-0b82-4878-a5bd-2edd5437789d"
          },
          {
            "name": "Test Measure Actual Value",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "displayFolder": "Measures",
            "expression": [
              "SWITCH(",
              "    SELECTEDVALUE(TestList[Test ID]),",
              "    3, IF(ISBLANK(CALCULATE (",
              "        [Ingresos (€)],",
              "        Calendario[date id] = 20240513,",
              "        'POS'[Cadena de negocio]&\"/\"&'POS'[POS] = \"Tigotan/Beach Club\"",
              "    )), 0, CALCULATE (",
              "        [Ingresos (€)],",
              "        Calendario[date id] = 20240513,",
              "        'POS'[Cadena de negocio]&\"/\"&'POS'[POS] = \"Tigotan/Beach Club\"",
              "    ))",
              "    ,     4, IF(ISBLANK(CALCULATE (",
              "        [Unidades (ctdad)],",
              "        Calendario[date id] = 20240513,",
              "        'POS'[Cadena de negocio]&\"/\"&'POS'[POS] = \"Tigotan/Beach Club\"",
              "    )), 0, CALCULATE (",
              "        [Unidades (ctdad)],",
              "        Calendario[date id] = 20240513,",
              "        'POS'[Cadena de negocio]&\"/\"&'POS'[POS] = \"Tigotan/Beach Club\"",
              "    ))",
              "    ,     5, IF(ISBLANK(CALCULATE (",
              "        [Devoluciones (ctdad)],",
              "        Calendario[date id] = 20240513,",
              "        'POS'[Cadena de negocio]&\"/\"&'POS'[POS] = \"Tigotan/Beach Club\"",
              "    )), 0, CALCULATE (",
              "        [Devoluciones (ctdad)],",
              "        Calendario[date id] = 20240513,",
              "        'POS'[Cadena de negocio]&\"/\"&'POS'[POS] = \"Tigotan/Beach Club\"",
              "    ))",
              "    ,     6, IF(ISBLANK(CALCULATE (",
              "        [Devoluciones (€)],",
              "        Calendario[date id] = 20240513,",
              "        'POS'[Cadena de negocio]&\"/\"&'POS'[POS] = \"Tigotan/Beach Club\"",
              "    )), 0, CALCULATE (",
              "        [Devoluciones (€)],",
              "        Calendario[date id] = 20240513,",
              "        'POS'[Cadena de negocio]&\"/\"&'POS'[POS] = \"Tigotan/Beach Club\"",
              "    ))",
              "    ,     7, IF(ISBLANK(CALCULATE (",
              "        [Venta (€)],",
              "        Calendario[date id] = 20240513,",
              "        'POS'[Cadena de negocio]&\"/\"&'POS'[POS] = \"Tigotan/Beach Club\"",
              "    )), 0, CALCULATE (",
              "        [Venta (€)],",
              "        Calendario[date id] = 20240513,",
              "        'POS'[Cadena de negocio]&\"/\"&'POS'[POS] = \"Tigotan/Beach Club\"",
              "    ))",
              "    ,     9, IF(ISBLANK(CALCULATE (",
              "        [Tickets (ctdad)],",
              "        Calendario[date id] = 20240513,",
              "        'POS'[Cadena de negocio]&\"/\"&'POS'[POS] = \"Tigotan/Beach Club\"",
              "    )), 0, CALCULATE (",
              "        [Tickets (ctdad)],",
              "        Calendario[date id] = 20240513,",
              "        'POS'[Cadena de negocio]&\"/\"&'POS'[POS] = \"Tigotan/Beach Club\"",
              "    ))",
              "    ,     14, IF(ISBLANK(CALCULATE (",
              "        [Precio pagado (€)],",
              "        Calendario[date id] = 20240513,",
              "        'POS'[Cadena de negocio]&\"/\"&'POS'[POS] = \"Tigotan/Beach Club\",",
              "        'Método de pago'[Método de pago] = \"Cargo habitación\"",
              "    )), 0, CALCULATE (",
              "        [Precio pagado (€)],",
              "        Calendario[date id] = 20240513,",
              "        'POS'[Cadena de negocio]&\"/\"&'POS'[POS] = \"Tigotan/Beach Club\",",
              "        'Método de pago'[Método de pago] = \"Cargo habitación\"",
              "    ))",
              "    ,     15, IF(ISBLANK(CALCULATE (",
              "        [Precio pagado (€)],",
              "        Calendario[date id] = 20240513,",
              "        'POS'[Cadena de negocio]&\"/\"&'POS'[POS] = \"Tigotan/Beach Club\",",
              "        'Método de pago'[Método de pago] = \"Tarjeta\"",
              "    )), 0, CALCULATE (",
              "        [Precio pagado (€)],",
              "        Calendario[date id] = 20240513,",
              "        'POS'[Cadena de negocio]&\"/\"&'POS'[POS] = \"Tigotan/Beach Club\",",
              "        'Método de pago'[Método de pago] = \"Tarjeta\"",
              "    ))",
              "    ,     16, IF(ISBLANK(CALCULATE (",
              "        [Unidades (ctdad)],",
              "        Calendario[date id] = 20240513,",
              "        'POS'[Cadena de negocio]&\"/\"&'POS'[POS] = \"Tigotan/Beach Club\",",
              "        'Categoría de artículo'[Categoría producto] = \"DAIQUIRI SABORES\"",
              "    )), 0, CALCULATE (",
              "        [Unidades (ctdad)],",
              "        Calendario[date id] = 20240513,",
              "        'POS'[Cadena de negocio]&\"/\"&'POS'[POS] = \"Tigotan/Beach Club\",",
              "        'Categoría de artículo'[Categoría producto] = \"DAIQUIRI SABORES\"",
              "    ))",
              "    ,     17, IF(ISBLANK(CALCULATE (",
              "        [Ingresos (€)],",
              "        Calendario[date id] = 20240513,",
              "        'POS'[Cadena de negocio]&\"/\"&'POS'[POS] = \"Tigotan/Beach Club\",",
              "        'Categoría de artículo'[Categoría producto] = \"DAIQUIRI SABORES\"",
              "    )), 0, CALCULATE (",
              "        [Ingresos (€)],",
              "        Calendario[date id] = 20240513,",
              "        'POS'[Cadena de negocio]&\"/\"&'POS'[POS] = \"Tigotan/Beach Club\",",
              "        'Categoría de artículo'[Categoría producto] = \"DAIQUIRI SABORES\"",
              "    ))",
              ")"
            ],
            "isHidden": true,
            "lineageTag": "b5a7a1f5-76ca-487e-baa9-f6758f1dd8ad"
          },
          {
            "name": "Passed %",
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "displayFolder": "Measures",
            "expression": [
              "",
              "VAR TotalTests = CALCULATE(",
              "    COUNTROWS(TestList),",
              "    TestList[Is Active] = \"Yes\"",
              ")",
              "VAR TestPassed = [Passed]",
              "RETURN ",
              "    DIVIDE(TestPassed, TotalTests)"
            ],
            "formatString": "0.00\\ %;-0.00\\ %;0.00\\ %",
            "isHidden": true,
            "lineageTag": "9f993a90-19ac-4fb5-be5c-bfb00614d686"
          },
          {
            "name": "Variance %",
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "displayFolder": "Measures",
            "expression": [
              "",
              "IF(",
              "    SELECTEDVALUE(TestList[Is Implemented]) = \"Yes\",",
              "    ABS(1 - DIVIDE([Test Measure Actual Value], SELECTEDVALUE(TestList[Expected Value]))),",
              "    \"N/A\"",
              ")"
            ],
            "formatString": "0.00\\ %;-0.00\\ %;0.00\\ %",
            "isHidden": true,
            "lineageTag": "abdf55d3-e973-479e-bd36-c279527e5220"
          },
          {
            "name": "Passed",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "displayFolder": "Measures",
            "expression": [
              "",
              "SUMX(",
              "    FILTER(",
              "        TestList,",
              "        TestList[Is Active] = \"Yes\" && TestList[Is Implemented] = \"Yes\"",
              "    ),",
              "    IF(",
              "        [Variance %] <= TestList[Allowed Variance %],",
              "        1, ",
              "        0",
              "    )",
              ")"
            ],
            "isHidden": true,
            "lineageTag": "15f8cb94-ea9e-4317-9a0b-c0835d855a55"
          },
          {
            "name": "Implemented",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "displayFolder": "Measures",
            "expression": [
              "",
              "    COUNTROWS(",
              "        FILTER(",
              "            TestList,",
              "            TestList[Is Implemented] = \"Yes\"",
              "        )",
              "    )",
              ""
            ],
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "b74cf26a-f4b0-415b-a14a-8a324bffdc36"
          },
          {
            "name": "Variance",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "displayFolder": "Measures",
            "expression": [
              "",
              "IF(",
              "    SELECTEDVALUE(TestList[Is Implemented]) = \"Yes\",",
              "    [Test Measure Actual Value] - SELECTEDVALUE(TestList[Expected Value]),",
              "    \"N/A\"",
              ")",
              ""
            ],
            "isHidden": true,
            "lineageTag": "ec05766f-26bb-4458-a7d6-ad859ec39d45"
          },
          {
            "name": "Active",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "displayFolder": "Measures",
            "expression": [
              "",
              "COUNTROWS(",
              "    FILTER(",
              "        TestList,",
              "        TestList[Is Active] = \"Yes\"",
              "    )",
              ")",
              ""
            ],
            "isHidden": true,
            "lineageTag": "ccb21b0f-8617-46fb-a6ee-79dcf6635935"
          },
          {
            "name": "Inactive",
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "displayFolder": "Measures",
            "expression": [
              "[Total] - [Active]",
              ""
            ],
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "6d0573cc-dcf0-4cb5-86c9-1125b005bdf8"
          },
          {
            "name": "Total",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "displayFolder": "Measures",
            "expression": "COUNTROWS(TestList)",
            "isHidden": true,
            "lineageTag": "975edc41-f22f-4035-b7b0-81031c008051"
          },
          {
            "name": "Not Implemented",
            "displayFolder": "Measures",
            "expression": "[Total] - [Implemented]",
            "formatString": "0",
            "lineageTag": "9e3183f6-8b61-4d15-971f-353da4276974"
          },
          {
            "name": "Failed",
            "displayFolder": "Measures",
            "expression": "[Implemented] - [Passed]",
            "formatString": "0",
            "lineageTag": "d6db2d0e-6580-4050-9409-bb6d46354e32"
          },
          {
            "name": "Active not Implemented",
            "displayFolder": "Measures",
            "expression": "[Active] - [Implemented]",
            "formatString": "0",
            "lineageTag": "99051753-1a4b-4d04-a0d0-551841396603"
          },
          {
            "name": "Highlight Tests",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "displayFolder": "Measures",
            "expression": [
              "",
              "    SWITCH(",
              "        TRUE(),",
              "        [Inactive] = 1, 0, // Yellow",
              "        [Not Implemented] = 1, 2, //Orange",
              "                [Passed] = 1, 1, //Green",
              "        [Passed] = 0, -1 //Red",
              "    )"
            ],
            "lineageTag": "edbe3238-f991-483a-abf7-86dffbcc88ed"
          }
        ],
        "partitions": [
          {
            "name": "TestList",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = AzureStorage.DataLake(\"https://stgdatapbi.dfs.core.windows.net/data/dev/pos/tilby/test/\"),",
                "    #\"https://stgdatapbi dfs core windows net/data/dev/pos/tilby/test/_PowerBI_Test_Model_Tilby_V1 xlsx\" = Source{[#\"Folder Path\"=\"https://stgdatapbi.dfs.core.windows.net/data/dev/pos/tilby/test/\",Name=\"PowerBI_Test_Model_Tilby_V1.xlsx\"]}[Content],",
                "    #\"Imported Excel Workbook\" = Excel.Workbook(#\"https://stgdatapbi dfs core windows net/data/dev/pos/tilby/test/_PowerBI_Test_Model_Tilby_V1 xlsx\"),",
                "    #\"Select Sheet\" = #\"Imported Excel Workbook\"{[Item=\"TestList\",Kind=\"Sheet\"]}[Data],",
                "    #\"Promoted Headers\" = Table.PromoteHeaders(#\"Select Sheet\", [PromoteAllScalars=true]),",
                "    #\"Replace Underscore\" = Table.RenameColumns(",
                "        #\"Promoted Headers\",",
                "        List.Transform(",
                "            Table.ColumnNames(#\"Promoted Headers\"),",
                "            each {_, Text.Replace(_, \"_\", \" \")}",
                "        )",
                "    ),",
                "    #\"Removed Blank Rows\" = Table.SelectRows(#\"Replace Underscore\", each not List.IsEmpty(List.RemoveMatchingItems(Record.FieldValues(_), {\"\", null}))),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Blank Rows\",{{\"Test ID\", Int64.Type}, {\"Test Name\", type text}, {\"Is Active\", type text}, {\"Category\", type text}, {\"Subcategory\" , type text}, {\"Priority\", type text}, {\"Expected Value\", type number}, {\"Allowed Variance %\", type number}, {\"DAX Code\", type text}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Venta Pagos",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "changedProperties": [
          {
            "property": "IsHidden"
          }
        ],
        "columns": [
          {
            "name": "Precio",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "c44275ca-3781-4f69-82ea-dc6f970991ed",
            "sourceColumn": "Precio",
            "summarizeBy": "sum"
          },
          {
            "name": "payment id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "e620779e-6c67-42af-ba78-f4c76ff8ae42",
            "sourceColumn": "payment id",
            "summarizeBy": "sum"
          },
          {
            "name": "sale id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "f25e043e-c820-4215-a41f-2ba89c38cfa6",
            "sourceColumn": "sale id",
            "summarizeBy": "none"
          },
          {
            "name": "payment method id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "f2551a21-7db0-47a1-95a8-b2b0d82193f4",
            "sourceColumn": "payment method id",
            "summarizeBy": "none"
          },
          {
            "name": "Partition",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "58a34fd4-2c15-4da3-ac8f-dd29b01805e5",
            "sourceColumn": "Partition",
            "summarizeBy": "none"
          },
          {
            "name": "Source.Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "33e08127-c667-42e3-a47a-2ebe64a662a8",
            "sourceColumn": "Source.Name",
            "summarizeBy": "none"
          },
          {
            "name": "Estado recibo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "2dd5a3ee-5c16-49be-8a43-e1d783dfc7d7",
            "sourceColumn": "Estado recibo",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "71f59653-bc54-42a4-99e1-dd0ee1fdb9a6",
        "partitions": [
          {
            "name": "Venta Pagos",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "// Load data from Azure Data Lake",
                "   Source = AzureStorage.DataLake(\"https://stgdatapbi.dfs.core.windows.net/data/dev/pos/tilby/fact/sale_payment/\"),",
                "// Filter files that start with \"\"pos_sale_payment\"\"",
                "   #\"Filter Files\" = Table.SelectRows(#\"Source\", each Text.StartsWith([Name], \"pos_sale_payment\")),",
                "// Exclude hidden files",
                "   #\"Exclude Hidden Files\" = Table.SelectRows(#\"Filter Files\", each [Attributes]?[Hidden]? <> true),",
                "// Partition by Month",
                "   #\"Add Column Partition\" = Table.AddColumn(Source, \"Partition\", each ",
                "    let",
                "        FileName = [Name],",
                "        DateText = // Extracts the 'yyyymmdd' part",
                "        Text.Replace (",
                "                    Text.Replace ([Name], \"pos_sale_payment_\", \"\")",
                "                    ,\".parquet\"",
                "                    ,\"\"",
                "                ),",
                "        Year = Text.Middle(DateText, 0, 4),",
                "        Month = Text.Middle(DateText, 4, 2),",
                "        Day = \"01\",",
                "        DateValue = Date.FromText(Year & \"-\" & Month & \"-\" & Day)",
                "    in",
                "        DateValue),",
                "//Get Table from File Content",
                "    Transform = Table.AddColumn(#\"Add Column Partition\", \"Transformar archivo (12)\", each #\"Transformar archivo (12)\"([Content])),",
                "//Rename Source Column",
                "    #\"Rename Source\" = Table.RenameColumns(Transform, {\"Name\", \"Source.Name\"}),",
                "//Drop all columns except Partition and Table",
                "    #\"Keep Columns\" = Table.SelectColumns(#\"Rename Source\", {\"Source.Name\", \"Partition\", \"Transformar archivo (12)\"}),",
                "//Expand Table",
                "    #\"Expand Table\" = Table.ExpandTableColumn(#\"Keep Columns\", \"Transformar archivo (12)\", Table.ColumnNames(#\"Transformar archivo (12)\"(#\"Archivo de ejemplo (12)\"))),",
                "//Drop Columns",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Expand Table\",{\"sale_day\", \"sale_day_id\"}),",
                "//Replace underscores in Columns",
                "    #\"Replace Underscore\" = Table.RenameColumns(",
                "        #\"Removed Columns\",",
                "        List.Transform(",
                "            Table.ColumnNames(#\"Removed Columns\"),",
                "            each {_, Text.Replace(_, \"_\", \" \")}",
                "        )",
                "    ),",
                "//Change Data Types",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Replace Underscore\",{{\"payment id\", Int64.Type}, {\"sale id\", Int64.Type}, {\"payment method id\", Int64.Type}, {\"Estado recibo\", type text}, {\"Precio\", type number}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Impresora Cierres",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          },
          {
            "name": "PBI_NavigationStepName",
            "value": "Navegación"
          }
        ],
        "columns": [
          {
            "name": "Día de venta",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "displayFolder": "Columns",
            "formatString": "Short Date",
            "lineageTag": "348024d8-2da6-4340-acb3-53022e7a461f",
            "sourceColumn": "Día de venta",
            "summarizeBy": "none"
          },
          {
            "name": "printer closing id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "displayFolder": "Columns",
            "formatString": "0",
            "lineageTag": "ee8a09ac-a254-4a6d-ba27-dcb61c955167",
            "sourceColumn": "printer closing id",
            "summarizeBy": "none"
          },
          {
            "name": "printer id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "displayFolder": "Columns",
            "formatString": "0",
            "lineageTag": "5dc13901-f637-476c-bfa1-e13095ae1bf5",
            "sourceColumn": "printer id",
            "summarizeBy": "none"
          },
          {
            "name": "Source.Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "displayFolder": "Columns",
            "lineageTag": "5e989a07-3803-4406-baac-50a8dff88d21",
            "sourceColumn": "Source.Name",
            "summarizeBy": "none"
          },
          {
            "name": "sale day id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "displayFolder": "Columns",
            "formatString": "0",
            "lineageTag": "895fe977-e0f7-4d7c-bb99-5c73e309f4fc",
            "sourceColumn": "sale day id",
            "summarizeBy": "none"
          },
          {
            "name": "days",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "displayFolder": "Columns",
            "formatString": "0",
            "lineageTag": "6eb378eb-c681-47bd-8812-4009a046b8fb",
            "sourceColumn": "days",
            "summarizeBy": "sum"
          },
          {
            "name": "sales count",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "displayFolder": "Columns",
            "formatString": "0",
            "lineageTag": "700e6ad1-3153-41e1-b2a3-05f22b37b19e",
            "sourceColumn": "sales count",
            "summarizeBy": "sum"
          },
          {
            "name": "payments count",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "displayFolder": "Columns",
            "formatString": "0",
            "lineageTag": "70c909af-cc7b-482b-830f-8b3cc711e6d0",
            "sourceColumn": "payments count",
            "summarizeBy": "sum"
          },
          {
            "name": "items count",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "displayFolder": "Columns",
            "formatString": "0",
            "lineageTag": "7c1a52ae-1195-4210-8d12-330321b91014",
            "sourceColumn": "items count",
            "summarizeBy": "sum"
          },
          {
            "name": "Fecha y hora de apertura",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "displayFolder": "Columns",
            "formatString": "General Date",
            "lineageTag": "d128264a-ce3a-49f8-9858-e235feba8281",
            "sourceColumn": "Fecha y hora de apertura",
            "summarizeBy": "none"
          },
          {
            "name": "Fecha y hora de cierre",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "displayFolder": "Columns",
            "formatString": "General Date",
            "lineageTag": "69bc7bda-64b7-4de1-916e-d45019d19989",
            "sourceColumn": "Fecha y hora de cierre",
            "summarizeBy": "none"
          },
          {
            "name": "Cierre duration segundos",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "displayFolder": "Columns",
            "formatString": "0",
            "lineageTag": "7ebf2221-0597-4a83-af3b-5570f67285dd",
            "sourceColumn": "Cierre duration segundos",
            "summarizeBy": "sum"
          },
          {
            "name": "Cierre duration HH:MM:SS",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "displayFolder": "Columns",
            "lineageTag": "365c286c-03bc-4d89-9d00-3bbdb0b03dda",
            "sourceColumn": "Cierre duration HH:MM:SS",
            "summarizeBy": "none"
          },
          {
            "name": "dw status",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "displayFolder": "Columns",
            "formatString": "0",
            "lineageTag": "b00d3c15-5081-46c1-be6f-165202b3a584",
            "sourceColumn": "dw status",
            "summarizeBy": "sum"
          },
          {
            "name": "dm status",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "displayFolder": "Columns",
            "formatString": "0",
            "lineageTag": "d5e5cf1d-31f6-4490-8fb8-bbd5732a5cdf",
            "sourceColumn": "dm status",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "cff68fea-062f-4642-9579-4caa5d2fb9bf",
        "measures": [
          {
            "name": "Tilby Open Time",
            "displayFolder": "Measures",
            "expression": [
              "",
              "VAR min_cierre_datetime = MIN('Impresora Cierres'[Fecha y hora de apertura])",
              "//VAR min_cierre_datetime_plus_1_hour = min_cierre_datetime + TIME(1, 0, 0)",
              "RETURN min_cierre_datetime",
              ""
            ],
            "formatStringDefinition": {
              "expression": "\"\""
            },
            "lineageTag": "934480ab-a4bb-49e2-a4c4-7f381191820b"
          },
          {
            "name": "Tilby Close Time",
            "displayFolder": "Measures",
            "expression": [
              "",
              "VAR max_cierre_datetime = MAX('Impresora Cierres'[Fecha y hora de cierre])",
              "//VAR max_cierre_datetime_plus_1_hour = max_cierre_datetime + TIME(1, 0, 0)",
              "RETURN max_cierre_datetime",
              ""
            ],
            "formatStringDefinition": {
              "expression": "\"\""
            },
            "lineageTag": "a3e6b4b7-b3a8-4c78-b03a-a4895f9389b8"
          },
          {
            "name": "Closings",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "displayFolder": "Measures",
            "expression": "DISTINCTCOUNT('Impresora Cierres'[printer closing id])",
            "lineageTag": "74e2f65b-e411-415a-aeac-6828bd37ac73"
          },
          {
            "name": "Closings no transactions",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "displayFolder": "Measures",
            "expression": [
              "",
              "CALCULATE(",
              "    COUNTROWS('Impresora Cierres'),",
              "    FILTER(",
              "        'Impresora Cierres',",
              "        'Impresora Cierres'[sales count] + 'Impresora Cierres'[items count] + 'Impresora Cierres'[payments count] = 0",
              "    )",
              ")",
              ""
            ],
            "lineageTag": "63f0d889-7473-4223-869b-43a98c2a0bb0"
          },
          {
            "name": "Sales",
            "displayFolder": "Measures",
            "expression": "SUM('Impresora Cierres'[sales count])",
            "formatString": "0",
            "lineageTag": "b7b1cd63-aa4a-4e46-8d9b-4df9b603d095"
          },
          {
            "name": "Items",
            "displayFolder": "Measures",
            "expression": "SUM('Impresora Cierres'[items count])",
            "formatString": "0",
            "lineageTag": "b75dfc54-83f0-48ac-856e-90a9882f63ab"
          },
          {
            "name": "Payments",
            "displayFolder": "Measures",
            "expression": "SUM('Impresora Cierres'[payments count])",
            "formatString": "0",
            "lineageTag": "a677c304-264b-4b60-a1a1-9f22870a94c7"
          },
          {
            "name": "Sales Diff",
            "displayFolder": "Measures",
            "expression": "[Ventas (ctdad)]-[Sales]",
            "formatString": "0",
            "lineageTag": "22b4f981-ed42-4bc5-a143-f385f5d4e9af"
          },
          {
            "name": "Payments Diff",
            "displayFolder": "Measures",
            "expression": "[Pagos (ctdad)]-[Payments]",
            "formatString": "0",
            "lineageTag": "c625bf1a-db79-4667-be35-d9f656d16427"
          },
          {
            "name": "Items Diff",
            "displayFolder": "Measures",
            "expression": "[Productos (ctdad)] - [Items]",
            "formatString": "0",
            "lineageTag": "1aaf9732-5332-49c2-8edf-843f279714e4"
          }
        ],
        "partitions": [
          {
            "name": "Impresora Cierres",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "// Load data from Azure Data Lake",
                "    Source = AzureStorage.DataLake(\"https://stgdatapbi.dfs.core.windows.net/data/dev/pos/tilby/fact/printer_closing/\"),",
                "// Filter file \"pos_printer_closing.parquet\"",
                "    #\"Filter Files\" = Table.SelectRows(#\"Source\", each Text.Contains([Name], \"pos_printer_closing.parquet\")),",
                "// Exclude hidden files",
                "    #\"Exclude Hidden Files\" = Table.SelectRows(#\"Filter Files\", each [Attributes]?[Hidden]? <> true),",
                " //Get Table from File Content",
                "    Transform = Table.AddColumn(#\"Exclude Hidden Files\", \"Transformar archivo (10)\", each #\"Transformar archivo (9)\"([Content])),",
                "//Rename Source Column",
                "    #\"Rename Source\" = Table.RenameColumns(Transform, {\"Name\", \"Source.Name\"}),",
                "//Drop all columns except Partition and Table",
                "    #\"Keep Columns\" = Table.SelectColumns(#\"Rename Source\", {\"Source.Name\", \"Transformar archivo (10)\"}),",
                "//Expand Table to get files columns",
                "    #\"Expand Table\" = Table.ExpandTableColumn(#\"Keep Columns\", \"Transformar archivo (10)\", Table.ColumnNames(#\"Transformar archivo (10)\"(#\"Archivo de ejemplo (10)\"))),",
                "//Replace underscores in Columns",
                "    #\"Replace Underscore\" = Table.RenameColumns(",
                "        #\"Expand Table\",",
                "        List.Transform(",
                "            Table.ColumnNames(#\"Expand Table\"),",
                "            each {_, Text.Replace(_, \"_\", \" \")}",
                "        )",
                "    ),",
                "//Change Data Types",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Replace Underscore\",{{\"Source.Name\", type text}, {\"printer closing id\", Int64.Type}, {\"printer id\", Int16.Type}, {\"Día de venta\", type date}, {\"sale day id\", Int64.Type}, {\"Fecha y hora de apertura\", type datetime}, {\"Fecha y hora de cierre\", type datetime}, {\"Cierre duration segundos\", Int64.Type}, {\"days\", Int16.Type}, {\"dw status\", Int8.Type}, {\"dm status\", Int8.Type}, {\"sales count\", Int16.Type}, {\"payments count\", Int16.Type}, {\"items count\", Int16.Type}}),",
                "    #\"Filas ordenadas\" = Table.Sort(#\"Changed Type\",{{\"Cierre duration HH:MM:SS\", Order.Descending}})",
                "in",
                "    #\"Filas ordenadas\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Venta Productos",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Vendedor producto",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "69f49903-8da4-45bf-8203-b18849d3e17f",
            "sourceColumn": "Vendedor producto",
            "summarizeBy": "none"
          },
          {
            "name": "Precio producto",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "3b7f264d-e548-4469-be43-2a196308d15c",
            "sourceColumn": "Precio producto",
            "summarizeBy": "sum"
          },
          {
            "name": "Precio bruto",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "66962c64-f21d-41c9-8416-5797454eb721",
            "sourceColumn": "Precio bruto",
            "summarizeBy": "sum"
          },
          {
            "name": "Precio neto",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "6a3ac76b-4e57-4de3-b64d-591e9d4b818e",
            "sourceColumn": "Precio neto",
            "summarizeBy": "sum"
          },
          {
            "name": "Cantidad",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "75170e36-74a6-4508-85f7-b57feab91388",
            "sourceColumn": "Cantidad",
            "summarizeBy": "sum"
          },
          {
            "name": "sale item id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "ac738d13-b9ee-4b92-9409-5c6ef5cde477",
            "sourceColumn": "sale item id",
            "summarizeBy": "sum"
          },
          {
            "name": "sale id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "36bd96ac-9c09-4324-9dde-6383a9a7e325",
            "sourceColumn": "sale id",
            "summarizeBy": "none"
          },
          {
            "name": "Partition",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "685c8722-3f51-4bed-85d0-e537e2c67751",
            "sourceColumn": "Partition",
            "summarizeBy": "none"
          },
          {
            "name": "product category id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "3ef5866d-04f2-4093-881c-ccbfa3087bdd",
            "sourceColumn": "product category id",
            "summarizeBy": "none"
          },
          {
            "name": "Source.Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "ab9ba35d-c213-4eb7-8eb8-eec718adc4e7",
            "sourceColumn": "Source.Name",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "f644de80-f6ee-444f-ab7b-e15a90f57227",
        "partitions": [
          {
            "name": "Venta Productos",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "// Load data from Azure Data Lake",
                "   Source = AzureStorage.DataLake(\"https://stgdatapbi.dfs.core.windows.net/data/dev/pos/tilby/fact/sale_item/\"),",
                "// Filter files that start with \"\"pos_sale_item\"\"",
                "   #\"Filter Files\" = Table.SelectRows(#\"Source\", each Text.StartsWith([Name], \"pos_sale_item\")),",
                "// Exclude hidden files",
                "   #\"Exclude Hidden Files\" = Table.SelectRows(#\"Filter Files\", each [Attributes]?[Hidden]? <> true),",
                "// Partition by Month",
                "   #\"Add Column Partition\" = Table.AddColumn(Source, \"Partition\", each ",
                "    let",
                "        FileName = [Name],",
                "        DateText = // Extracts the 'yyyymmdd' part",
                "        Text.Replace (",
                "                    Text.Replace ([Name], \"pos_sale_item_\", \"\")",
                "                    ,\".parquet\"",
                "                    ,\"\"",
                "                ),",
                "        Year = Text.Middle(DateText, 0, 4),",
                "        Month = Text.Middle(DateText, 4, 2),",
                "        Day = \"01\",",
                "        DateValue = Date.FromText(Year & \"-\" & Month & \"-\" & Day)",
                "    in",
                "        DateValue),",
                "//Get Table from File Content",
                "    Transform = Table.AddColumn(#\"Add Column Partition\", \"Transformar archivo (11)\", each #\"Transformar archivo (11)\"([Content])),",
                "//Rename Source Column",
                "    #\"Rename Source\" = Table.RenameColumns(Transform, {\"Name\", \"Source.Name\"}),",
                "//Drop all columns except Partition and Table",
                "    #\"Keep Columns\" = Table.SelectColumns(#\"Rename Source\", {\"Source.Name\", \"Partition\", \"Transformar archivo (11)\"}),",
                "//Expand Table",
                "    #\"Expand Table\" = Table.ExpandTableColumn(#\"Keep Columns\", \"Transformar archivo (11)\", Table.ColumnNames(#\"Transformar archivo (11)\"(#\"Archivo de ejemplo (11)\"))),",
                "//Drop Columns",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Expand Table\",{\"sale_day\", \"sale_day_id\"}),",
                "//Replace underscores in Columns",
                "    #\"Replace Underscore\" = Table.RenameColumns(",
                "        #\"Removed Columns\",",
                "        List.Transform(",
                "            Table.ColumnNames(#\"Removed Columns\"),",
                "            each {_, Text.Replace(_, \"_\", \" \")}",
                "        )",
                "    ),",
                "//Change Data Types",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Replace Underscore\",{{\"sale item id\", Int64.Type}, {\"sale id\", Int64.Type}, {\"Vendedor producto\", type text}, {\"product category id\", Int64.Type}, {\"Precio producto\", type number}, {\"Precio bruto\", type number}, {\"Precio neto\", type number}, {\"Cantidad\", Int16.Type}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Venta",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "changedProperties": [
          {
            "property": "IsHidden"
          }
        ],
        "columns": [
          {
            "name": "Partition",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "888097a2-06f9-4a4d-872f-a6c83f1bfed0",
            "sourceColumn": "Partition",
            "summarizeBy": "none"
          },
          {
            "name": "sale id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "15f79035-cdce-4b55-b6e1-7b347ac1b649",
            "sourceColumn": "sale id",
            "summarizeBy": "none"
          },
          {
            "name": "fk printer closing id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "b80808a8-0a9e-4846-b3da-7743a1eff46a",
            "sourceColumn": "fk printer closing id",
            "summarizeBy": "none"
          },
          {
            "name": "sale day id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "3ce65992-bc16-4a44-85d7-3c790d84d6d8",
            "sourceColumn": "sale day id",
            "summarizeBy": "none"
          },
          {
            "name": "Vendedor",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "55e4f6ca-6b7b-42b7-a9da-5a20a0de3cac",
            "sourceColumn": "Vendedor",
            "summarizeBy": "none"
          },
          {
            "name": "Estado",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "b21795ca-b436-445b-8e56-3d2036b29a77",
            "sourceColumn": "Estado",
            "summarizeBy": "none"
          },
          {
            "name": "Bloqueo de pago",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "24559bb3-ea5a-4bed-bec9-ed173107e5b4",
            "sourceColumn": "Bloqueo de pago",
            "summarizeBy": "none"
          },
          {
            "name": "Importe bruto",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "45da42c6-06c7-4454-a483-25103704958d",
            "sourceColumn": "Importe bruto",
            "summarizeBy": "sum"
          },
          {
            "name": "Importe neto",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "9de59744-1239-4ad3-81f0-e0b91d9f7ed7",
            "sourceColumn": "Importe neto",
            "summarizeBy": "sum"
          },
          {
            "name": "Importe ticket",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "4f73faa1-5b77-4492-a8d7-8fe3b8a2f2a2",
            "sourceColumn": "Importe ticket",
            "summarizeBy": "sum"
          },
          {
            "name": "open at date id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "9df259c5-6ff4-47e2-841b-91f89a1d3687",
            "sourceColumn": "open at date id",
            "summarizeBy": "none"
          },
          {
            "name": "open at time id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "6db17603-f74e-4779-8e8f-e6dbb947d3e0",
            "sourceColumn": "open at time id",
            "summarizeBy": "none"
          },
          {
            "name": "closed at date id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "971740ad-b64a-4580-a5cc-11ab39e11e34",
            "sourceColumn": "closed at date id",
            "summarizeBy": "none"
          },
          {
            "name": "closed at time id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "f7684d74-3bd5-48a5-9b63-226493391c4a",
            "sourceColumn": "closed at time id",
            "summarizeBy": "none"
          },
          {
            "name": "Source.Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "3a291338-a4dd-4b41-825c-2cc381cdb06f",
            "sourceColumn": "Source.Name",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "2a64086e-ca80-45d2-9b72-0737d93a516f",
        "partitions": [
          {
            "name": "Venta",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "// Load data from Azure Data Lake",
                "   Source = AzureStorage.DataLake(\"https://stgdatapbi.dfs.core.windows.net/data/dev/pos/tilby/fact/sale/\"),",
                "// Filter files that start with \"\"pos_sale_\"\"",
                "   #\"Filter Files\" = Table.SelectRows(#\"Source\", each Text.StartsWith([Name], \"pos_sale_\")),",
                "// Exclude hidden files",
                "   #\"Exclude Hidden Files\" = Table.SelectRows(#\"Filter Files\", each [Attributes]?[Hidden]? <> true),",
                "// Partition by Month",
                "   #\"Add Column Partition\" = Table.AddColumn(Source, \"Partition\", each ",
                "    let",
                "        FileName = [Name],",
                "        DateText = // Extracts the 'yyyymmdd' part",
                "        Text.Replace (",
                "                    Text.Replace ([Name], \"pos_sale_\", \"\")",
                "                    ,\".parquet\"",
                "                    ,\"\"",
                "                ),",
                "        Year = Text.Middle(DateText, 0, 4),",
                "        Month = Text.Middle(DateText, 4, 2),",
                "        Day = \"01\",",
                "        DateValue = Date.FromText(Year & \"-\" & Month & \"-\" & Day)",
                "    in",
                "        DateValue),",
                "//Get Table from File Content",
                "    Transform = Table.AddColumn(#\"Add Column Partition\", \"Transformar archivo (2)\", each #\"Transformar archivo (2)\"([Content])),",
                "//Rename Source Column",
                "    #\"Rename Source\" = Table.RenameColumns(Transform, {\"Name\", \"Source.Name\"}),",
                "//Drop all columns except Partition and Table",
                "    #\"Keep Columns\" = Table.SelectColumns(#\"Rename Source\", {\"Source.Name\", \"Partition\", \"Transformar archivo (2)\"}),",
                "//Expand Table",
                "    #\"Expand Table\" = Table.ExpandTableColumn(#\"Keep Columns\", \"Transformar archivo (2)\", Table.ColumnNames(#\"Transformar archivo (2)\"(#\"Archivo de ejemplo (2)\"))),",
                "//Drop Columns",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Expand Table\",{\"sale_day\", \"days\", \"hours\", \"minutes\", \"segundos\"}),",
                "//Replace underscores in Columns",
                "    #\"Replace Underscore\" = Table.RenameColumns(",
                "        #\"Removed Columns\",",
                "        List.Transform(",
                "            Table.ColumnNames(#\"Removed Columns\"),",
                "            each {_, Text.Replace(_, \"_\", \" \")}",
                "        )",
                "    ),",
                "    //Change Data Types",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Replace Underscore\",{{\"sale id\", Int64.Type}, {\"fk printer closing id\", Int64.Type}, {\"Vendedor\", type text}, {\"Estado\", type text}, {\"Bloqueo de pago\", type logical}, {\"Importe bruto\", type number}, {\"Importe neto\", type number}, {\"Importe ticket\", type number}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "All Measures",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "lineageTag": "62d4ed9b-0baa-422b-8065-9417d2fcdfa4",
        "measures": [
          {
            "name": "Importe bruto (€)",
            "displayFolder": "Venta",
            "expression": [
              "",
              "    SUM ( Venta[Importe bruto] )"
            ],
            "formatString": "#,0.00\\ \"€\";-#,0.00\\ \"€\";#,0.00\\ \"€\"",
            "lineageTag": "561ddeb9-6fc8-4d75-b735-016c02c614cd"
          },
          {
            "name": "Importe ticket (€)",
            "displayFolder": "Venta",
            "expression": [
              "",
              "    SUM ( Venta[Importe ticket] )"
            ],
            "formatString": "#,0.00\\ \"€\";-#,0.00\\ \"€\";#,0.00\\ \"€\"",
            "lineageTag": "e45f79bc-5e09-4edd-ac67-821c3214fac7"
          },
          {
            "name": "Importe neto (€)",
            "displayFolder": "Venta",
            "expression": [
              "",
              "    SUM ( Venta[Importe neto] )"
            ],
            "formatString": "#,0.00\\ \"€\";-#,0.00\\ \"€\";#,0.00\\ \"€\"",
            "lineageTag": "4ec1b3d4-0285-4386-9823-cd05f097928c"
          },
          {
            "name": "Devoluciones (€)",
            "displayFolder": "Venta Producto",
            "expression": [
              "",
              "  SUMX(",
              "    'Venta Productos',",
              "    IF(",
              "      'Venta Productos'[Cantidad] < 0,  -- Condition for negative quantity",
              "      'Venta Productos'[Precio Bruto] * 'Venta Productos'[Cantidad],  -- Calculate product for negative quantities",
              "      0  -- Default to zero if quantity is not negative",
              "    )",
              "  )"
            ],
            "formatString": "#,0.00\\ \"€\";-#,0.00\\ \"€\";#,0.00\\ \"€\"",
            "lineageTag": "d858ecb0-3835-45ce-ba38-57fe6bcf6380"
          },
          {
            "name": "Artículos (ctdad)",
            "displayFolder": "Venta Producto",
            "expression": [
              "",
              "    SUM (",
              "        'Venta Productos'[Cantidad]",
              "    )"
            ],
            "formatString": "#,0",
            "lineageTag": "657081aa-6ba6-4198-ac2d-c00317f984b1"
          },
          {
            "name": "Venta (€)",
            "displayFolder": "Venta",
            "expression": [
              "",
              "    CALCULATE (",
              "        SUM ( Venta[Importe neto] ),",
              "        Venta[Estado] = \"Closed\"",
              "    )"
            ],
            "formatString": "#,0.00\\ \"€\";-#,0.00\\ \"€\";#,0.00\\ \"€\"",
            "lineageTag": "7fa8b513-97b4-4bf3-af78-3fb5eb11b3d7"
          },
          {
            "name": "Producción (€)",
            "displayFolder": "Venta",
            "expression": "[Venta (€)] + ABS([Devoluciones (€)])",
            "formatString": "#,0.00\\ \"€\";-#,0.00\\ \"€\";#,0.00\\ \"€\"",
            "lineageTag": "6f2bd752-ff40-40b1-bf63-4f9da203e9ec"
          },
          {
            "name": "Metodos de pago",
            "displayFolder": "Venta Pago",
            "expression": [
              "",
              "    DISTINCTCOUNT (",
              "        'Venta Pagos'[payment method id]",
              "    )"
            ],
            "formatString": "0",
            "lineageTag": "1d704f10-78b4-4f93-88ec-fac7681eeb55"
          },
          {
            "name": "Devoluciones (ctdad)",
            "displayFolder": "Venta Producto",
            "expression": [
              "",
              "    CALCULATE",
              "        (",
              "        SUM (",
              "            'Venta Productos'[Cantidad]",
              "        ),",
              "        'Venta Productos'[Cantidad] <0",
              "    )"
            ],
            "formatString": "#,0",
            "lineageTag": "d9ccdd14-3e6b-47a9-ab37-558639c6cddf"
          },
          {
            "name": "Tickets (ctdad)",
            "displayFolder": "Venta",
            "expression": [
              "",
              "    CALCULATE (",
              "        DISTINCTCOUNT( Venta[sale id] ),",
              "        Venta[Estado] = \"Closed\" && Venta[Importe bruto] >= 0",
              "    )"
            ],
            "formatString": "#,0",
            "lineageTag": "a6b5b187-fab8-4574-93fd-56e4e66ee6a1"
          },
          {
            "name": "Ticket medio (€)",
            "displayFolder": "Venta",
            "expression": [
              "",
              "    DIVIDE (",
              "        [Venta (€)],",
              "        [Tickets (ctdad)]",
              "    )"
            ],
            "formatString": "#,0.00\\ \"€\";-#,0.00\\ \"€\";#,0.00\\ \"€\"",
            "lineageTag": "4466d843-5bd4-4de5-8ea9-38f4e49a7689"
          },
          {
            "name": "Productos (ctdad)",
            "displayFolder": "Venta Producto",
            "expression": [
              "",
              "    DISTINCTCOUNT(",
              "        'Venta Productos'[sale item id]",
              "    )"
            ],
            "formatString": "#,0",
            "lineageTag": "3c33eeef-a35a-4a83-b5a7-6fafa70a7d63"
          },
          {
            "name": "Devolución/Producción (%)",
            "displayFolder": "Venta Producto",
            "expression": [
              "",
              "    ABS (",
              "        DIVIDE (",
              "            [Devoluciones (€)],",
              "            [Producción (€)]",
              "        )",
              "    )"
            ],
            "formatString": "0.00\\ %;-0.00\\ %;0.00\\ %",
            "lineageTag": "a02f25dd-ce0f-470c-b205-790aac2929a3"
          },
          {
            "name": "Venta con impuesto (€)",
            "displayFolder": "Venta",
            "expression": [
              "",
              "    CALCULATE (",
              "        SUM ( Venta[Importe bruto] ),",
              "        Venta[Estado] = \"Closed\"",
              "    )"
            ],
            "formatString": "#,0.00\\ \"€\";-#,0.00\\ \"€\";#,0.00\\ \"€\"",
            "lineageTag": "19de71dc-e8fd-4c93-ac3d-8633ed3bfca6"
          },
          {
            "name": "Pax",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "displayFolder": "PAX",
            "expression": [
              "SUM('Estadística'[Estancias])",
              "",
              "//Pax = CALCULATE(",
              "//    sum('Estadística'[Estancias]),",
              "//    KEEPFILTERS(",
              "//        'Calendario'[Fecha] <= TODAY() - 1",
              "//    ))"
            ],
            "lineageTag": "7106e23f-f0ee-4c3f-83cb-989c628f4a68"
          },
          {
            "name": "Venta/PAX (€)",
            "displayFolder": "PAX",
            "expression": [
              "",
              "    DIVIDE (",
              "        [Venta (€)],",
              "        [PAX]",
              "    )"
            ],
            "formatString": "#,0.00\\ \"€\";-#,0.00\\ \"€\";#,0.00\\ \"€\"",
            "lineageTag": "8c132db3-d866-4009-b3e2-e4291e1f8eb5"
          },
          {
            "name": "Ratio PAX POS Producción (€)",
            "displayFolder": "PAX",
            "expression": [
              "",
              "    DIVIDE (",
              "        [Producción (€)],",
              "        [PAX]",
              "    )"
            ],
            "formatString": "#,0.00\\ \"€\";-#,0.00\\ \"€\";#,0.00\\ \"€\"",
            "lineageTag": "fe5309a7-346a-4300-a60d-b8691dbbe4fc"
          },
          {
            "name": "Precio producto bruto (€)",
            "displayFolder": "Venta Producto",
            "expression": [
              "",
              "    SUM (",
              "        'Venta Productos'[Precio bruto]",
              "    )"
            ],
            "formatString": "#,0.00\\ \"€\";-#,0.00\\ \"€\";#,0.00\\ \"€\"",
            "lineageTag": "33b01677-ca47-486c-b152-da35db7b4010"
          },
          {
            "name": "Precio producto neto (€)",
            "displayFolder": "Venta Producto",
            "expression": [
              "",
              "    SUM (",
              "        'Venta Productos'[Precio neto]",
              "    )"
            ],
            "formatString": "#,0.00\\ \"€\";-#,0.00\\ \"€\";#,0.00\\ \"€\"",
            "lineageTag": "5c981b95-804f-43b9-ba71-d5550ac2a4e1"
          },
          {
            "name": "Precio producto (€)",
            "displayFolder": "Venta Producto",
            "expression": [
              "",
              "    SUM (",
              "        'Venta Productos'[Precio producto]",
              "    )"
            ],
            "formatString": "#,0.00\\ \"€\";-#,0.00\\ \"€\";#,0.00\\ \"€\"",
            "lineageTag": "405f52fe-6c3d-4479-bc38-9c1f60b14ccb"
          },
          {
            "name": "Ticket maximo (€)",
            "displayFolder": "Venta",
            "expression": [
              "",
              "    MAXX (",
              "        ALLSELECTED(Venta[sale id]),",
              "        [Venta (€)]",
              "    )"
            ],
            "formatString": "#,0.00\\ \"€\";-#,0.00\\ \"€\";#,0.00\\ \"€\"",
            "lineageTag": "418360b8-96ac-4ba7-a8e6-22295b7468c4"
          },
          {
            "name": "Precio pagado (€)",
            "displayFolder": "Venta Pago",
            "expression": [
              "",
              "    SUM (",
              "        'Venta Pagos'[Precio]",
              "    )"
            ],
            "formatString": "#,0.00\\ \"€\";-#,0.00\\ \"€\";#,0.00\\ \"€\"",
            "lineageTag": "f3e2c2d3-c49b-425b-83e8-2f67f63e11a8"
          },
          {
            "name": "Pagos (ctdad)",
            "displayFolder": "Venta Pago",
            "expression": [
              "",
              "    DISTINCTCOUNT(",
              "        'Venta Pagos'[payment id]",
              "    )"
            ],
            "formatString": "#,0",
            "lineageTag": "8a60651c-c277-4058-b7fc-2c1016152b45"
          },
          {
            "name": "Metodo de pago (%)",
            "displayFolder": "Venta Pago",
            "expression": [
              "",
              "    DIVIDE (",
              "        [Precio pagado (€)],",
              "        CALCULATE (",
              "            [Precio pagado (€)],",
              "            ALL ( 'Método de pago' )",
              "        )",
              "    )"
            ],
            "formatString": "0.00\\ %;-0.00\\ %;0.00\\ %",
            "lineageTag": "c86f63e2-a3b8-4ba9-9255-d5e2142d205e"
          },
          {
            "name": "Ticket minimo (€)",
            "displayFolder": "Venta",
            "expression": [
              "",
              "    MINX (",
              "        ALLSELECTED(Venta[sale id]),",
              "        [Venta (€)]",
              "    )"
            ],
            "formatString": "\\$#,0.###############;(\\$#,0.###############);\\$#,0.###############",
            "lineageTag": "218daff7-d0e8-42ab-8c8f-23f8528103a1"
          },
          {
            "name": "Producción con impuesto (€)",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "displayFolder": "Venta",
            "expression": "[Venta con impuesto (€)] + ABS([Devoluciones (€)])",
            "lineageTag": "493b5981-711b-443e-bc25-679c7ff1d829"
          },
          {
            "name": "Día nombre",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "IF(ISFILTERED(Calendario[Día semana]),VALUES(Calendario[Día semana]))",
            "lineageTag": "9898a6c9-5142-4908-87b2-b75aee481b2d"
          },
          {
            "name": "Ingresos (€)",
            "displayFolder": "Venta Producto",
            "expression": [
              "",
              "CALCULATE(",
              "    SUMX(",
              "        'Venta Productos',",
              "        'Venta Productos'[Precio bruto] * 'Venta Productos'[Cantidad]",
              "    ),",
              "    'Venta Productos'[Cantidad] > 0",
              ")"
            ],
            "formatString": "#,0.00\\ \"€\";-#,0.00\\ \"€\";#,0.00\\ \"€\"",
            "lineageTag": "5f5f62b2-002e-4fec-a17e-3805280daf80"
          },
          {
            "name": "Unidades (ctdad)",
            "displayFolder": "Venta Producto",
            "expression": "[Artículos (ctdad)] + ABS([Devoluciones (ctdad)])",
            "formatString": "#,0",
            "lineageTag": "6cc71c71-4c04-44a0-b316-f9d0594664eb"
          },
          {
            "name": "Ventas (ctdad)",
            "displayFolder": "Venta",
            "expression": [
              "",
              "    DISTINCTCOUNT(",
              "        'Venta'[sale id]",
              "        )"
            ],
            "formatString": "#,0",
            "lineageTag": "1cd5c55f-ef72-43c7-b6e9-da3527c50a75"
          }
        ],
        "partitions": [
          {
            "name": "All Measures",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i44FAA==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Column1\", type text}}),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type\",{\"Column1\"})",
                "in",
                "    #\"Removed Columns\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "cg_TimeIntelligence",
        "calculationGroup": {
          "calculationItems": [
            {
              "name": "YTD",
              "expression": [
                "",
                "    CALCULATE (",
                "        SELECTEDMEASURE(),",
                "        DATESYTD( Calendario[Fecha] )",
                "    )"
              ],
              "ordinal": 24
            },
            {
              "name": "Actual",
              "expression": "SELECTEDMEASURE()     "
            },
            {
              "name": "PD",
              "expression": [
                "",
                "    CALCULATE (",
                "        SELECTEDMEASURE(),",
                "        DATEADD(Calendario[Fecha], -1, DAY)",
                "    )",
                "",
                "//PD = ",
                "//IF (",
                "//    HASONEVALUE ( Calendario[Fecha] ),  // Check if the context is at the day level",
                "//    CALCULATE ( SELECTEDMEASURE(), DATEADD ( Calendario[Fecha], -1, DAY ) ),  // Calculate the value",
                "//    BLANK()  // Return blank if the context is not at the day level",
                "//)"
              ],
              "ordinal": 0
            },
            {
              "name": "QTD",
              "expression": [
                "",
                "    CALCULATE (",
                "        SELECTEDMEASURE(),",
                "        DATESQTD ( Calendario[Fecha] )",
                "    )"
              ],
              "ordinal": 17
            },
            {
              "name": "PYTD Diff",
              "expression": [
                "",
                "VAR __Actual = CALCULATE (SELECTEDMEASURE(), 'cg_TimeIntelligence'[Period] = \"YTD\")",
                "VAR __Previous = CALCULATE (SELECTEDMEASURE(), 'cg_TimeIntelligence'[Period] = \"PYTD\")",
                "VAR __Result = __Actual - __Previous ",
                "RETURN",
                "    IF ( ISBLANK ( __Previous ), \"--\", __Result )"
              ],
              "ordinal": 27
            },
            {
              "name": "PYTD",
              "expression": [
                "",
                "    CALCULATE (",
                "        SELECTEDMEASURE(),",
                "        'cg_TimeIntelligence'[Period] = \"YTD\",",
                "        DATEADD ( Calendario[Fecha], -1, YEAR )",
                "    )",
                "",
                "//PY = ",
                "//    CALCULATE (",
                "//        SELECTEDMEASURE(),",
                "//        SAMEPERIODLASTYEAR ( Calendario[Fecha] )",
                "//    )"
              ],
              "ordinal": 25
            },
            {
              "name": "PYTD Diff %",
              "expression": [
                "",
                "VAR __Diff = CALCULATE(SELECTEDMEASURE(),cg_TimeIntelligence[Period]=\"PYTD Diff\")",
                "VAR __Actual = CALCULATE ( SELECTEDMEASURE(), cg_TimeIntelligence[Period]=\"Actual\" )",
                "VAR __Previous = CALCULATE ( SELECTEDMEASURE(), cg_TimeIntelligence[Period]=\"PYTD\" )",
                "VAR __Result = ",
                "    IF ( __Diff = \"--\" || __Actual <= 0 || __Previous <= 0, \"--\",",
                "    SWITCH (",
                "        TRUE(),",
                "        __Actual >= __Previous , ( __Diff / __Previous ),",
                "        __Actual <= __Previous , ( __Diff / __Actual ),",
                "        \"--\"",
                "    )",
                ")",
                "RETURN",
                "    __Result"
              ],
              "formatStringDefinition": {
                "expression": "\"0.00%\""
              },
              "ordinal": 28
            },
            {
              "name": "PMT",
              "expression": [
                "",
                "    CALCULATE (",
                "        SELECTEDMEASURE(),",
                "        PREVIOUSMONTH ( Calendario[Fecha] )",
                "    )",
                ""
              ],
              "ordinal": 13
            },
            {
              "name": "PQ",
              "expression": [
                "",
                "    CALCULATE (",
                "        SELECTEDMEASURE(),",
                "        PREVIOUSQUARTER( Calendario[Fecha] )",
                "    )"
              ],
              "ordinal": 18
            },
            {
              "name": "PM Diff",
              "expression": [
                "",
                "VAR __Actual = CALCULATE (SELECTEDMEASURE(), 'cg_TimeIntelligence'[Period] = \"MTD\")",
                "VAR __Previous = CALCULATE (SELECTEDMEASURE(), 'cg_TimeIntelligence'[Period] = \"PMTD\")",
                "VAR __Result = __Actual - __Previous ",
                "RETURN",
                "    IF ( ISBLANK ( __Previous ), \"--\", __Result )"
              ],
              "ordinal": 11
            },
            {
              "name": "PMTD",
              "expression": [
                "",
                "    CALCULATE (",
                "        SELECTEDMEASURE(),",
                "        'cg_TimeIntelligence'[Period] = \"MTD\",",
                "        DATEADD ( Calendario[Fecha], -1, MONTH )",
                "    ) "
              ],
              "ordinal": 10
            },
            {
              "name": "PMSD",
              "expression": [
                "",
                "    CALCULATE(",
                "        SELECTEDMEASURE(),",
                "        DATEADD ( Calendario[Fecha], -1, MONTH )",
                "    )"
              ],
              "ordinal": 3
            },
            {
              "name": "MTD",
              "expression": [
                "",
                "    CALCULATE (",
                "        SELECTEDMEASURE(),",
                "        DATESMTD ( Calendario[Fecha] )",
                "    )"
              ],
              "ordinal": 9
            },
            {
              "name": "PYSD",
              "expression": [
                "",
                "    CALCULATE(",
                "        SELECTEDMEASURE(),",
                "        DATEADD ( Calendario[Fecha], -1, YEAR )",
                "    )  "
              ],
              "ordinal": 6
            },
            {
              "name": "PD Diff",
              "expression": [
                "",
                "VAR __Actual = CALCULATE (SELECTEDMEASURE(), 'cg_TimeIntelligence'[Period] = \"Actual\")",
                "VAR __Previous = CALCULATE (SELECTEDMEASURE(), 'cg_TimeIntelligence'[Period] = \"PD\")",
                "VAR __Result = __Actual - __Previous",
                "RETURN",
                "    IF ( ISBLANK ( __Previous ), \"--\", __Result )"
              ],
              "ordinal": 1
            },
            {
              "name": "PMSD Diff",
              "expression": [
                "",
                "VAR __Actual = CALCULATE (SELECTEDMEASURE(), 'cg_TimeIntelligence'[Period] = \"Actual\")",
                "VAR __Previous = CALCULATE (SELECTEDMEASURE(), 'cg_TimeIntelligence'[Period] = \"PMSD\")",
                "VAR __Result = __Actual - __Previous ",
                "RETURN",
                "    IF ( ISBLANK ( __Previous ), \"--\", __Result )"
              ],
              "ordinal": 4
            },
            {
              "name": "PYSD Diff",
              "expression": [
                "",
                "VAR __Actual = CALCULATE (SELECTEDMEASURE(), 'cg_TimeIntelligence'[Period] = \"Actual\")",
                "VAR __Previous = CALCULATE (SELECTEDMEASURE(), 'cg_TimeIntelligence'[Period] = \"PYSD\")",
                "VAR __Result = __Actual - __Previous ",
                "RETURN",
                "    IF ( ISBLANK ( __Previous ), \"--\", __Result )"
              ],
              "ordinal": 7
            },
            {
              "name": "PD Diff %",
              "expression": [
                "",
                "VAR __Diff = CALCULATE(SELECTEDMEASURE(),cg_TimeIntelligence[Period]=\"PD Diff\")",
                "VAR __Actual = CALCULATE ( SELECTEDMEASURE(), cg_TimeIntelligence[Period]=\"Actual\" )",
                "VAR __Previous = CALCULATE ( SELECTEDMEASURE(), cg_TimeIntelligence[Period]=\"PD\" )",
                "VAR __Result = ",
                "    IF ( __Diff = \"--\" || __Actual <= 0 || __Previous <= 0, \"--\",",
                "    SWITCH (",
                "        TRUE(),",
                "        __Actual >= __Previous , ( __Diff / __Previous ),",
                "        __Actual <= __Previous , ( __Diff / __Actual ),",
                "        \"--\"",
                "    )",
                ")",
                "RETURN",
                "    __Result"
              ],
              "formatStringDefinition": {
                "expression": "\"0.00%\""
              },
              "ordinal": 2
            },
            {
              "name": "PMSD Diff %",
              "expression": [
                "",
                "VAR __Diff = CALCULATE(SELECTEDMEASURE(),cg_TimeIntelligence[Period]=\"PMSD Diff\")",
                "VAR __Actual = CALCULATE ( SELECTEDMEASURE(), cg_TimeIntelligence[Period]=\"Actual\" )",
                "VAR __Previous = CALCULATE ( SELECTEDMEASURE(), cg_TimeIntelligence[Period]=\"PMSD\" )",
                "VAR __Result = ",
                "    IF ( __Diff = \"--\" || __Actual <= 0 || __Previous <= 0, \"--\",",
                "    SWITCH (",
                "        TRUE(),",
                "        __Actual >= __Previous , ( __Diff / __Previous ),",
                "        __Actual <= __Previous , ( __Diff / __Actual ),",
                "        \"--\"",
                "    )",
                ")",
                "RETURN",
                "    __Result"
              ],
              "formatStringDefinition": {
                "expression": "\"0.00%\""
              },
              "ordinal": 5
            },
            {
              "name": "PYSD Diff %",
              "expression": [
                "",
                "VAR __Diff = CALCULATE(SELECTEDMEASURE(),cg_TimeIntelligence[Period]=\"PYSD Diff\")",
                "VAR __Actual = CALCULATE ( SELECTEDMEASURE(), cg_TimeIntelligence[Period]=\"Actual\" )",
                "VAR __Previous = CALCULATE ( SELECTEDMEASURE(), cg_TimeIntelligence[Period]=\"PYSD\" )",
                "VAR __Result = ",
                "    IF ( __Diff = \"--\" || __Actual <= 0 || __Previous <= 0, \"--\",",
                "    SWITCH (",
                "        TRUE(),",
                "        __Actual >= __Previous , ( __Diff / __Previous ),",
                "        __Actual <= __Previous , ( __Diff / __Actual ),",
                "        \"--\"",
                "    )",
                ")",
                "RETURN",
                "    __Result"
              ],
              "formatStringDefinition": {
                "expression": "\"0.00%\""
              },
              "ordinal": 8
            },
            {
              "name": "PYMTD",
              "expression": [
                "",
                "    CALCULATE (",
                "        SELECTEDMEASURE(),",
                "        'cg_TimeIntelligence'[Period] = \"MTD\",",
                "        DATEADD ( Calendario[Fecha], -1, YEAR )",
                "    )"
              ],
              "ordinal": 14
            },
            {
              "name": "PM Diff %",
              "expression": [
                "",
                "VAR __Diff = CALCULATE(SELECTEDMEASURE(),cg_TimeIntelligence[Period]=\"PM Diff\")",
                "VAR __Actual = CALCULATE ( SELECTEDMEASURE(), cg_TimeIntelligence[Period]=\"Actual\" )",
                "VAR __Previous = CALCULATE ( SELECTEDMEASURE(), cg_TimeIntelligence[Period]=\"MTD\" )",
                "VAR __Result = ",
                "    IF ( __Diff = \"--\" || __Actual <= 0 || __Previous <= 0, \"--\",",
                "    SWITCH (",
                "        TRUE(),",
                "        __Actual >= __Previous , ( __Diff / __Previous ),",
                "        __Actual <= __Previous , ( __Diff / __Actual ),",
                "        \"--\"",
                "    )",
                ")",
                "RETURN",
                "    __Result"
              ],
              "formatStringDefinition": {
                "expression": "\"0.00%\""
              },
              "ordinal": 12
            },
            {
              "name": "PYMTD Diff",
              "expression": [
                "",
                "VAR __Actual = CALCULATE (SELECTEDMEASURE(), 'cg_TimeIntelligence'[Period] = \"MTD\")",
                "VAR __Previous = CALCULATE (SELECTEDMEASURE(), 'cg_TimeIntelligence'[Period] = \"PYMTD\")",
                "VAR __Result = __Actual - __Previous ",
                "RETURN",
                "    IF ( ISBLANK ( __Previous ), \"--\", __Result )"
              ],
              "ordinal": 15
            },
            {
              "name": "PYT",
              "expression": [
                "",
                "    CALCULATE (",
                "        SELECTEDMEASURE(),",
                "        PREVIOUSYEAR ( Calendario[Fecha] )",
                "    )"
              ],
              "ordinal": 26
            },
            {
              "name": "PQTD Diff",
              "expression": [
                "",
                "VAR __Actual = CALCULATE (SELECTEDMEASURE(), 'cg_TimeIntelligence'[Period] = \"QTD\")",
                "VAR __Previous = CALCULATE (SELECTEDMEASURE(), 'cg_TimeIntelligence'[Period] = \"PQ\")",
                "VAR __Result = __Actual - __Previous ",
                "RETURN",
                "    IF ( ISBLANK ( __Previous ), \"--\", __Result )"
              ],
              "ordinal": 19
            },
            {
              "name": "PQTD Diff %",
              "expression": [
                "",
                "VAR __Diff = CALCULATE(SELECTEDMEASURE(),cg_TimeIntelligence[Period]=\"PQTD Diff\")",
                "VAR __Actual = CALCULATE ( SELECTEDMEASURE(), cg_TimeIntelligence[Period]=\"Actual\" )",
                "VAR __Previous = CALCULATE ( SELECTEDMEASURE(), cg_TimeIntelligence[Period]=\"PQTD\" )",
                "VAR __Result = ",
                "    IF ( __Diff = \"--\" || __Actual <= 0 || __Previous <= 0, \"--\",",
                "    SWITCH (",
                "        TRUE(),",
                "        __Actual >= __Previous , ( __Diff / __Previous ),",
                "        __Actual <= __Previous , ( __Diff / __Actual ),",
                "        \"--\"",
                "    )",
                ")",
                "RETURN",
                "    __Result"
              ],
              "formatStringDefinition": {
                "expression": "\"0.00%\""
              },
              "ordinal": 20
            },
            {
              "name": "PYMTD Diff %",
              "expression": [
                "",
                "VAR __Diff = CALCULATE(SELECTEDMEASURE(),cg_TimeIntelligence[Period]=\"PYMTD Diff\")",
                "VAR __Actual = CALCULATE ( SELECTEDMEASURE(), cg_TimeIntelligence[Period]=\"Actual\" )",
                "VAR __Previous = CALCULATE ( SELECTEDMEASURE(), cg_TimeIntelligence[Period]=\"PYMTD\" )",
                "VAR __Result = ",
                "    IF ( __Diff = \"--\" || __Actual <= 0 || __Previous <= 0, \"--\",",
                "    SWITCH (",
                "        TRUE(),",
                "        __Actual >= __Previous , ( __Diff / __Previous ),",
                "        __Actual <= __Previous , ( __Diff / __Actual ),",
                "        \"--\"",
                "    )",
                ")",
                "RETURN",
                "    __Result"
              ],
              "formatStringDefinition": {
                "expression": "\"0.00%\""
              },
              "ordinal": 16
            },
            {
              "name": "PYQTD",
              "expression": [
                "",
                "    CALCULATE (",
                "        SELECTEDMEASURE(),",
                "        'cg_TimeIntelligence'[Period] = \"QTD\",",
                "        DATEADD ( Calendario[Fecha], -1, YEAR )",
                "    )"
              ],
              "ordinal": 21
            },
            {
              "name": "PYQTD Diff",
              "expression": [
                "",
                "VAR __Actual = CALCULATE (SELECTEDMEASURE(), 'cg_TimeIntelligence'[Period] = \"QTD\")",
                "VAR __Previous = CALCULATE (SELECTEDMEASURE(), 'cg_TimeIntelligence'[Period] = \"PYQTD\")",
                "VAR __Result = __Actual - __Previous ",
                "RETURN",
                "    IF ( ISBLANK ( __Previous ), \"--\", __Result )"
              ],
              "ordinal": 22
            },
            {
              "name": "PYQTD Diff %",
              "expression": [
                "",
                "VAR __Diff = CALCULATE(SELECTEDMEASURE(),cg_TimeIntelligence[Period]=\"PYQTD Diff\")",
                "VAR __Actual = CALCULATE ( SELECTEDMEASURE(), cg_TimeIntelligence[Period]=\"Actual\" )",
                "VAR __Previous = CALCULATE ( SELECTEDMEASURE(), cg_TimeIntelligence[Period]=\"PYQTD\" )",
                "VAR __Result = ",
                "    IF ( __Diff = \"--\" || __Actual <= 0 || __Previous <= 0, \"--\",",
                "    SWITCH (",
                "        TRUE(),",
                "        __Actual >= __Previous , ( __Diff / __Previous ),",
                "        __Actual <= __Previous , ( __Diff / __Actual ),",
                "        \"--\"",
                "    )",
                ")",
                "RETURN",
                "    __Result"
              ],
              "formatStringDefinition": {
                "expression": "\"0.00%\""
              },
              "ordinal": 23
            }
          ],
          "precedence": 8
        },
        "columns": [
          {
            "name": "Period",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "__PBI_SemanticLinks",
                "value": "[{\"LinkTarget\":{\"TableName\":\"cg_TimeIntelligence\",\"TableItemName\":\"Period Analysis\",\"ObjectType\":4},\"LinkType\":\"UsedInGroup\"}]"
              }
            ],
            "dataType": "string",
            "lineageTag": "b3ee6b8d-5d95-4068-bc52-3e4b53862309",
            "sortByColumn": "Ordinal",
            "sourceColumn": "Name",
            "summarizeBy": "none"
          },
          {
            "name": "Ordinal",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "dc384322-2905-40dd-992e-fa7b46f8f8a8",
            "sourceColumn": "Ordinal",
            "summarizeBy": "sum"
          },
          {
            "name": "Period Analysis",
            "annotations": [
              {
                "name": "GroupingDesignState",
                "value": "{\"Version\":0,\"Sources\":[{\"Name\":\"c\",\"Entity\":\"cg_TimeIntelligence\"}],\"GroupedColumns\":[{\"Column\":{\"Expression\":{\"SourceRef\":{\"Source\":\"c\"}},\"Property\":\"Period\"}}],\"GroupItems\":[{\"DisplayName\":\"(En blanco)\",\"BlankDefaultPlaceholder\":true},{\"DisplayName\":\"Comparison of Periods\",\"Expression\":{\"In\":{\"Expressions\":[{\"Column\":{\"Expression\":{\"SourceRef\":{\"Source\":\"c\"}},\"Property\":\"Period\"}}],\"Values\":[[{\"Literal\":{\"Value\":\"'PD Diff'\"}}],[{\"Literal\":{\"Value\":\"'PD Diff %'\"}}],[{\"Literal\":{\"Value\":\"'PMSD Diff'\"}}],[{\"Literal\":{\"Value\":\"'PMSD Diff %'\"}}],[{\"Literal\":{\"Value\":\"'PYSD Diff'\"}}],[{\"Literal\":{\"Value\":\"'PYSD Diff %'\"}}],[{\"Literal\":{\"Value\":\"'PM Diff'\"}}],[{\"Literal\":{\"Value\":\"'PM Diff %'\"}}],[{\"Literal\":{\"Value\":\"'PYMTD Diff'\"}}],[{\"Literal\":{\"Value\":\"'PYMTD Diff %'\"}}],[{\"Literal\":{\"Value\":\"'PQTD Diff'\"}}],[{\"Literal\":{\"Value\":\"'PQTD Diff %'\"}}],[{\"Literal\":{\"Value\":\"'PYQTD Diff'\"}}],[{\"Literal\":{\"Value\":\"'PYQTD Diff %'\"}}],[{\"Literal\":{\"Value\":\"'PYTD Diff'\"}}],[{\"Literal\":{\"Value\":\"'PYTD Diff %'\"}}]]}}},{\"DisplayName\":\"Day Analysis\",\"Expression\":{\"In\":{\"Expressions\":[{\"Column\":{\"Expression\":{\"SourceRef\":{\"Source\":\"c\"}},\"Property\":\"Period\"}}],\"Values\":[[{\"Literal\":{\"Value\":\"'Actual'\"}}],[{\"Literal\":{\"Value\":\"'PD'\"}}],[{\"Literal\":{\"Value\":\"'PMSD'\"}}],[{\"Literal\":{\"Value\":\"'PYSD'\"}}]]}}},{\"DisplayName\":\"Month Analysis\",\"Expression\":{\"In\":{\"Expressions\":[{\"Column\":{\"Expression\":{\"SourceRef\":{\"Source\":\"c\"}},\"Property\":\"Period\"}}],\"Values\":[[{\"Literal\":{\"Value\":\"'MTD'\"}}],[{\"Literal\":{\"Value\":\"'PMTD'\"}}],[{\"Literal\":{\"Value\":\"'PMT'\"}}],[{\"Literal\":{\"Value\":\"'PYMTD'\"}}]]}}},{\"DisplayName\":\"Quarter Analysis\",\"Expression\":{\"In\":{\"Expressions\":[{\"Column\":{\"Expression\":{\"SourceRef\":{\"Source\":\"c\"}},\"Property\":\"Period\"}}],\"Values\":[[{\"Literal\":{\"Value\":\"'QTD'\"}}],[{\"Literal\":{\"Value\":\"'PQ'\"}}],[{\"Literal\":{\"Value\":\"'PYQTD'\"}}]]}}},{\"DisplayName\":\"Year Analysis\",\"Expression\":{\"In\":{\"Expressions\":[{\"Column\":{\"Expression\":{\"SourceRef\":{\"Source\":\"c\"}},\"Property\":\"Period\"}}],\"Values\":[[{\"Literal\":{\"Value\":\"'YTD'\"}}],[{\"Literal\":{\"Value\":\"'PYTD'\"}}],[{\"Literal\":{\"Value\":\"'PYT'\"}}]]}}}]}"
              },
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "SWITCH(",
              "\tTRUE,",
              "\tISBLANK('cg_TimeIntelligence'[Period]),",
              "\t\"(En blanco)\",",
              "\t'cg_TimeIntelligence'[Period] IN {\"PD Diff\",",
              "\t\t\"PD Diff %\",",
              "\t\t\"PMSD Diff\",",
              "\t\t\"PMSD Diff %\",",
              "\t\t\"PYSD Diff\",",
              "\t\t\"PYSD Diff %\",",
              "\t\t\"PM Diff\",",
              "\t\t\"PM Diff %\",",
              "\t\t\"PYMTD Diff\",",
              "\t\t\"PYMTD Diff %\",",
              "\t\t\"PQTD Diff\",",
              "\t\t\"PQTD Diff %\",",
              "\t\t\"PYQTD Diff\",",
              "\t\t\"PYQTD Diff %\",",
              "\t\t\"PYTD Diff\",",
              "\t\t\"PYTD Diff %\"},",
              "\t\"Comparison of Periods\",",
              "\t'cg_TimeIntelligence'[Period] IN {\"Actual\",",
              "\t\t\"PD\",",
              "\t\t\"PMSD\",",
              "\t\t\"PYSD\"},",
              "\t\"Day Analysis\",",
              "\t'cg_TimeIntelligence'[Period] IN {\"MTD\",",
              "\t\t\"PMTD\",",
              "\t\t\"PMT\",",
              "\t\t\"PYMTD\"},",
              "\t\"Month Analysis\",",
              "\t'cg_TimeIntelligence'[Period] IN {\"QTD\",",
              "\t\t\"PQ\",",
              "\t\t\"PYQTD\"},",
              "\t\"Quarter Analysis\",",
              "\t'cg_TimeIntelligence'[Period] IN {\"YTD\",",
              "\t\t\"PYTD\",",
              "\t\t\"PYT\"},",
              "\t\"Year Analysis\",",
              "\t'cg_TimeIntelligence'[Period]",
              ")"
            ],
            "extendedProperties": [
              {
                "name": "GroupingMetadata",
                "type": "json",
                "value": {
                  "groupedColumns": [
                    {
                      "Column": {
                        "Expression": {
                          "SourceRef": {
                            "Entity": "cg_TimeIntelligence"
                          }
                        },
                        "Property": "Period"
                      }
                    }
                  ],
                  "version": 0
                }
              }
            ],
            "isDataTypeInferred": true,
            "lineageTag": "0088235e-e46f-446d-b3ed-7d5dbe004e44",
            "summarizeBy": "none",
            "type": "calculated"
          }
        ],
        "lineageTag": "47fc8426-ea94-438d-8766-8c1cd32f5576",
        "partitions": [
          {
            "name": "cg_TimeIntelligence",
            "mode": "import",
            "source": {
              "type": "calculationGroup"
            }
          }
        ]
      },
      {
        "name": "Hotel",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Hotel",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "string",
            "isHidden": true,
            "lineageTag": "8ea7a353-7971-4e21-b25a-48f86b249fbc",
            "sourceColumn": "Hotel",
            "summarizeBy": "none"
          },
          {
            "name": "Nombre hotel",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "9b0051bd-1305-42fb-a349-33fe242625bc",
            "sourceColumn": "Nombre hotel",
            "summarizeBy": "none"
          },
          {
            "name": "hotel id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "fab0a3c4-bfe9-48ef-b1ba-cb3fa4e19106",
            "sourceColumn": "hotel id",
            "summarizeBy": "none"
          },
          {
            "name": "Código hotel",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "9164f654-dea1-457b-8ee7-063ff40e6261",
            "sourceColumn": "Código hotel",
            "summarizeBy": "none"
          },
          {
            "name": "Código postal hotel",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "e70ee4f3-c499-495b-98cc-ce1cf710bb71",
            "sourceColumn": "Código postal hotel",
            "summarizeBy": "none"
          },
          {
            "name": "Source.Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "7fb029c4-fe12-45d5-a78c-2299953a12ba",
            "sourceColumn": "Source.Name",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "dab7ef4d-0b92-4459-9c78-374f39c9838a",
        "partitions": [
          {
            "name": "Hotel",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "// Load data from Azure Data Lake",
                "    Source = AzureStorage.DataLake(\"https://stgdatapbi.dfs.core.windows.net/data/dev/common/dim/hotel/\"),",
                "// Filter files that start with \"\"pos_sale_\"\"",
                "    #\"Filter Files\" = Table.SelectRows(#\"Source\", each Text.Contains([Name], \"common_hotel.parquet\")),",
                "// Exclude hidden files",
                "   #\"Exclude Hidden Files\" = Table.SelectRows(#\"Filter Files\", each [Attributes]?[Hidden]? <> true),",
                "//Get Table from File Content",
                "    Transform = Table.AddColumn(#\"Exclude Hidden Files\", \"Transformar archivo (3)\", each #\"Transformar archivo (3)\"([Content])),",
                "//Rename Source Column",
                "    #\"Rename Source\" = Table.RenameColumns(Transform, {\"Name\", \"Source.Name\"}),",
                "//Drop all columns except Partition and Table",
                "    #\"Keep Columns\" = Table.SelectColumns(#\"Rename Source\", {\"Source.Name\", \"Transformar archivo (3)\"}),",
                "//Expand Table to get files columns",
                "    #\"Expand Table\" = Table.ExpandTableColumn(#\"Keep Columns\", \"Transformar archivo (3)\", Table.ColumnNames(#\"Transformar archivo (3)\"(#\"Archivo de ejemplo (3)\"))),",
                "//Replace underscores in Columns",
                "    #\"Replace Underscore\" = Table.RenameColumns(",
                "        #\"Expand Table\",",
                "        List.Transform(",
                "            Table.ColumnNames(#\"Expand Table\"),",
                "            each {_, Text.Replace(_, \"_\", \" \")}",
                "        )",
                "    ),",
                "//Change Data Types",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Replace Underscore\",{{\"hotel id\", Int64.Type}, {\"Hotel\", type text}, {\"Código hotel\", type text}, {\"Nombre hotel\", type text}, {\"Código postal hotel\", Int64.Type}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "POS",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "POS",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "displayFolder": "Columns",
            "lineageTag": "b3199b7c-82d8-4cbc-a7f6-ef0cf72b2e82",
            "sourceColumn": "POS",
            "summarizeBy": "none"
          },
          {
            "name": "Cadena de negocio",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "displayFolder": "Columns",
            "lineageTag": "64dc642d-69db-4197-9bd9-a6536f78e661",
            "sourceColumn": "Cadena de negocio",
            "summarizeBy": "none"
          },
          {
            "name": "pos id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "displayFolder": "Columns",
            "formatString": "0",
            "lineageTag": "19feee08-52b9-4edd-ac20-0382563a3540",
            "sourceColumn": "pos id",
            "summarizeBy": "none"
          },
          {
            "name": "chain shop id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "displayFolder": "Columns",
            "formatString": "0",
            "lineageTag": "4085787d-67ea-47f9-ab28-a3be5e0d1395",
            "sourceColumn": "chain shop id",
            "summarizeBy": "none"
          },
          {
            "name": "Source.Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "25dcb97d-86c8-437c-b96c-c9079b8417db",
            "sourceColumn": "Source.Name",
            "summarizeBy": "none"
          }
        ],
        "hierarchies": [
          {
            "name": "Cadena de negocio Hierarchy",
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "levels": [
              {
                "name": "Cadena de negocio",
                "column": "Cadena de negocio",
                "lineageTag": "88a219db-83b0-494e-822a-82f364a8c45c",
                "ordinal": 0
              },
              {
                "name": "POS",
                "column": "POS",
                "lineageTag": "7a6ed27a-c495-4e3d-9eee-c2f043876df0",
                "ordinal": 1
              }
            ],
            "lineageTag": "5f847e1b-dfbf-423e-a650-dea72067ad20"
          }
        ],
        "lineageTag": "42ab9b63-482d-4a68-a8b3-9ead20b82405",
        "partitions": [
          {
            "name": "POS",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "// Load data from Azure Data Lake",
                "    Source = AzureStorage.DataLake(\"https://stgdatapbi.dfs.core.windows.net/data/dev/pos/tilby/dim/pos/\"),",
                "// Filter files that start with \"\"pos_sale_\"\"",
                "    #\"Filter Files\" = Table.SelectRows(#\"Source\", each Text.Contains([Name], \"pos_pos.parquet\")),",
                "// Exclude hidden files",
                "   #\"Exclude Hidden Files\" = Table.SelectRows(#\"Filter Files\", each [Attributes]?[Hidden]? <> true),",
                "//Get Table from File Content",
                "    Transform = Table.AddColumn(#\"Exclude Hidden Files\", \"Transformar archivo (4)\", each #\"Transformar archivo (4)\"([Content])),",
                "//Rename Source Column",
                "    #\"Rename Source\" = Table.RenameColumns(Transform, {\"Name\", \"Source.Name\"}),",
                "//Drop all columns except Partition and Table",
                "    #\"Keep Columns\" = Table.SelectColumns(#\"Rename Source\", {\"Source.Name\", \"Transformar archivo (4)\"}),",
                "//Expand Table to get files columns",
                "    #\"Expand Table\" = Table.ExpandTableColumn(#\"Keep Columns\", \"Transformar archivo (4)\", Table.ColumnNames(#\"Transformar archivo (4)\"(#\"Archivo de ejemplo (4)\"))),",
                "//Replace underscores in Columns",
                "    #\"Replace Underscore\" = Table.RenameColumns(",
                "        #\"Expand Table\",",
                "        List.Transform(",
                "            Table.ColumnNames(#\"Expand Table\"),",
                "            each {_, Text.Replace(_, \"_\", \" \")}",
                "        )",
                "    ),",
                "//Change Data Types",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Replace Underscore\",{{\"pos id\", Int64.Type}, {\"POS\", type text}, {\"Cadena de negocio\", type text}, {\"chain shop id\", Int64.Type}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Impresora",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Impresora",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "72c02c87-23d1-41ed-a6bb-0e6639ef97e3",
            "sourceColumn": "Impresora",
            "summarizeBy": "none"
          },
          {
            "name": "printer id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "c467b8fb-9588-4b8d-9b20-e33d498992e3",
            "sourceColumn": "printer id",
            "summarizeBy": "none"
          },
          {
            "name": "pos id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "589f5d91-6081-4913-b118-0003d1ed0b47",
            "sourceColumn": "pos id",
            "summarizeBy": "none"
          },
          {
            "name": "Source.Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "9257996f-3c2b-4cd0-a0a5-745ef1962fe9",
            "sourceColumn": "Source.Name",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "0b2c2934-cb78-4d85-9bfa-09d46eb63f69",
        "partitions": [
          {
            "name": "Impresora",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "// Load data from Azure Data Lake",
                "    Source = AzureStorage.DataLake(\"https://stgdatapbi.dfs.core.windows.net/data/dev/pos/tilby/dim/printer/\"),",
                "// Filter files that start with \"\"pos_sale_\"\"",
                "    #\"Filter Files\" = Table.SelectRows(#\"Source\", each Text.Contains([Name], \"pos_printer.parquet\")),",
                "// Exclude hidden files",
                "   #\"Exclude Hidden Files\" = Table.SelectRows(#\"Filter Files\", each [Attributes]?[Hidden]? <> true),",
                "//Get Table from File Content",
                "    #\"Transform\" = Table.AddColumn(#\"Exclude Hidden Files\", \"Transformar archivo (6)\", each #\"Transformar archivo (6)\"([Content])),",
                "//Rename Source Column",
                "    #\"Rename Source\" = Table.RenameColumns(Transform, {\"Name\", \"Source.Name\"}),",
                "//Drop all columns except Partition and Table",
                "    #\"Keep Columns\" = Table.SelectColumns(#\"Rename Source\", {\"Source.Name\", \"Transformar archivo (6)\"}),",
                "//Expand Table to get files columns",
                "    #\"Expand Table\" = Table.ExpandTableColumn(#\"Keep Columns\", \"Transformar archivo (6)\", Table.ColumnNames(#\"Transformar archivo (6)\"(#\"Archivo de ejemplo (6)\"))),",
                "//Replace underscores in Columns",
                "    #\"Replace Underscore\" = Table.RenameColumns(",
                "        #\"Expand Table\",",
                "        List.Transform(",
                "            Table.ColumnNames(#\"Expand Table\"),",
                "            each {_, Text.Replace(_, \"_\", \" \")}",
                "        )",
                "    ),",
                "//Change Data Types",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Replace Underscore\",{{\"Source.Name\", type text}, {\"printer id\", Int64.Type}, {\"pos id\", Int64.Type}, {\"Impresora\", type text}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Estadística",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "changedProperties": [
          {
            "property": "IsHidden"
          }
        ],
        "columns": [
          {
            "name": "hotel id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "523f0ba3-71b8-4238-a735-a5ee1fdeb084",
            "sourceColumn": "hotel id",
            "summarizeBy": "none"
          },
          {
            "name": "Source.Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "e801149d-9d1a-47e8-9523-040ff692ac48",
            "sourceColumn": "Source.Name",
            "summarizeBy": "none"
          },
          {
            "name": "date id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "1314473f-02c7-4500-b507-8fc1684392d5",
            "sourceColumn": "date id",
            "summarizeBy": "none"
          },
          {
            "name": "estancias",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "8a3e6be8-472c-4f6e-a862-ebe6ae1ea252",
            "sourceColumn": "estancias",
            "summarizeBy": "sum"
          }
        ],
        "isHidden": true,
        "lineageTag": "e0520604-57dd-4dc8-bc27-459524f07711",
        "partitions": [
          {
            "name": "Estadística",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "// Load data from Azure Data Lake",
                "    Source = AzureStorage.DataLake(\"https://stgdatapbi.dfs.core.windows.net/data/dev/lean/\"),",
                "// Filter file \"estancias_general.parquet\"",
                "    #\"Filter Files\" = Table.SelectRows(#\"Source\", each Text.Contains([Name], \"estancias_general.parquet\")),",
                "// Exclude hidden files",
                "    #\"Exclude Hidden Files\" = Table.SelectRows(#\"Filter Files\", each [Attributes]?[Hidden]? <> true),",
                "//Get Table from File Content    ",
                "    Transform = Table.AddColumn(#\"Exclude Hidden Files\", \"Transformar archivo (14)\", each #\"Transformar archivo (14)\"([Content])),",
                "//Rename Source Column",
                "    #\"Rename Source\" = Table.RenameColumns(Transform, {\"Name\", \"Source.Name\"}),",
                "//Drop all columns except Partition and Table",
                "    #\"Keep Columns\" = Table.SelectColumns(#\"Rename Source\", {\"Source.Name\", \"Transformar archivo (14)\"}),",
                "//Expand Table to get files columns",
                "    #\"Expand Table\" = Table.ExpandTableColumn(#\"Keep Columns\", \"Transformar archivo (14)\", Table.ColumnNames(#\"Transformar archivo (14)\"(#\"Archivo de ejemplo (14)\"))),",
                "//Replace underscores in Columns",
                "    #\"Replace Underscore\" = Table.RenameColumns(",
                "        #\"Expand Table\",",
                "        List.Transform(",
                "            Table.ColumnNames(#\"Expand Table\"),",
                "            each {_, Text.Replace(_, \"_\", \" \")}",
                "        )",
                "    ),",
                "//Change Data Types",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Replace Underscore\",{{\"date id\", Int64.Type}, {\"hotel id\", Int64.Type}, {\"estancias\", Int64.Type}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Método de pago",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "payment method id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "5b4e1359-e981-45fd-83cd-05d2456feab8",
            "sourceColumn": "payment method id",
            "summarizeBy": "none"
          },
          {
            "name": "Método de pago",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "2022b8ff-d0e2-4b27-9dd1-de866ea7f6e3",
            "sourceColumn": "Método de pago",
            "summarizeBy": "none"
          },
          {
            "name": "Source.Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "2ed45443-05b2-4ec7-83bd-74789bb2af31",
            "sourceColumn": "Source.Name",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "29816df1-7785-495e-a484-3a7c68d23a20",
        "partitions": [
          {
            "name": "Método de pago",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "// Load data from Azure Data Lake",
                "    Source = AzureStorage.DataLake(\"https://stgdatapbi.dfs.core.windows.net/data/dev/pos/tilby/dim/payment_method/\"),",
                "// Filter file \"pos_payment_method.parquet\"",
                "    #\"Filter Files\" = Table.SelectRows(#\"Source\", each Text.Contains([Name], \"pos_payment_method.parquet\")),",
                "// Exclude hidden files",
                "   #\"Exclude Hidden Files\" = Table.SelectRows(#\"Filter Files\", each [Attributes]?[Hidden]? <> true),",
                "//Get Table from File Content",
                "    #\"Transform\" = Table.AddColumn(#\"Exclude Hidden Files\", \"Transformar archivo (7)\", each #\"Transformar archivo (7)\"([Content])),    ",
                "//Rename Source Column",
                "    #\"Rename Source\" = Table.RenameColumns(Transform, {\"Name\", \"Source.Name\"}),",
                "//Drop all columns except Partition and Table",
                "    #\"Keep Columns\" = Table.SelectColumns(#\"Rename Source\", {\"Source.Name\", \"Transformar archivo (7)\"}),",
                "//Expand Table to get files columns",
                "    #\"Expand Table\" = Table.ExpandTableColumn(#\"Keep Columns\", \"Transformar archivo (7)\", Table.ColumnNames(#\"Transformar archivo (7)\"(#\"Archivo de ejemplo (7)\"))),",
                "//Replace underscores in Columns",
                "    #\"Replace Underscore\" = Table.RenameColumns(",
                "        #\"Expand Table\",",
                "        List.Transform(",
                "            Table.ColumnNames(#\"Expand Table\"),",
                "            each {_, Text.Replace(_, \"_\", \" \")}",
                "        )",
                "    ),",
                "//Change Data Types",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Replace Underscore\",{{\"Source.Name\", type text}, {\"payment method id\", Int64.Type}, {\"Método de pago\", type text}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Categoría de artículo",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Categoría producto",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "b17b7d20-744a-4eb7-95fa-2e5f5d1eb863",
            "sourceColumn": "Categoría producto",
            "summarizeBy": "none"
          },
          {
            "name": "item category id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "c94fdb56-a543-4c94-8bf0-6b950c0a1d7c",
            "sourceColumn": "item category id",
            "summarizeBy": "none"
          },
          {
            "name": "Source.Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "2db77c4a-4ff3-43f3-ac0e-c22c19647d62",
            "sourceColumn": "Source.Name",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "afc41ad6-a30b-44be-bd96-deb96b531f3b",
        "partitions": [
          {
            "name": "Categoría de artículo",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "// Load data from Azure Data Lake",
                "    Source = AzureStorage.DataLake(\"https://stgdatapbi.dfs.core.windows.net/data/dev/pos/tilby/dim/product_category/\"),",
                "// Filter file \"pos_product_category.parquet\"",
                "    #\"Filter Files\" = Table.SelectRows(#\"Source\", each Text.Contains([Name], \"pos_product_category.parquet\")),",
                "// Exclude hidden files",
                "    #\"Exclude Hidden Files\" = Table.SelectRows(#\"Filter Files\", each [Attributes]?[Hidden]? <> true),",
                "//Get Table from File Content",
                "    #\"Transform\" = Table.AddColumn(#\"Exclude Hidden Files\", \"Transformar archivo (8)\", each #\"Transformar archivo (8)\"([Content])),",
                "//Rename Source Column",
                "    #\"Rename Source\" = Table.RenameColumns(Transform, {\"Name\", \"Source.Name\"}),",
                "//Drop all columns except Partition and Table",
                "    #\"Keep Columns\" = Table.SelectColumns(#\"Rename Source\", {\"Source.Name\", \"Transformar archivo (8)\"}),",
                "//Expand Table to get files columns",
                "    #\"Expand Table\" = Table.ExpandTableColumn(#\"Keep Columns\", \"Transformar archivo (8)\", Table.ColumnNames(#\"Transformar archivo (8)\"(#\"Archivo de ejemplo (8)\"))),",
                "//Replace underscores in Columns",
                "    #\"Replace Underscore\" = Table.RenameColumns(",
                "        #\"Expand Table\",",
                "        List.Transform(",
                "            Table.ColumnNames(#\"Expand Table\"),",
                "            each {_, Text.Replace(_, \"_\", \" \")}",
                "        )",
                "    ),",
                "//Change Data Types",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Replace Underscore\",{{\"Source.Name\", type text}, {\"item category id\", Int64.Type}, {\"Categoría producto\", type text}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "cg_Metric01",
        "calculationGroup": {
          "calculationItems": [
            {
              "name": "Venta (€)",
              "expression": "IF (ISSELECTEDMEASURE([Metric 01]), [Venta (€)], SELECTEDMEASURE())",
              "formatStringDefinition": {
                "expression": "SELECTEDMEASUREFORMATSTRING()"
              },
              "ordinal": 2
            },
            {
              "name": "Artículos (ctdad)",
              "expression": "IF (ISSELECTEDMEASURE([Metric 01]), [Artículos (ctdad)], SELECTEDMEASURE())",
              "formatStringDefinition": {
                "expression": "SELECTEDMEASUREFORMATSTRING()"
              },
              "ordinal": 0
            },
            {
              "name": "Tickets (ctdad)",
              "expression": "IF (ISSELECTEDMEASURE([Metric 01]), [Tickets (ctdad)], SELECTEDMEASURE())",
              "ordinal": 1
            },
            {
              "name": "None",
              "expression": [
                "",
                "    IF (",
                "        ISSELECTEDMEASURE([Metric 01]),",
                "        BLANK(),",
                "        SELECTEDMEASURE()",
                "    )"
              ]
            },
            {
              "name": "Ticket medio (€)",
              "expression": "IF (ISSELECTEDMEASURE([Metric 01]), [Ticket medio (€)], SELECTEDMEASURE())",
              "ordinal": 3
            },
            {
              "name": "Ticket maximo (€)",
              "expression": "IF (ISSELECTEDMEASURE([Metric 01]), [Ticket maximo (€)], SELECTEDMEASURE())",
              "ordinal": 4
            }
          ],
          "precedence": 12
        },
        "columns": [
          {
            "name": "Metric_01",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "dfa2640c-79fb-4f69-b5c1-fa893dc8f780",
            "sortByColumn": "Ordinal",
            "sourceColumn": "Name",
            "summarizeBy": "none"
          },
          {
            "name": "Ordinal",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "b5570906-047c-413d-ac53-21787f015869",
            "sourceColumn": "Ordinal",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "06f8242f-8e07-465d-8edf-110d7baad6e6",
        "measures": [
          {
            "name": "Metric 01",
            "expression": "0",
            "formatStringDefinition": {
              "expression": [
                "VAR __Format =",
                "SWITCH (",
                "    TRUE (),",
                "    CONTAINSSTRING(SELECTEDVALUE(cg_Metric01[Metric_01]), \" (ctdad)\"), \"#,##0\",",
                "    CONTAINSSTRING(SELECTEDVALUE(cg_Metric01[Metric_01]), \"(€)\"), \"#,##0.00 €\",",
                "    CONTAINSSTRING(SELECTEDVALUE(cg_Metric01[Metric_01]), \"%\"), \"#,##0.00%\",",
                "    BLANK()",
                ")",
                "RETURN",
                "    __Format"
              ]
            },
            "lineageTag": "3ddb7132-d4ef-485e-b8a7-ecf10454ea85"
          },
          {
            "name": "Metric 1 Label Color",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR __RGBCode = \"17, 41, 255\"",
              "",
              "-- Get the selected options from the slicer",
              "VAR __SelectedOptions = VALUES('Toggle Chart Labels'[Options])",
              "",
              "-- Check if Metric is one of the selected options",
              "VAR __Opacity = ",
              "    SWITCH(",
              "        TRUE,",
              "        CONTAINS(__SelectedOptions, 'Toggle Chart Labels'[Options], \"Hide Metric 1\"),0,",
              "        1",
              "    )",
              "",
              "-- Set Color",
              "VAR __Color = \"rgba(\" & __RGBCode & \", \" & __Opacity & \")\"",
              "",
              "RETURN __Color"
            ],
            "lineageTag": "462d4898-845e-4468-a0b2-8f8d27a09e4b"
          }
        ],
        "partitions": [
          {
            "name": "cg_Metric01",
            "mode": "import",
            "source": {
              "type": "calculationGroup"
            }
          }
        ]
      },
      {
        "name": "cg_Aggregates",
        "calculationGroup": {
          "calculationItems": [
            {
              "name": "Total",
              "expression": "SELECTEDMEASURE()"
            },
            {
              "name": "Daily average",
              "expression": [
                "",
                "VAR __ApplyCalculation = CONTAINSSTRING(SELECTEDMEASURENAME(),\"Metric\")",
                "",
                "RETURN",
                "    SWITCH(",
                "        FALSE(),",
                "        __ApplyCalculation,",
                "        AVERAGEX (",
                "            VALUES ( Calendario[Fecha] ),",
                "            SELECTEDMEASURE()",
                "        ),",
                "        SELECTEDMEASURE()",
                "    )"
              ],
              "ordinal": 3
            },
            {
              "name": "Monthly average",
              "expression": [
                "",
                "VAR __ApplyCalculation = CONTAINSSTRING(SELECTEDMEASURENAME(),\"Metric\")",
                "",
                "RETURN",
                "    SWITCH(",
                "        FALSE(),",
                "        __ApplyCalculation,",
                "        AVERAGEX (",
                "            VALUES ('Calendario'[Año Mes]),",
                "            SELECTEDMEASURE ()",
                "        ),",
                "        SELECTEDMEASURE()",
                "    )",
                "",
                "//It should only show for context Quarter or above else it displays the total for the month, not the average"
              ],
              "ordinal": 6
            },
            {
              "name": "Daily min",
              "expression": [
                "",
                "VAR __ApplyCalculation = CONTAINSSTRING(SELECTEDMEASURENAME(),\"Metric\")",
                "",
                "RETURN",
                "    SWITCH(",
                "        FALSE(),",
                "        __ApplyCalculation,",
                "        MINX (",
                "            VALUES ( Calendario[Fecha] ),",
                "            SELECTEDMEASURE()",
                "        ),",
                "        SELECTEDMEASURE()",
                "    )"
              ],
              "ordinal": 4
            },
            {
              "name": "Daily max",
              "expression": [
                "",
                "VAR __ApplyCalculation = CONTAINSSTRING(SELECTEDMEASURENAME(),\"Metric\")",
                "",
                "RETURN",
                "    SWITCH(",
                "        FALSE(),",
                "        __ApplyCalculation,",
                "        MAXX (",
                "            VALUES ( Calendario[Fecha] ),",
                "            SELECTEDMEASURE()",
                "        ),",
                "        SELECTEDMEASURE()",
                "    )"
              ],
              "ordinal": 5
            },
            {
              "name": "Monthly min",
              "expression": [
                "",
                "VAR __ApplyCalculation = CONTAINSSTRING(SELECTEDMEASURENAME(),\"Metric\")",
                "",
                "RETURN",
                "    SWITCH(",
                "        FALSE(),",
                "        __ApplyCalculation,",
                "        MINX (",
                "            VALUES ( Calendario[Año Mes] ),",
                "            SELECTEDMEASURE()",
                "        ),",
                "        SELECTEDMEASURE()",
                "    )"
              ],
              "ordinal": 7
            },
            {
              "name": "Monthly max",
              "expression": [
                "",
                "VAR __ApplyCalculation = CONTAINSSTRING(SELECTEDMEASURENAME(),\"Metric\")",
                "",
                "RETURN",
                "    SWITCH(",
                "        FALSE(),",
                "        __ApplyCalculation,",
                "        MAXX (",
                "            VALUES ( Calendario[Año Mes] ),",
                "            SELECTEDMEASURE()",
                "        ),",
                "        SELECTEDMEASURE()",
                "    )"
              ],
              "ordinal": 8
            }
          ],
          "precedence": 7
        },
        "columns": [
          {
            "name": "Aggregate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "435ee331-59ec-452e-9bd9-be520e628b51",
            "sortByColumn": "Ordinal",
            "sourceColumn": "Name",
            "summarizeBy": "none"
          },
          {
            "name": "Ordinal",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "1792b498-cd14-4aa6-ad5d-e5f6ebadd24a",
            "sourceColumn": "Ordinal",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "e5e935a4-77ab-4e51-b4a3-94f44ae8783e",
        "partitions": [
          {
            "name": "cg_Aggregates",
            "mode": "import",
            "source": {
              "type": "calculationGroup"
            }
          }
        ]
      },
      {
        "name": "cg_LablesFromSlicers",
        "calculationGroup": {
          "calculationItems": [
            {
              "name": "CS",
              "expression": [
                "",
                "VAR __IsAllSelected = NOT(ISFILTERED('POS'[Cadena de negocio]))",
                "VAR __Label = IF(",
                "                __IsAllSelected = TRUE(),",
                "                \"All\",",
                "                CONCATENATEX(VALUES('POS'[Cadena de negocio]), 'POS'[Cadena de negocio], \", \")",
                "            )",
                "RETURN",
                "    __Label"
              ]
            },
            {
              "name": "POS",
              "expression": [
                "",
                "VAR __IsAllSelected = NOT(ISFILTERED('POS'[POS]))",
                "VAR __Label = IF(",
                "                __IsAllSelected = TRUE(),",
                "                \"All\",",
                "                CONCATENATEX(VALUES('POS'[POS]), 'POS'[POS], \", \")",
                "            )",
                "RETURN",
                "    __Label"
              ],
              "ordinal": 1
            },
            {
              "name": "Metric 01",
              "expression": [
                "",
                "VAR __IsAllSelected = NOT(ISFILTERED(cg_Metric01[Metric_01]))",
                "VAR __Label = IF(",
                "                __IsAllSelected = TRUE(),",
                "                \"All\",",
                "                CONCATENATEX(VALUES(cg_Metric01[Metric_01]), cg_Metric01[Metric_01], \", \")",
                "            )",
                "RETURN",
                "    __Label"
              ],
              "ordinal": 2
            },
            {
              "name": "Metric 02",
              "expression": [
                "",
                "VAR __IsAllSelected = NOT(ISFILTERED(cg_Metric02[Metric_02]))",
                "VAR __Label = IF(",
                "                __IsAllSelected = TRUE(),",
                "                \"All\",",
                "                CONCATENATEX(VALUES(cg_Metric02[Metric_02]), cg_Metric02[Metric_02], \", \")",
                "            )",
                "RETURN",
                "    __Label"
              ],
              "ordinal": 3
            },
            {
              "name": "Metric 03",
              "expression": [
                "",
                "VAR __IsAllSelected = NOT(ISFILTERED(cg_Metric03[Metric_03]))",
                "VAR __Label = IF(",
                "                __IsAllSelected = TRUE(),",
                "                \"All\",",
                "                CONCATENATEX(VALUES(cg_Metric03[Metric_03]), cg_Metric03[Metric_03], \", \")",
                "            )",
                "RETURN",
                "    __Label"
              ],
              "ordinal": 4
            },
            {
              "name": "Metric 04",
              "expression": [
                "",
                "VAR __IsAllSelected = NOT(ISFILTERED(cg_Metric04[Metric_04]))",
                "VAR __Label = IF(",
                "                __IsAllSelected = TRUE(),",
                "                \"All\",",
                "                CONCATENATEX(VALUES(cg_Metric04[Metric_04]), cg_Metric04[Metric_04], \", \")",
                "            )",
                "RETURN",
                "    __Label"
              ],
              "ordinal": 5
            }
          ],
          "precedence": 15
        },
        "columns": [
          {
            "name": "Slicers",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "d98404ce-7d5a-47aa-aa06-12aefc4e0d7c",
            "sortByColumn": "Ordinal",
            "sourceColumn": "Name",
            "summarizeBy": "none"
          },
          {
            "name": "Ordinal",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "906802d8-5081-4a37-8ed4-45da1b29c17d",
            "sourceColumn": "Ordinal",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "5c31da92-2396-4260-9b63-c4290ad8886f",
        "measures": [
          {
            "name": "Cadena de negocio",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "        CALCULATE (",
              "            SELECTEDMEASURE(),",
              "            'cg_LablesFromSlicers'[Slicers] = \"CS\"",
              "        )"
            ],
            "lineageTag": "4b54d199-b06e-4b78-b42e-d38f9a5a0d2c"
          },
          {
            "name": "CS & POS",
            "expression": [
              "",
              "VAR __CS = cg_LablesFromSlicers[Cadena de negocio]",
              "VAR __POS = cg_LablesFromSlicers[Point of sale]",
              "RETURN",
              "    \"Cadena(s): \" & __CS",
              "    & UNICHAR(10) &",
              "    \"POS(s): \" & __POS"
            ],
            "lineageTag": "67a65bce-2cb8-4f96-99e0-9f011cede85f"
          },
          {
            "name": "Point of sale",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "        CALCULATE (",
              "            SELECTEDMEASURE(),",
              "            'cg_LablesFromSlicers'[Slicers] = \"POS\"",
              "        )"
            ],
            "lineageTag": "8fa550ce-8633-4a94-8ede-06bd69b9158c"
          },
          {
            "name": "Metric 1",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "        CALCULATE (",
              "            SELECTEDMEASURE(),",
              "            'cg_LablesFromSlicers'[Slicers] = \"Metric 01\"",
              "        )"
            ],
            "lineageTag": "e7884336-f244-4e5c-a5a0-c30838610583"
          },
          {
            "name": "Metric 2",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "        CALCULATE (",
              "            SELECTEDMEASURE(),",
              "            'cg_LablesFromSlicers'[Slicers] = \"Metric 02\"",
              "        )"
            ],
            "lineageTag": "ad821f96-b0bf-41a1-9cf6-4eb578da2904"
          },
          {
            "name": "Metric 3",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "        CALCULATE (",
              "            SELECTEDMEASURE(),",
              "            'cg_LablesFromSlicers'[Slicers] = \"Metric 03\"",
              "        )"
            ],
            "lineageTag": "cb1fe9bb-7932-4e74-9dd9-c72c4b3f7b5e"
          },
          {
            "name": "Metric 4",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "        CALCULATE (",
              "            SELECTEDMEASURE(),",
              "            'cg_LablesFromSlicers'[Slicers] = \"Metric 04\"",
              "        )"
            ],
            "lineageTag": "efe5c4ba-8287-4059-8a8a-305954e40330"
          }
        ],
        "partitions": [
          {
            "name": "cg_LablesFromSlicers",
            "mode": "import",
            "source": {
              "type": "calculationGroup"
            }
          }
        ]
      },
      {
        "name": "Tiempo",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "hour",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "c08bda33-a475-48b3-b786-0a93433801b8",
            "sourceColumn": "hour",
            "summarizeBy": "none"
          },
          {
            "name": "minute",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "37290a4e-509b-4250-8993-9f78caa66875",
            "sourceColumn": "minute",
            "summarizeBy": "none"
          },
          {
            "name": "second",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "55454602-e8b6-450a-af4e-58e56484a961",
            "sourceColumn": "second",
            "summarizeBy": "none"
          },
          {
            "name": "15",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "aba702bc-5e9c-42e1-88b4-ad6838d3b451",
            "sourceColumn": "15",
            "summarizeBy": "none"
          },
          {
            "name": "30",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "28ee6bfa-3f49-4ba5-8ba0-13f8cae3b630",
            "sourceColumn": "30",
            "summarizeBy": "none"
          },
          {
            "name": "time id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "89231350-27c7-4989-9672-6b02acd7686b",
            "sourceColumn": "time id",
            "summarizeBy": "none"
          },
          {
            "name": "AM PM",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "f0db508d-7617-49cc-accd-74217b16dc1e",
            "sourceColumn": "AM PM",
            "summarizeBy": "none"
          },
          {
            "name": "Source.Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "372aeead-8d80-49e5-a2a8-80eef0b5d76f",
            "sourceColumn": "Source.Name",
            "summarizeBy": "none"
          },
          {
            "name": "HH:MM:SS",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Time"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Time",
            "lineageTag": "d83976ee-91c1-4fd1-8c07-0850481c037c",
            "sourceColumn": "HH:MM:SS",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "0d78cade-c297-4870-a600-bc93e0841c00",
        "partitions": [
          {
            "name": "Tiempo",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "// Load data from Azure Data Lake",
                "    Source = AzureStorage.DataLake(\"https://stgdatapbi.dfs.core.windows.net/data/dev/common/dim/time/\"),",
                "// Filter file \"common_time.parquet\"",
                "    #\"Filter Files\" = Table.SelectRows(#\"Source\", each Text.Contains([Name], \"common_time.parquet\")),",
                "// Exclude hidden files",
                "    #\"Exclude Hidden Files\" = Table.SelectRows(#\"Filter Files\", each [Attributes]?[Hidden]? <> true),",
                "//Get Table from File Content",
                "    Transform = Table.AddColumn(#\"Exclude Hidden Files\", \"Transformar archivo (9)\", each #\"Transformar archivo (9)\"([Content])),",
                "//Rename Source Column",
                "    #\"Rename Source\" = Table.RenameColumns(Transform, {\"Name\", \"Source.Name\"}),",
                "//Drop all columns except Partition and Table",
                "    #\"Keep Columns\" = Table.SelectColumns(#\"Rename Source\", {\"Source.Name\", \"Transformar archivo (9)\"}),",
                "//Expand Table to get files columns",
                "    #\"Expand Table\" = Table.ExpandTableColumn(#\"Keep Columns\", \"Transformar archivo (9)\", Table.ColumnNames(#\"Transformar archivo (9)\"(#\"Archivo de ejemplo (9)\"))),",
                "//Replace underscores in Columns",
                "    #\"Replace Underscore\" = Table.RenameColumns(",
                "        #\"Expand Table\",",
                "        List.Transform(",
                "            Table.ColumnNames(#\"Expand Table\"),",
                "            each {_, Text.Replace(_, \"_\", \" \")}",
                "        )",
                "    ),",
                "//Change Data Types",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Replace Underscore\",{{\"Source.Name\", type text}, {\"time id\", Int32.Type}, {\"HH:MM:SS\", type time}, {\"hour\", Int16.Type}, {\"minute\", Int16.Type}, {\"second\", Int16.Type}, {\"15\", Int16.Type}, {\"30\", Int16.Type}, {\"AM PM\", type text}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Dimensions",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "ed12ce90d8ab4cb5a6106d8a2c1e1a41"
          }
        ],
        "columns": [
          {
            "name": "Selection",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": false,
            "lineageTag": "0167bc4f-58b0-4190-b8cb-2b85c22f6ec5",
            "relatedColumnDetails": {
              "groupByColumns": [
                {
                  "groupingColumn": "Fields"
                }
              ]
            },
            "sortByColumn": "Order",
            "sourceColumn": "[Value1]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Fields",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "extendedProperties": [
              {
                "name": "ParameterMetadata",
                "type": "json",
                "value": {
                  "kind": 2,
                  "version": 3
                }
              }
            ],
            "isDataTypeInferred": true,
            "isHidden": true,
            "isNameInferred": false,
            "lineageTag": "8053a012-d84f-4745-b258-3ecbd0925449",
            "sortByColumn": "Selection",
            "sourceColumn": "[Value2]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Order",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isHidden": true,
            "isNameInferred": false,
            "lineageTag": "8b1f9660-52fe-44ef-8fc1-d6fdebbed7dc",
            "sourceColumn": "[Value3]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          }
        ],
        "lineageTag": "276eac00-ea85-4c6c-ad1e-9b5e8c630c82",
        "partitions": [
          {
            "name": "Dimensions",
            "mode": "import",
            "source": {
              "expression": [
                "{",
                "    (\"Año\", NAMEOF('Calendario'[Año]), 0),",
                "    (\"Cuarto\", NAMEOF('Calendario'[Año Cuarto]), 1),",
                "    (\"Mes\", NAMEOF('Calendario'[Año Mes]), 2),",
                "    (\"Día\", NAMEOF('Calendario'[Fecha]), 3),",
                "    (\"AM/PM\", NAMEOF(Tiempo[AM PM]),4),",
                "    (\"Hora\", NAMEOF(Tiempo[hour]),5),",
                "    (\"30 Min\", NAMEOF(Tiempo[30]),6),",
                "    (\"15 Min\", NAMEOF(Tiempo[15]),7),",
                "    (\"Cadena de negocio\", NAMEOF(POS[Cadena de negocio]), 8),",
                "    (\"POS\", NAMEOF(POS[POS]), 9),",
                "    (\"Vendedor\", NAMEOF('Venta'[Vendedor]), 10),",
                "    (\"Método de pago\", NAMEOF('Método de pago'[Método de pago]), 11),",
                "    (\"Categoría producto\", NAMEOF('Categoría de artículo'[Categoría producto]), 12)",
                "}"
              ],
              "type": "calculated"
            }
          }
        ]
      },
      {
        "name": "cg_Metric02",
        "calculationGroup": {
          "calculationItems": [
            {
              "name": "Artículos (ctdad)",
              "expression": "IF (ISSELECTEDMEASURE([Metric 02]), [Artículos (ctdad)], SELECTEDMEASURE())",
              "ordinal": 0
            },
            {
              "name": "Tickets (ctdad)",
              "expression": "IF (ISSELECTEDMEASURE([Metric 02]), [Tickets (ctdad)], SELECTEDMEASURE())",
              "ordinal": 1
            },
            {
              "name": "Venta (€)",
              "expression": "IF (ISSELECTEDMEASURE([Metric 02]), [Venta (€)], SELECTEDMEASURE())",
              "ordinal": 2
            },
            {
              "name": "None",
              "expression": [
                "",
                "    IF (",
                "        ISSELECTEDMEASURE([Metric 02]),",
                "        BLANK(),",
                "        SELECTEDMEASURE()",
                "    )"
              ]
            },
            {
              "name": "Ticket maximo (€)",
              "expression": "IF (ISSELECTEDMEASURE([Metric 02]), [Ticket maximo (€)], SELECTEDMEASURE())",
              "ordinal": 3
            },
            {
              "name": "Ticket medio (€)",
              "expression": "IF (ISSELECTEDMEASURE([Metric 02]), [Ticket medio (€)], SELECTEDMEASURE())",
              "ordinal": 4
            },
            {
              "name": "Ticket minimo (€)",
              "expression": "IF (ISSELECTEDMEASURE([Metric 02]), [Ticket minimo (€)], SELECTEDMEASURE())",
              "ordinal": 5
            }
          ],
          "precedence": 11
        },
        "columns": [
          {
            "name": "Metric_02",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "c68138d4-6ace-4f8f-812e-c666ea5c83f8",
            "sortByColumn": "Ordinal",
            "sourceColumn": "Name",
            "summarizeBy": "none"
          },
          {
            "name": "Ordinal",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "1dee11af-8603-47cf-9d82-11496e0253c1",
            "sourceColumn": "Ordinal",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "98728a6c-3ba8-46fc-a20a-22685055d163",
        "measures": [
          {
            "name": "Metric 02",
            "expression": "0",
            "formatStringDefinition": {
              "expression": [
                "VAR __Format =",
                "SWITCH (",
                "        TRUE (),",
                "        CONTAINSSTRING(SELECTEDVALUE('cg_Metric02'[Metric_02]), \" (ctdad)\"), \"#,##0\",",
                "        CONTAINSSTRING(SELECTEDVALUE('cg_Metric02'[Metric_02]), \"(€)\"), \"#,##0.00 €\",",
                "        CONTAINSSTRING(SELECTEDVALUE('cg_Metric02'[Metric_02]), \"%\"), \"0.00 %\",",
                "        BLANK()",
                "    )",
                "RETURN",
                "    __Format"
              ]
            },
            "lineageTag": "e3ff0332-22d5-4f08-a072-67588069a9dd"
          },
          {
            "name": "Metric 2 Label Color",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR __RGBCode = \"224, 68, 167\"",
              "",
              "-- Get the selected options from the slicer",
              "VAR __SelectedOptions = VALUES('Toggle Chart Labels'[Options])",
              "",
              "-- Check if Metric is one of the selected options",
              "VAR __Opacity = ",
              "    SWITCH(",
              "        TRUE,",
              "        CONTAINS(__SelectedOptions, 'Toggle Chart Labels'[Options], \"Hide Metric 2\"),0,",
              "        1",
              "    )",
              "",
              "-- Set Color",
              "VAR __Color = \"rgba(\" & __RGBCode & \", \" & __Opacity & \")\"",
              "",
              "RETURN __Color"
            ],
            "lineageTag": "539dc31b-b7c5-4b97-bb9b-199200091e86"
          }
        ],
        "partitions": [
          {
            "name": "cg_Metric02",
            "mode": "import",
            "source": {
              "type": "calculationGroup"
            }
          }
        ]
      },
      {
        "name": "Toggle Chart Labels",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "1aa080d4e3a44238adb16d8adbb5a04f"
          }
        ],
        "columns": [
          {
            "name": "Options",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "ea5a629c-6edb-4cb0-b444-d4a34ac61d16",
            "sourceColumn": "[Options]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Order",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "93bb2eec-d7b0-469f-8eb7-ce1782be266b",
            "sourceColumn": "[Order]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          }
        ],
        "lineageTag": "f087d02c-78cd-4ae7-b424-606cfa6d0078",
        "partitions": [
          {
            "name": "Toggle Chart Labels",
            "mode": "import",
            "source": {
              "expression": [
                "DATATABLE(",
                "    \"Order\", INTEGER,",
                "    \"Options\", STRING,",
                "    {",
                "        {0,\"Show All\"},",
                "        {1,\"Hide Metric 1\"},",
                "        {2,\"Hide Metric 2\"},",
                "        {3,\"Hide Metric 3\"},",
                "        {4,\"Hide Metric 4\"}",
                "    }",
                ")"
              ],
              "type": "calculated"
            }
          }
        ]
      },
      {
        "name": "*cg_MetricFormatLabel",
        "calculationGroup": {
          "calculationItems": [
            {
              "name": "All Values",
              "expression": "SELECTEDMEASURE()"
            },
            {
              "name": "Highest & Lowest",
              "expression": "SELECTEDMEASURE()",
              "formatStringDefinition": {
                "expression": [
                  "VAR _VisibleDates =",
                  "    CALCULATETABLE(VALUES( 'Calendario' ), ALLSELECTED(Calendario[Fecha]))",
                  "VAR _Highest =",
                  "    MAXX( _VisibleDates, SELECTEDMEASURE() )",
                  "VAR _Lowest =",
                  "    MINX( _VisibleDates, SELECTEDMEASURE() )",
                  "RETURN",
                  "    SWITCH(",
                  "        TRUE(),",
                  "        SELECTEDMEASURE() = _Highest, \"Highest: \" & SELECTEDMEASUREFORMATSTRING(),",
                  "        SELECTEDMEASURE() = _Lowest, \"Lowest :\" & SELECTEDMEASUREFORMATSTRING(),",
                  "        UNICHAR(8203)",
                  "    )",
                  "//This works well with dates but it does not work for other dimenstions!",
                  "",
                  "",
                  "//VAR __Dim1Selection = SELECTEDVALUE('Dimensions 1'[Fields])",
                  "//VAR _VisibleDays = CALCULATETABLE(VALUES( 'Calendario' ), ALLSELECTED(Calendario[Fecha]))",
                  "//VAR _VisibleMonths = CALCULATETABLE(VALUES( 'Calendario' ), ALLSELECTED(Calendario[Año Mes]))",
                  "//",
                  "//VAR _Highest =",
                  "//    SWITCH(",
                  "//        __Dim1Selection,",
                  "//        \"Año\", MAXX( _VisibleDays, SELECTEDMEASURE() ),",
                  "//        \"Mes\", MAXX( _VisibleMonths, SELECTEDMEASURE() )",
                  "//    )",
                  "//VAR _Lowest =",
                  "//    SWITCH(",
                  "//        __Dim1Selection,",
                  "//        \"Año\", MINX( _VisibleDays, SELECTEDMEASURE() ),",
                  "//        \"Mes\", MINX( _VisibleMonths, SELECTEDMEASURE() )",
                  "//    )",
                  "//RETURN",
                  "//    SWITCH(",
                  "//        TRUE(),",
                  "//        SELECTEDMEASURE() = _Highest, \"Highest: \" & SELECTEDMEASUREFORMATSTRING(),",
                  "//        SELECTEDMEASURE() = _Lowest, \"Lowest :\" & SELECTEDMEASUREFORMATSTRING(),",
                  "//        UNICHAR(8203)",
                  "//    )"
                ]
              }
            }
          ],
          "precedence": 13
        },
        "columns": [
          {
            "name": "Labels",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isHidden": true,
            "lineageTag": "bf533cb6-9cd0-4d95-a454-2c39eedbbb93",
            "sortByColumn": "Ordinal",
            "sourceColumn": "Name",
            "summarizeBy": "none"
          },
          {
            "name": "Ordinal",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isHidden": true,
            "lineageTag": "ba28e08f-d9ee-45dd-a58a-5c0fde81ec96",
            "sourceColumn": "Ordinal",
            "summarizeBy": "sum"
          }
        ],
        "isHidden": true,
        "lineageTag": "6f36e93d-2862-4994-87e9-26b4a6024e35",
        "measures": [
          {
            "name": "Label Format",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR __VisibleDates =",
              "    //TODO: Should handle all Hierarchies (Calendario first of all, Time, POS)",
              "    CALCULATETABLE(VALUES( 'Calendario' ), ALLSELECTED ( Calendario[Fecha]) )",
              "VAR __Highest =",
              "    MAXX( __VisibleDates, SELECTEDMEASURE() )",
              "VAR __Lowest =",
              "    MINX( __VisibleDates, SELECTEDMEASURE() )",
              "VAR __FormatLabel =",
              "    SWITCH(",
              "        TRUE(),",
              "        SELECTEDVALUE('*cg_MetricFormatLabel'[Labels]) = \"All Values\", 0,",
              "        SELECTEDVALUE('*cg_MetricFormatLabel'[Labels]) = \"Highest & Lowest\" && SELECTEDMEASURE() = __Highest, 1,",
              "        SELECTEDVALUE('*cg_MetricFormatLabel'[Labels]) = \"Highest & Lowest\" && SELECTEDMEASURE() = __Lowest, 2,",
              "        SELECTEDVALUE('*cg_MetricFormatLabel'[Labels]) = \"Highest\" && SELECTEDMEASURE() = __Highest, 1,",
              "        SELECTEDVALUE('*cg_MetricFormatLabel'[Labels]) = \"Lowest\" && SELECTEDMEASURE() = __Lowest, 2,",
              "        0",
              "    )",
              "/*",
              "VAR _ApplyFormatting =",
              "    IF(",
              "        ISSELECTEDMEASURE([Metric 01 Measure]),",
              "        1,//__FormatLabel,",
              "        0//UNICHAR(8203)",
              "    )",
              "*/",
              "RETURN",
              "    __FormatLabel"
            ],
            "isHidden": true,
            "lineageTag": "6940bd8a-4600-463f-93c9-ce18d623992f"
          }
        ],
        "partitions": [
          {
            "name": "*cg_MetricFormatLabel",
            "mode": "import",
            "source": {
              "type": "calculationGroup"
            }
          }
        ]
      },
      {
        "name": "cg_Metric03",
        "calculationGroup": {
          "calculationItems": [
            {
              "name": "Producción (€)",
              "expression": "IF (ISSELECTEDMEASURE([Metric 03]), [Producción (€)], SELECTEDMEASURE())",
              "ordinal": 2
            },
            {
              "name": "Devoluciones (€)",
              "expression": "IF (ISSELECTEDMEASURE([Metric 03]), [Devoluciones (€)], SELECTEDMEASURE())",
              "ordinal": 0
            },
            {
              "name": "Venta/PAX (€)",
              "expression": "IF (ISSELECTEDMEASURE([Metric 03]), [Venta/PAX (€)], SELECTEDMEASURE())",
              "ordinal": 4
            },
            {
              "name": "Ratio PAX POS Producción (€)",
              "expression": "IF (ISSELECTEDMEASURE([Metric 03]), [Ratio PAX POS Producción (€)], SELECTEDMEASURE())",
              "ordinal": 3
            },
            {
              "name": "None",
              "expression": [
                "",
                "    IF (",
                "        ISSELECTEDMEASURE([Metric 03]),",
                "        BLANK(),",
                "        SELECTEDMEASURE()",
                "    )"
              ]
            }
          ],
          "precedence": 10
        },
        "columns": [
          {
            "name": "Metric_03",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "633208f4-f08f-402a-a685-a4043fddfa65",
            "sortByColumn": "Ordinal",
            "sourceColumn": "Name",
            "summarizeBy": "none"
          },
          {
            "name": "Ordinal",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "837ad8fd-7613-4b3a-8d82-c889921e4dfc",
            "sourceColumn": "Ordinal",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "9ce8ce49-4020-4ff3-874a-8f281a394a43",
        "measures": [
          {
            "name": "Metric 03",
            "expression": "0",
            "formatStringDefinition": {
              "expression": [
                "VAR __Format =",
                "SWITCH (",
                "        TRUE (),",
                "        CONTAINSSTRING(SELECTEDVALUE('cg_Metric03'[Metric_03]), \" (ctdad)\"), \"#,##0\",",
                "        CONTAINSSTRING(SELECTEDVALUE('cg_Metric03'[Metric_03]), \"(€)\"), \"#,##0.00 €\",",
                "        CONTAINSSTRING(SELECTEDVALUE('cg_Metric03'[Metric_03]), \"%\"), \"0.00 %\",",
                "        BLANK()",
                "    )",
                "RETURN",
                "    __Format"
              ]
            },
            "lineageTag": "364c38cc-e497-4c50-82a8-58a873e8bd41"
          },
          {
            "name": "Metric 3 Label Color",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR __RGBCode = \"230, 108, 55\"",
              "",
              "-- Get the selected options from the slicer",
              "VAR __SelectedOptions = VALUES('Toggle Chart Labels'[Options])",
              "",
              "-- Check if Metric is one of the selected options",
              "VAR __Opacity = ",
              "    SWITCH(",
              "        TRUE,",
              "        CONTAINS(__SelectedOptions, 'Toggle Chart Labels'[Options], \"Hide Metric 3\"),0,",
              "        1",
              "    )",
              "",
              "-- Set Color",
              "VAR __Color = \"rgba(\" & __RGBCode & \", \" & __Opacity & \")\"",
              "",
              "RETURN __Color"
            ],
            "lineageTag": "7c97f462-ab79-4f42-8bcd-bbec8d040f55"
          }
        ],
        "partitions": [
          {
            "name": "cg_Metric03",
            "mode": "import",
            "source": {
              "type": "calculationGroup"
            }
          }
        ]
      },
      {
        "name": "cg_Metric04",
        "calculationGroup": {
          "calculationItems": [
            {
              "name": "Devoluciones (€)",
              "expression": "IF (ISSELECTEDMEASURE([Metric 04]), [Devoluciones (€)], SELECTEDMEASURE())",
              "ordinal": 0
            },
            {
              "name": "Ratio PAX POS Producción (€)",
              "expression": "IF (ISSELECTEDMEASURE([Metric 04]), [Ratio PAX POS Producción (€)], SELECTEDMEASURE())",
              "ordinal": 3
            },
            {
              "name": "Producción (€)",
              "expression": "IF (ISSELECTEDMEASURE([Metric 04]), [Producción (€)], SELECTEDMEASURE())",
              "ordinal": 2
            },
            {
              "name": "Venta/PAX (€)",
              "expression": "IF (ISSELECTEDMEASURE([Metric 04]), [Venta/PAX (€)], SELECTEDMEASURE())",
              "ordinal": 4
            },
            {
              "name": "None",
              "expression": [
                "",
                "    IF (",
                "        ISSELECTEDMEASURE([Metric 04]),",
                "        BLANK(),",
                "        SELECTEDMEASURE()",
                "    )"
              ]
            }
          ],
          "precedence": 9
        },
        "columns": [
          {
            "name": "Metric_04",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "f57e839b-35a8-4637-a57c-fbed34bfb92d",
            "sortByColumn": "Ordinal",
            "sourceColumn": "Name",
            "summarizeBy": "none"
          },
          {
            "name": "Ordinal",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "c6f62274-6218-49ce-bf87-0ae5a5f507e8",
            "sourceColumn": "Ordinal",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "153c1aeb-49f7-4de7-a4f8-7f0fa578a063",
        "measures": [
          {
            "name": "Metric 04",
            "expression": "0",
            "formatStringDefinition": {
              "expression": [
                "VAR __Format =",
                "SWITCH (",
                "        TRUE (),",
                "        CONTAINSSTRING(SELECTEDVALUE('cg_Metric04'[Metric_04]), \" (ctdad)\"), \"#,##0\",",
                "        CONTAINSSTRING(SELECTEDVALUE('cg_Metric04'[Metric_04]), \"(€)\"), \"#,##0.00 €\",",
                "        CONTAINSSTRING(SELECTEDVALUE('cg_Metric04'[Metric_04]), \"%\"), \"0.00 %\",",
                "        BLANK()",
                "    )",
                "RETURN",
                "    __Format"
              ]
            },
            "lineageTag": "2485f856-0bcc-47ff-aeaa-3255e381731a"
          },
          {
            "name": "Metric 4 Label Color",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "",
              "VAR RGBCode = \"18, 185, 73\"",
              "",
              "-- Get the selected options from the slicer",
              "VAR __SelectedOptions = VALUES('Toggle Chart Labels'[Options])",
              "",
              "-- Check if Metric is one of the selected options",
              "VAR __Opacity = ",
              "    SWITCH(",
              "        TRUE,",
              "        CONTAINS(__SelectedOptions, 'Toggle Chart Labels'[Options], \"Hide Metric 4\"),0,",
              "        1",
              "    )",
              "",
              "-- Set Color",
              "VAR __Color = \"rgba(\" & RGBCode & \", \" & __Opacity & \")\"",
              "",
              "RETURN __Color"
            ],
            "lineageTag": "93ada9a9-5ef8-4274-b69d-28ac578deb94"
          }
        ],
        "partitions": [
          {
            "name": "cg_Metric04",
            "mode": "import",
            "source": {
              "type": "calculationGroup"
            }
          }
        ]
      },
      {
        "name": "xCalendario new",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "bc57b24ad9e84086a9e1444a4c535d00"
          }
        ],
        "columns": [
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "234cce52-29dd-4f08-a472-822e0fe3c653",
            "sourceColumn": "[Date]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "yyyymm",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "a1555567-ef32-4b9e-a115-8a5134e44329",
            "sourceColumn": "[yyyymm]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Año",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "2c787a4a-de82-4bbd-96ec-823ec1854c6d",
            "sourceColumn": "[Año]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Mes numero",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "25082c50-757c-4810-85cc-257425cf867e",
            "sourceColumn": "[Mes numero]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "Día",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "e77af791-7c91-4929-a5d1-1676c804a168",
            "sourceColumn": "[Día]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          },
          {
            "name": "yyyymmdd",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "isDataTypeInferred": true,
            "isNameInferred": true,
            "lineageTag": "375f85ba-2d3c-4dce-a851-7f0cc2c4cda6",
            "sourceColumn": "[yyyymmdd]",
            "summarizeBy": "none",
            "type": "calculatedTableColumn"
          }
        ],
        "lineageTag": "96571e22-24f4-4380-8ab7-67f46f47b0ec",
        "partitions": [
          {
            "name": "xCalendario new",
            "mode": "import",
            "source": {
              "expression": [
                "",
                "ADDCOLUMNS (",
                "    CALENDAR (",
                "        DATE ( YEAR ( MIN ( 'Impresora Cierres'[Día de venta] ) ), 1, 1 ),",
                "        DATE ( YEAR ( MAX ( 'Impresora Cierres'[Día de venta] ) ), 12, 31 )",
                "    ),",
                "    \"yyyymmdd\", FORMAT ( [Date], \"YYYYMMDD\" ),",
                "    \"yyyymm\", FORMAT ( [Date], \"YYYYMM\" ),",
                "    \"Año\", YEAR ( [Date] ),",
                "    \"Mes numero\", MONTH ( [Date] ),",
                "    \"Día\", DAY ( [Date] )",
                ")",
                ""
              ],
              "type": "calculated"
            }
          }
        ]
      }
    ]
  }
}